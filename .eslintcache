[{"C:\\Users\\user\\Desktop\\store\\src\\index.js":"1","C:\\Users\\user\\Desktop\\store\\src\\reportWebVitals.js":"2","C:\\Users\\user\\Desktop\\store\\src\\App.js":"3","C:\\Users\\user\\Desktop\\store\\src\\redux\\store\\store.js":"4","C:\\Users\\user\\Desktop\\store\\src\\redux\\root\\root-reducer.js":"5","C:\\Users\\user\\Desktop\\store\\src\\component\\verification\\verification.component.jsx":"6","C:\\Users\\user\\Desktop\\store\\src\\component\\topbar\\topbar.component.jsx":"7","C:\\Users\\user\\Desktop\\store\\src\\page\\homepage\\home.page.jsx":"8","C:\\Users\\user\\Desktop\\store\\src\\component\\sidebar\\sidebar.component.jsx":"9","C:\\Users\\user\\Desktop\\store\\src\\page\\loginpage\\login.page.jsx":"10","C:\\Users\\user\\Desktop\\store\\src\\page\\fulfillpage\\fulfill.page.jsx":"11","C:\\Users\\user\\Desktop\\store\\src\\page\\requestlistpage\\requestlist.page.jsx":"12","C:\\Users\\user\\Desktop\\store\\src\\page\\usermanagementpage\\usermanagement.page.jsx":"13","C:\\Users\\user\\Desktop\\store\\src\\component\\addUser\\adduser.component.jsx":"14","C:\\Users\\user\\Desktop\\store\\src\\component\\addItem\\addItem.component.jsx":"15","C:\\Users\\user\\Desktop\\store\\src\\component\\deleteUser\\deleteuser.component.jsx":"16","C:\\Users\\user\\Desktop\\store\\src\\page\\storelistpage\\storelist.page.jsx":"17","C:\\Users\\user\\Desktop\\store\\src\\page\\requestitempage\\request_item.page.jsx":"18","C:\\Users\\user\\Desktop\\store\\src\\page\\edititempage\\edititem.page.jsx":"19","C:\\Users\\user\\Desktop\\store\\src\\redux\\verification\\verification.reducer.js":"20","C:\\Users\\user\\Desktop\\store\\src\\redux\\requestitem\\requestitem.reducer.js":"21","C:\\Users\\user\\Desktop\\store\\src\\redux\\verification\\verification.action.js":"22","C:\\Users\\user\\Desktop\\store\\src\\redux\\user\\user.reducer.js":"23","C:\\Users\\user\\Desktop\\store\\src\\redux\\storeitem\\storeitem.reducer.js":"24","C:\\Users\\user\\Desktop\\store\\src\\redux\\user\\user.action.js":"25","C:\\Users\\user\\Desktop\\store\\src\\redux\\requestitem\\requestitem.action.js":"26","C:\\Users\\user\\Desktop\\store\\src\\redux\\storeitem\\storeitem.action.js":"27","C:\\Users\\user\\Desktop\\store\\src\\component\\lineChart\\lineChart.component.jsx":"28","C:\\Users\\user\\Desktop\\store\\src\\component\\pieChart\\piechart.component.jsx":"29","C:\\Users\\user\\Desktop\\store\\src\\component\\request_item_summary\\request_item_summary.component.jsx":"30","C:\\Users\\user\\Desktop\\store\\src\\redux\\verification\\verification.constant.js":"31","C:\\Users\\user\\Desktop\\store\\src\\redux\\storeitem\\storeitem.constant.js":"32","C:\\Users\\user\\Desktop\\store\\src\\redux\\user\\user.constant.js":"33","C:\\Users\\user\\Desktop\\store\\src\\redux\\url\\url.reducer.js":"34","C:\\Users\\user\\Desktop\\store\\src\\redux\\url\\url.constant.js":"35","C:\\Users\\user\\Desktop\\store\\src\\redux\\url\\url.action.js":"36","C:\\Users\\user\\Desktop\\store\\src\\redux\\requestitem\\requestitem.constant.js":"37","C:\\Users\\user\\Desktop\\store\\src\\redux\\fulfillrequest\\fulfillrequest.reducer.js":"38","C:\\Users\\user\\Desktop\\store\\src\\redux\\fulfillrequest\\fulfillrequest.constant.js":"39","C:\\Users\\user\\Desktop\\store\\src\\redux\\fulfillrequest\\fulfillrequest.action.js":"40","C:\\Users\\user\\Desktop\\store\\src\\redux\\chart\\chart.reducer.js":"41","C:\\Users\\user\\Desktop\\store\\src\\redux\\chart\\chart.constant.js":"42","C:\\Users\\user\\Desktop\\store\\src\\redux\\chart\\chart.action.js":"43"},{"size":697,"mtime":1611300742171,"results":"44","hashOfConfig":"45"},{"size":375,"mtime":1608036272587,"results":"46","hashOfConfig":"45"},{"size":2538,"mtime":1611478235314,"results":"47","hashOfConfig":"45"},{"size":308,"mtime":1610946309759,"results":"48","hashOfConfig":"45"},{"size":820,"mtime":1611479687739,"results":"49","hashOfConfig":"45"},{"size":2321,"mtime":1610953943445,"results":"50","hashOfConfig":"45"},{"size":275,"mtime":1608036272583,"results":"51","hashOfConfig":"45"},{"size":3200,"mtime":1611491676675,"results":"52","hashOfConfig":"45"},{"size":808,"mtime":1611477626665,"results":"53","hashOfConfig":"45"},{"size":1223,"mtime":1610722158413,"results":"54","hashOfConfig":"45"},{"size":3445,"mtime":1611478832687,"results":"55","hashOfConfig":"45"},{"size":2580,"mtime":1611478487682,"results":"56","hashOfConfig":"45"},{"size":2638,"mtime":1611240464908,"results":"57","hashOfConfig":"45"},{"size":3610,"mtime":1611239643758,"results":"58","hashOfConfig":"45"},{"size":3882,"mtime":1611235208149,"results":"59","hashOfConfig":"45"},{"size":2646,"mtime":1611243338597,"results":"60","hashOfConfig":"45"},{"size":2882,"mtime":1611240488655,"results":"61","hashOfConfig":"45"},{"size":5675,"mtime":1611414936035,"results":"62","hashOfConfig":"45"},{"size":4221,"mtime":1611236459588,"results":"63","hashOfConfig":"45"},{"size":1542,"mtime":1611243472785,"results":"64","hashOfConfig":"45"},{"size":4284,"mtime":1611478113720,"results":"65","hashOfConfig":"45"},{"size":1550,"mtime":1611097847372,"results":"66","hashOfConfig":"45"},{"size":2464,"mtime":1611240929501,"results":"67","hashOfConfig":"45"},{"size":2632,"mtime":1611235208155,"results":"68","hashOfConfig":"45"},{"size":4875,"mtime":1611292157434,"results":"69","hashOfConfig":"45"},{"size":5250,"mtime":1611478172102,"results":"70","hashOfConfig":"45"},{"size":4489,"mtime":1611240510469,"results":"71","hashOfConfig":"45"},{"size":1262,"mtime":1610722158408,"results":"72","hashOfConfig":"45"},{"size":1297,"mtime":1611486995227,"results":"73","hashOfConfig":"45"},{"size":1156,"mtime":1610370525424,"results":"74","hashOfConfig":"45"},{"size":299,"mtime":1610959784892,"results":"75","hashOfConfig":"45"},{"size":763,"mtime":1611235208155,"results":"76","hashOfConfig":"45"},{"size":879,"mtime":1611240999257,"results":"77","hashOfConfig":"45"},{"size":550,"mtime":1611236087216,"results":"78","hashOfConfig":"45"},{"size":127,"mtime":1611236065044,"results":"79","hashOfConfig":"45"},{"size":227,"mtime":1611236030999,"results":"80","hashOfConfig":"45"},{"size":942,"mtime":1611478079018,"results":"81","hashOfConfig":"45"},{"size":1507,"mtime":1611472463780,"results":"82","hashOfConfig":"45"},{"size":406,"mtime":1611470763445,"results":"83","hashOfConfig":"45"},{"size":2750,"mtime":1611471665537,"results":"84","hashOfConfig":"45"},{"size":1699,"mtime":1611491754128,"results":"85","hashOfConfig":"45"},{"size":371,"mtime":1611491452866,"results":"86","hashOfConfig":"45"},{"size":2066,"mtime":1611491608733,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"bvn2ba",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"90"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"90"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Desktop\\store\\src\\index.js",[],["180","181"],"C:\\Users\\user\\Desktop\\store\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\store\\src\\App.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\store\\store.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\root\\root-reducer.js",[],"C:\\Users\\user\\Desktop\\store\\src\\component\\verification\\verification.component.jsx",[],"C:\\Users\\user\\Desktop\\store\\src\\component\\topbar\\topbar.component.jsx",[],"C:\\Users\\user\\Desktop\\store\\src\\page\\homepage\\home.page.jsx",["182","183","184","185"],"C:\\Users\\user\\Desktop\\store\\src\\component\\sidebar\\sidebar.component.jsx",[],"C:\\Users\\user\\Desktop\\store\\src\\page\\loginpage\\login.page.jsx",[],"C:\\Users\\user\\Desktop\\store\\src\\page\\fulfillpage\\fulfill.page.jsx",["186"],"C:\\Users\\user\\Desktop\\store\\src\\page\\requestlistpage\\requestlist.page.jsx",["187"],"C:\\Users\\user\\Desktop\\store\\src\\page\\usermanagementpage\\usermanagement.page.jsx",["188"],"import React, { useEffect } from 'react'\r\nimport './usermanagement.scss'\r\n\r\nimport { Button, Table, Spinner } from 'react-bootstrap'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { SHOW_VERIFICATION_COMPONENT } from '../../redux/verification/verification.action'\r\nimport { FETCH_USERS_ASYNC } from '../../redux/user/user.action'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst UserManagementPage = ({ userList, showVerification, fetchUsers, is_fetching, redirectTo }) => {\r\n\r\n    useEffect(() => {\r\n        fetchUsers()\r\n    }, [])\r\n\r\n    const history = useHistory()\r\n\r\n    if(redirectTo === \"reload\"){\r\n        history.go(0)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {\r\n            is_fetching ? <Spinner animation=\"border\" variant=\"success\" />\r\n            :\r\n            <div className=\"user_management_page\">\r\n                <h2 className=\"user_management_title\">User List</h2>\r\n                <Button variant='info' className='addUser_btn' onClick={() => showVerification(null)}>Add User</Button>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Role</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                        userList.map(user => {\r\n                            return (\r\n                                <tr key={user.id}>\r\n                                    <td>{user.id}</td>\r\n                                    <td>{user.name}</td>\r\n                                    <td>{user.email}</td>\r\n                                    <td>{user.role}</td>\r\n                                    <td><Button variant=\"danger\" onClick={() => showVerification(user.id)}>Delete</Button></td>\r\n                                </tr>\r\n                            )\r\n                        }) \r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userList: state.UserReducer.user_list,\r\n    is_fetching: state.UserReducer.is_fetching,\r\n    redirectTo: state.UrlReducer.redirectLink\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    showVerification: (id) => dispatch(SHOW_VERIFICATION_COMPONENT(id)),\r\n    fetchUsers: () => dispatch(FETCH_USERS_ASYNC())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManagementPage)","C:\\Users\\user\\Desktop\\store\\src\\component\\addUser\\adduser.component.jsx",[],"C:\\Users\\user\\Desktop\\store\\src\\component\\addItem\\addItem.component.jsx",[],"C:\\Users\\user\\Desktop\\store\\src\\component\\deleteUser\\deleteuser.component.jsx",["189"],"import React, { useEffect } from 'react'\r\nimport './deleteuser.scss'\r\n\r\nimport { Button, Form, Spinner } from 'react-bootstrap'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { RESET_AUTHORIZED } from '../../redux/verification/verification.action'\r\nimport { DELETE_USER_ASYNC, FETCH_SINGLEUSER_ASYNC } from '../../redux/user/user.action'\r\n\r\nconst DeleteUser = ({ singleUser, fetchUser, authorized, capturedID, resetAuthorized, deleteUserAsync, isDeleting }) => {\r\n    useEffect(() => {\r\n        fetchUser(capturedID)\r\n    }, [capturedID])\r\n\r\n    return (\r\n        <div>\r\n        {\r\n            authorized && capturedID !== null ?\r\n            singleUser.length > 0 ?\r\n            <div>\r\n                <div className=\"deleteuser-background\" onClick={()=> resetAuthorized()}></div>\r\n                <div className=\"deleteuser-container\">\r\n                <h3>Confirm Delete?</h3>\r\n                <Form>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" value={singleUser[0].email} readOnly/>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type=\"text\" value={singleUser[0].name} readOnly/>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                        <Form.Label>Role</Form.Label>\r\n                        <Form.Control type=\"text\" value={singleUser[0].role} readOnly/>\r\n                    </Form.Group>\r\n                    <Button variant=\"danger\" type=\"button\" onClick={() => deleteUserAsync(capturedID)}>\r\n                        Delete\r\n                        {isDeleting ? <Spinner animation=\"border\" variant=\"success\" />: null}\r\n                    </Button>\r\n                </Form>\r\n                </div>\r\n            </div>: <Spinner />\r\n            : null\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authorized: state.verificationReducer.authorized,\r\n    capturedID: state.verificationReducer.capturedID,\r\n    isDeleting: state.UserReducer.is_deleting,\r\n    isFetching: state.UserReducer.is_fetching,\r\n    singleUser: state.UserReducer.singleUser\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    resetAuthorized: () => dispatch(RESET_AUTHORIZED()),\r\n    deleteUserAsync: (user_id) => dispatch(DELETE_USER_ASYNC(user_id)),\r\n    fetchUser: (user_id) => dispatch(FETCH_SINGLEUSER_ASYNC(user_id))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteUser)","C:\\Users\\user\\Desktop\\store\\src\\page\\storelistpage\\storelist.page.jsx",["190"],"import React, {useEffect} from 'react'\r\nimport './storelist.scss'\r\n\r\nimport { Table, Button, Spinner } from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom' \r\n\r\nimport { connect } from 'react-redux'\r\nimport {DISPLAY_ADDITEM_COMPONENT, FETCH_ITEM_ASYNC} from '../../redux/storeitem/storeitem.action'\r\n\r\nconst StoreListPage = ({ toggleAddItem, fetchItem, storeItem, isFetching, redirectTo }) => {\r\n\r\n    useEffect(() => {\r\n        fetchItem()\r\n    },[])\r\n    \r\n    const history = useHistory()\r\n\r\n    // START - To reload this page after use add the item\r\n    if(redirectTo === 'reload'){\r\n        history.go(0)\r\n    }\r\n    // END - To reload this page after use add the item\r\n\r\n    return (\r\n        <div className=\"storelist_page\">\r\n            <h2 className=\"storelist_title\">Inhouse List</h2>\r\n            <Button variant='info' className='addItem_btn' onClick={toggleAddItem}>Add Item</Button>\r\n            {\r\n                isFetching? <Spinner animation=\"border\" variant=\"success\" />\r\n                :<Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Item</th>\r\n                            <th>Available Quantities</th>\r\n                            <th>Reserved Quantities</th>\r\n                            <th>Brand</th>\r\n                            <th>Notice</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            storeItem.map(each => {\r\n                                return (\r\n                                    <tr>\r\n                                        <td>{each.item_id}</td>\r\n                                        <td>{each.item_name}</td>\r\n                                        <td>{each.available_quantity}</td>\r\n                                        <td>{each.reserved_quantity}</td>\r\n                                        <td>{each.brand}</td>\r\n                                        <td>{each.notice}</td>\r\n                                        <td><Link to={`/edit/${each.item_id}`}>Edit</Link></td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    storeItem: state.StoreItemReducer.storeItem,\r\n    isFetching: state.StoreItemReducer.is_fetching,\r\n    redirectTo: state.UrlReducer.redirectLink\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    toggleAddItem: () => dispatch(DISPLAY_ADDITEM_COMPONENT),\r\n    fetchItem: () => dispatch(FETCH_ITEM_ASYNC())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StoreListPage)","C:\\Users\\user\\Desktop\\store\\src\\page\\requestitempage\\request_item.page.jsx",["191"],"import { Table } from 'react-bootstrap'\r\nimport React, { useState, useEffect } from 'react'\r\nimport './request_item.scss'\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport Datetime from 'react-datetime'\r\n\r\n\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport RequestItemSummary from '../../component/request_item_summary/request_item_summary.component'\r\n\r\nimport { Button, Form, Spinner } from 'react-bootstrap'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { ADD_TO_SUMMARY, SUBMIT_REQUEST_ASYNC } from '../../redux/requestitem/requestitem.action'\r\nimport { FETCH_ITEM_ASYNC } from '../../redux/storeitem/storeitem.action'\r\n\r\nconst RequestItemPage = ({add_to_summary, fetch_items, errorMessage, isFetching, redirectTo, storeItems, summaryItems, submit_request}) => {\r\n\r\n    const [request_quantity, handleRequestQuantity] = useState({})\r\n    const [project_name, handleProjectName] = useState('')\r\n    const [collection_date, handleCollectionDate] = useState('')\r\n\r\n    const handleDynamicInput = (event, item_name) => handleRequestQuantity({\r\n        ...request_quantity,\r\n        [item_name]: event.target.value\r\n    })\r\n\r\n    useEffect(() => {\r\n        fetch_items()\r\n    }, [])\r\n\r\n    if(redirectTo.length !== 0){\r\n        return <Redirect to={redirectTo} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {\r\n            isFetching ? <Spinner animation=\"border\" variant=\"success\" />\r\n            :\r\n            <div className='request_item_page'>\r\n                <div className='request_content'>\r\n                    <h2>Request Item</h2>\r\n                    <div className='request_item_others'>\r\n                        <div className='request_item_projectContainer'>\r\n                            <label htmlFor='project'>Project:</label>\r\n                            <input type='text' onChange={(event) => handleProjectName(event.target.value)}></input>\r\n                        </div>\r\n                        <div className='request_item_collectiondateContainer'>\r\n                            <label htmlFor='request_item_collectiondate'>Collection Date:</label>\r\n                            <Datetime inputProps={{\r\n                                placeholder: \"Collection Date & Time\"\r\n                            }} \r\n                                onChange={handleCollectionDate}\r\n                                utc={true}\r\n                                initialValue=\"\"\r\n                                name=\"request_item_collectiondate\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Item Name</th>\r\n                                <th>Available Quantities</th>\r\n                                <th>Notice</th>\r\n                                <th>Request Quantities</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                storeItems.map(item => {\r\n                                    return (\r\n                                        <tr key={item.item_id}>\r\n                                            <td>{item.item_id}</td>\r\n                                            <td>{item.item_name}</td>\r\n                                            <td>{item.available_quantity}</td>\r\n                                            <td>{item.notice}</td>\r\n                                            <td>\r\n                                                <Form.Control type='number' min='0' id={item.item_id} onChange={(event) => handleDynamicInput(event, item.item_name)}></Form.Control>\r\n                                            </td>\r\n                                            <td><Button variant=\"primary\" onClick={() => add_to_summary({name: item.item_name, quantity: request_quantity[item.item_name], \"item_id\": item.item_id})}>Add</Button></td>\r\n                                        </tr> \r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                    <Button variant=\"success\" type=\"button\"\r\n                        onClick={() => submit_request({\r\n                            \"collection_date\": collection_date,\r\n                            \"project_name\": project_name,\r\n                            \"item_details\": summaryItems,\r\n                            \"requestor\": \"Jeffrey\"\r\n                        })}\r\n                    >Submit Request</Button>\r\n                    {errorMessage ? <p className=\"errorMessage\">{errorMessage}</p> : null}\r\n                </div>\r\n                <div className='request_item_summary'>\r\n                    <RequestItemSummary />\r\n                </div>\r\n            </div>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    summaryItems: state.RequestItemReducer.summaryItems,\r\n    storeItems: state.StoreItemReducer.storeItem,\r\n    isFetching: state.StoreItemReducer.is_fetching,\r\n    redirectTo: state.UrlReducer.redirectLink,\r\n    errorMessage: state.RequestItemReducer.errorMessage\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    add_to_summary: (item) => dispatch(ADD_TO_SUMMARY(item)),\r\n    fetch_items: () => dispatch(FETCH_ITEM_ASYNC()),\r\n    submit_request: (dataObj) => dispatch(SUBMIT_REQUEST_ASYNC(dataObj))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestItemPage)","C:\\Users\\user\\Desktop\\store\\src\\page\\edititempage\\edititem.page.jsx",["192"],"import React, { useState, useEffect } from 'react'\r\nimport './edititem.scss'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Form, Button, Spinner } from 'react-bootstrap'\r\nimport { useParams, Redirect } from 'react-router-dom'\r\n\r\nimport { FETCH_SINGLEITEM_ASYNC, UPDATE_SINGLEITEM_ASYNC } from '../../redux/storeitem/storeitem.action'\r\n\r\nconst EditItemPage = ({ itemDetail, fetchDetail, singleItemFetching, updateItem, redirectTo }) => {\r\n    const { item_id } = useParams()\r\n\r\n    const [new_quantity, handleNewQuantity] = useState(0)\r\n    const [reserved_quantity, handleReservedQuantity] = useState(0)\r\n\r\n\r\n    useEffect(() => {\r\n        fetchDetail(item_id)\r\n    }, [])\r\n\r\n    if(redirectTo.length !== 0){\r\n        return <Redirect to={`${redirectTo}`}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                itemDetail.length > 0 ?\r\n                <div className='edititem_page'>\r\n                    <h2 className=\"edititem_title\">Edit Item {item_id}</h2>\r\n                    {\r\n                        singleItemFetching ? <Spinner animation=\"border\" variant=\"success\" />\r\n                        :\r\n                        <Form>\r\n                            <Form.Group>\r\n                                <Form.Label><span>Item Name:</span> </Form.Label>\r\n                                <Form.Control plaintext readOnly defaultValue={itemDetail[0].item_name} />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label><span>Previous Available Quantities:</span> </Form.Label>\r\n                                <Form.Control plaintext readOnly defaultValue={itemDetail[0].available_quantity} />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label><span>Previous Reserved Quantities:</span> </Form.Label>\r\n                                <Form.Control plaintext readOnly defaultValue={itemDetail[0].reserved_quantity} />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label><span>Brand:</span> </Form.Label>\r\n                                <Form.Control plaintext readOnly defaultValue={itemDetail[0].brand} />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label><span>Current Available Quantities:</span> </Form.Label>\r\n                                <Form.Control size='sm' type=\"number\" placeholder=\"Current available quantities\" min='0' onChange={(e) => handleNewQuantity(e.target.value)} />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label><span>Current Reserved Quantities:</span> </Form.Label>\r\n                                <Form.Control size='sm' type=\"number\" placeholder=\"Current reserved quantities\" min='0' onChange={(e) => handleReservedQuantity(e.target.value)} />\r\n                            </Form.Group>\r\n                            <Button variant=\"success\" type=\"button\" \r\n                            onClick={() => updateItem({\r\n                                    \"item_id\": item_id,\r\n                                    \"available_quantity\": new_quantity,\r\n                                    \"reserved_quantity\": reserved_quantity\r\n                                    })\r\n                                }\r\n                            >\r\n                                Save & Edit\r\n                            </Button>\r\n                        </Form>            \r\n                    }\r\n                </div>: <Spinner animation=\"border\" variant=\"success\" />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    itemDetail: state.StoreItemReducer.singleItem,\r\n    singleItemFetching: state.StoreItemReducer.singleItem_is_fetching,\r\n    redirectTo: state.UrlReducer.redirectLink\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchDetail: (id) => dispatch(FETCH_SINGLEITEM_ASYNC(id)),\r\n    updateItem: (obj) => dispatch(UPDATE_SINGLEITEM_ASYNC(obj))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditItemPage)","C:\\Users\\user\\Desktop\\store\\src\\redux\\verification\\verification.reducer.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\requestitem\\requestitem.reducer.js",["193"],"C:\\Users\\user\\Desktop\\store\\src\\redux\\verification\\verification.action.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\user\\user.reducer.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\storeitem\\storeitem.reducer.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\user\\user.action.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\requestitem\\requestitem.action.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\storeitem\\storeitem.action.js",[],"C:\\Users\\user\\Desktop\\store\\src\\component\\lineChart\\lineChart.component.jsx",[],"C:\\Users\\user\\Desktop\\store\\src\\component\\pieChart\\piechart.component.jsx",[],"C:\\Users\\user\\Desktop\\store\\src\\component\\request_item_summary\\request_item_summary.component.jsx",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\verification\\verification.constant.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\storeitem\\storeitem.constant.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\user\\user.constant.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\url\\url.reducer.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\url\\url.constant.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\url\\url.action.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\requestitem\\requestitem.constant.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\fulfillrequest\\fulfillrequest.reducer.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\fulfillrequest\\fulfillrequest.constant.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\fulfillrequest\\fulfillrequest.action.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\chart\\chart.reducer.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\chart\\chart.constant.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\chart\\chart.action.js",[],{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":20,"column":87,"nodeType":"200","messageId":"201","endLine":20,"endColumn":88},{"ruleId":"202","severity":1,"message":"203","line":25,"column":8,"nodeType":"204","endLine":25,"endColumn":10,"suggestions":"205"},{"ruleId":"206","severity":1,"message":"207","line":29,"column":12,"nodeType":"208","messageId":"209","endLine":29,"endColumn":25},{"ruleId":"206","severity":1,"message":"210","line":30,"column":12,"nodeType":"208","messageId":"209","endLine":30,"endColumn":23},{"ruleId":"202","severity":1,"message":"211","line":17,"column":8,"nodeType":"204","endLine":17,"endColumn":20,"suggestions":"212"},{"ruleId":"202","severity":1,"message":"213","line":22,"column":8,"nodeType":"204","endLine":22,"endColumn":18,"suggestions":"214"},{"ruleId":"202","severity":1,"message":"215","line":15,"column":8,"nodeType":"204","endLine":15,"endColumn":10,"suggestions":"216"},{"ruleId":"202","severity":1,"message":"217","line":13,"column":8,"nodeType":"204","endLine":13,"endColumn":20,"suggestions":"218"},{"ruleId":"202","severity":1,"message":"219","line":14,"column":7,"nodeType":"204","endLine":14,"endColumn":9,"suggestions":"220"},{"ruleId":"202","severity":1,"message":"221","line":31,"column":8,"nodeType":"204","endLine":31,"endColumn":10,"suggestions":"222"},{"ruleId":"202","severity":1,"message":"223","line":20,"column":8,"nodeType":"204","endLine":20,"endColumn":10,"suggestions":"224"},{"ruleId":"225","severity":1,"message":"226","line":18,"column":54,"nodeType":"227","messageId":"228","endLine":18,"endColumn":56},"no-native-reassign",["229"],"no-negated-in-lhs",["230"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'defaultStartDate', 'fetch_line', 'fetch_pie', and 'todayDate'. Either include them or remove the dependency array. If 'fetch_pie' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["231"],"no-unused-vars","'lineStartDate' is assigned a value but never used.","Identifier","unusedVar","'lineEndDate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchSingleRequest'. Either include it or remove the dependency array. If 'fetchSingleRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["232"],"React Hook useEffect has missing dependencies: 'fetch_fulfilled_requests' and 'fetch_requests'. Either include them or remove the dependency array. If 'fetch_requests' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["233"],"React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array. If 'fetchUsers' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["234"],"React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array. If 'fetchUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["235"],"React Hook useEffect has a missing dependency: 'fetchItem'. Either include it or remove the dependency array. If 'fetchItem' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["236"],"React Hook useEffect has a missing dependency: 'fetch_items'. Either include it or remove the dependency array. If 'fetch_items' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["237"],"React Hook useEffect has missing dependencies: 'fetchDetail' and 'item_id'. Either include them or remove the dependency array. If 'fetchDetail' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["238"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},"Update the dependencies array to be: [defaultStartDate, fetch_line, fetch_pie, todayDate]",{"range":"255","text":"256"},"Update the dependencies array to be: [fetchSingleRequest, request_id]",{"range":"257","text":"258"},"Update the dependencies array to be: [fetch_fulfilled_requests, fetch_requests, location]",{"range":"259","text":"260"},"Update the dependencies array to be: [fetchUsers]",{"range":"261","text":"262"},"Update the dependencies array to be: [capturedID, fetchUser]",{"range":"263","text":"264"},"Update the dependencies array to be: [fetchItem]",{"range":"265","text":"266"},"Update the dependencies array to be: [fetch_items]",{"range":"267","text":"268"},"Update the dependencies array to be: [fetchDetail, item_id]",{"range":"269","text":"270"},[863,865],"[defaultStartDate, fetch_line, fetch_pie, todayDate]",[691,703],"[fetchSingleRequest, request_id]",[672,682],"[fetch_fulfilled_requests, fetch_requests, location]",[539,541],"[fetchUsers]",[527,539],"[capturedID, fetchUser]",[470,472],"[fetchItem]",[1192,1194],"[fetch_items]",[676,678],"[fetchDetail, item_id]"]