[{"C:\\Users\\user\\Desktop\\store\\src\\index.js":"1","C:\\Users\\user\\Desktop\\store\\src\\reportWebVitals.js":"2","C:\\Users\\user\\Desktop\\store\\src\\App.js":"3","C:\\Users\\user\\Desktop\\store\\src\\redux\\store\\store.js":"4","C:\\Users\\user\\Desktop\\store\\src\\redux\\root\\root-reducer.js":"5","C:\\Users\\user\\Desktop\\store\\src\\component\\topbar\\topbar.component.jsx":"6","C:\\Users\\user\\Desktop\\store\\src\\component\\addItem\\addItem.component.jsx":"7","C:\\Users\\user\\Desktop\\store\\src\\component\\sidebar\\sidebar.component.jsx":"8","C:\\Users\\user\\Desktop\\store\\src\\component\\verification\\verification.component.jsx":"9","C:\\Users\\user\\Desktop\\store\\src\\component\\addUser\\adduser.component.jsx":"10","C:\\Users\\user\\Desktop\\store\\src\\component\\deleteUser\\deleteuser.component.jsx":"11","C:\\Users\\user\\Desktop\\store\\src\\page\\requestlistpage\\requestlist.page.jsx":"12","C:\\Users\\user\\Desktop\\store\\src\\page\\loginpage\\login.page.jsx":"13","C:\\Users\\user\\Desktop\\store\\src\\page\\requestitempage\\request_item.page.jsx":"14","C:\\Users\\user\\Desktop\\store\\src\\page\\storelistpage\\storelist.page.jsx":"15","C:\\Users\\user\\Desktop\\store\\src\\page\\usermanagementpage\\usermanagement.page.jsx":"16","C:\\Users\\user\\Desktop\\store\\src\\page\\homepage\\home.page.jsx":"17","C:\\Users\\user\\Desktop\\store\\src\\page\\fulfillpage\\fulfill.page.jsx":"18","C:\\Users\\user\\Desktop\\store\\src\\page\\edititempage\\edititem.page.jsx":"19","C:\\Users\\user\\Desktop\\store\\src\\redux\\requestitem\\requestitem.reducer.js":"20","C:\\Users\\user\\Desktop\\store\\src\\redux\\user\\user.reducer.js":"21","C:\\Users\\user\\Desktop\\store\\src\\redux\\storeitem\\storeitem.reducer.js":"22","C:\\Users\\user\\Desktop\\store\\src\\redux\\chart\\chart.reducer.js":"23","C:\\Users\\user\\Desktop\\store\\src\\redux\\verification\\verification.reducer.js":"24","C:\\Users\\user\\Desktop\\store\\src\\redux\\url\\url.reducer.js":"25","C:\\Users\\user\\Desktop\\store\\src\\redux\\fulfillrequest\\fulfillrequest.reducer.js":"26","C:\\Users\\user\\Desktop\\store\\src\\redux\\storeitem\\storeitem.action.js":"27","C:\\Users\\user\\Desktop\\store\\src\\redux\\verification\\verification.action.js":"28","C:\\Users\\user\\Desktop\\store\\src\\redux\\user\\user.action.js":"29","C:\\Users\\user\\Desktop\\store\\src\\redux\\requestitem\\requestitem.action.js":"30","C:\\Users\\user\\Desktop\\store\\src\\redux\\chart\\chart.action.js":"31","C:\\Users\\user\\Desktop\\store\\src\\redux\\fulfillrequest\\fulfillrequest.action.js":"32","C:\\Users\\user\\Desktop\\store\\src\\component\\request_item_summary\\request_item_summary.component.jsx":"33","C:\\Users\\user\\Desktop\\store\\src\\redux\\storeitem\\storeitem.constant.js":"34","C:\\Users\\user\\Desktop\\store\\src\\component\\pieChart\\piechart.component.jsx":"35","C:\\Users\\user\\Desktop\\store\\src\\component\\lineChart\\lineChart.component.jsx":"36","C:\\Users\\user\\Desktop\\store\\src\\redux\\requestitem\\requestitem.constant.js":"37","C:\\Users\\user\\Desktop\\store\\src\\redux\\chart\\chart.constant.js":"38","C:\\Users\\user\\Desktop\\store\\src\\redux\\url\\url.constant.js":"39","C:\\Users\\user\\Desktop\\store\\src\\redux\\verification\\verification.constant.js":"40","C:\\Users\\user\\Desktop\\store\\src\\redux\\fulfillrequest\\fulfillrequest.constant.js":"41","C:\\Users\\user\\Desktop\\store\\src\\redux\\url\\url.action.js":"42","C:\\Users\\user\\Desktop\\store\\src\\redux\\user\\user.constant.js":"43","C:\\Users\\user\\Desktop\\store\\src\\component\\table\\table.component.jsx":"44"},{"size":847,"mtime":1611584357271,"results":"45","hashOfConfig":"46"},{"size":375,"mtime":1608036272587,"results":"47","hashOfConfig":"46"},{"size":2538,"mtime":1611478235314,"results":"48","hashOfConfig":"46"},{"size":308,"mtime":1610946309759,"results":"49","hashOfConfig":"46"},{"size":820,"mtime":1611479687739,"results":"50","hashOfConfig":"46"},{"size":275,"mtime":1608036272583,"results":"51","hashOfConfig":"46"},{"size":3882,"mtime":1611235208149,"results":"52","hashOfConfig":"46"},{"size":808,"mtime":1611477626665,"results":"53","hashOfConfig":"46"},{"size":2321,"mtime":1610953943445,"results":"54","hashOfConfig":"46"},{"size":3610,"mtime":1611239643758,"results":"55","hashOfConfig":"46"},{"size":2646,"mtime":1611243338597,"results":"56","hashOfConfig":"46"},{"size":2580,"mtime":1611478487682,"results":"57","hashOfConfig":"46"},{"size":1223,"mtime":1610722158413,"results":"58","hashOfConfig":"46"},{"size":5675,"mtime":1611414936035,"results":"59","hashOfConfig":"46"},{"size":2882,"mtime":1611584057221,"results":"60","hashOfConfig":"46"},{"size":2638,"mtime":1611240464908,"results":"61","hashOfConfig":"46"},{"size":4188,"mtime":1611583263675,"results":"62","hashOfConfig":"46"},{"size":3661,"mtime":1611579341796,"results":"63","hashOfConfig":"46"},{"size":4963,"mtime":1611579341795,"results":"64","hashOfConfig":"46"},{"size":4284,"mtime":1611478113720,"results":"65","hashOfConfig":"46"},{"size":2464,"mtime":1611240929501,"results":"66","hashOfConfig":"46"},{"size":2632,"mtime":1611235208155,"results":"67","hashOfConfig":"46"},{"size":1699,"mtime":1611491754128,"results":"68","hashOfConfig":"46"},{"size":1542,"mtime":1611243472785,"results":"69","hashOfConfig":"46"},{"size":550,"mtime":1611236087216,"results":"70","hashOfConfig":"46"},{"size":1507,"mtime":1611472463780,"results":"71","hashOfConfig":"46"},{"size":4489,"mtime":1611240510469,"results":"72","hashOfConfig":"46"},{"size":1550,"mtime":1611097847372,"results":"73","hashOfConfig":"46"},{"size":4875,"mtime":1611292157434,"results":"74","hashOfConfig":"46"},{"size":5250,"mtime":1611478172102,"results":"75","hashOfConfig":"46"},{"size":2066,"mtime":1611491608733,"results":"76","hashOfConfig":"46"},{"size":2750,"mtime":1611471665537,"results":"77","hashOfConfig":"46"},{"size":1156,"mtime":1610370525424,"results":"78","hashOfConfig":"46"},{"size":763,"mtime":1611235208155,"results":"79","hashOfConfig":"46"},{"size":1297,"mtime":1611486995227,"results":"80","hashOfConfig":"46"},{"size":1042,"mtime":1611579341795,"results":"81","hashOfConfig":"46"},{"size":942,"mtime":1611478079018,"results":"82","hashOfConfig":"46"},{"size":371,"mtime":1611491452866,"results":"83","hashOfConfig":"46"},{"size":127,"mtime":1611236065044,"results":"84","hashOfConfig":"46"},{"size":299,"mtime":1610959784892,"results":"85","hashOfConfig":"46"},{"size":406,"mtime":1611470763445,"results":"86","hashOfConfig":"46"},{"size":227,"mtime":1611236030999,"results":"87","hashOfConfig":"46"},{"size":879,"mtime":1611240999257,"results":"88","hashOfConfig":"46"},{"size":1540,"mtime":1611586916876,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bvn2ba",{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"94"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"94"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"94"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Desktop\\store\\src\\index.js",[],"C:\\Users\\user\\Desktop\\store\\src\\reportWebVitals.js",[],["187","188"],"C:\\Users\\user\\Desktop\\store\\src\\App.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\store\\store.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\root\\root-reducer.js",[],"C:\\Users\\user\\Desktop\\store\\src\\component\\topbar\\topbar.component.jsx",[],"C:\\Users\\user\\Desktop\\store\\src\\component\\addItem\\addItem.component.jsx",[],"C:\\Users\\user\\Desktop\\store\\src\\component\\sidebar\\sidebar.component.jsx",[],"C:\\Users\\user\\Desktop\\store\\src\\component\\verification\\verification.component.jsx",[],"C:\\Users\\user\\Desktop\\store\\src\\component\\addUser\\adduser.component.jsx",[],"C:\\Users\\user\\Desktop\\store\\src\\component\\deleteUser\\deleteuser.component.jsx",["189"],"import React, { useEffect } from 'react'\r\nimport './deleteuser.scss'\r\n\r\nimport { Button, Form, Spinner } from 'react-bootstrap'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { RESET_AUTHORIZED } from '../../redux/verification/verification.action'\r\nimport { DELETE_USER_ASYNC, FETCH_SINGLEUSER_ASYNC } from '../../redux/user/user.action'\r\n\r\nconst DeleteUser = ({ singleUser, fetchUser, authorized, capturedID, resetAuthorized, deleteUserAsync, isDeleting }) => {\r\n    useEffect(() => {\r\n        fetchUser(capturedID)\r\n    }, [capturedID])\r\n\r\n    return (\r\n        <div>\r\n        {\r\n            authorized && capturedID !== null ?\r\n            singleUser.length > 0 ?\r\n            <div>\r\n                <div className=\"deleteuser-background\" onClick={()=> resetAuthorized()}></div>\r\n                <div className=\"deleteuser-container\">\r\n                <h3>Confirm Delete?</h3>\r\n                <Form>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" value={singleUser[0].email} readOnly/>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type=\"text\" value={singleUser[0].name} readOnly/>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                        <Form.Label>Role</Form.Label>\r\n                        <Form.Control type=\"text\" value={singleUser[0].role} readOnly/>\r\n                    </Form.Group>\r\n                    <Button variant=\"danger\" type=\"button\" onClick={() => deleteUserAsync(capturedID)}>\r\n                        Delete\r\n                        {isDeleting ? <Spinner animation=\"border\" variant=\"success\" />: null}\r\n                    </Button>\r\n                </Form>\r\n                </div>\r\n            </div>: <Spinner />\r\n            : null\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authorized: state.verificationReducer.authorized,\r\n    capturedID: state.verificationReducer.capturedID,\r\n    isDeleting: state.UserReducer.is_deleting,\r\n    isFetching: state.UserReducer.is_fetching,\r\n    singleUser: state.UserReducer.singleUser\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    resetAuthorized: () => dispatch(RESET_AUTHORIZED()),\r\n    deleteUserAsync: (user_id) => dispatch(DELETE_USER_ASYNC(user_id)),\r\n    fetchUser: (user_id) => dispatch(FETCH_SINGLEUSER_ASYNC(user_id))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteUser)","C:\\Users\\user\\Desktop\\store\\src\\page\\requestlistpage\\requestlist.page.jsx",["190"],"import React, { useEffect } from 'react'\r\nimport './requestlist.scss'\r\nimport { Table, Spinner } from 'react-bootstrap'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\nimport { FETCH_REQUEST_LIST_ASYNC, FETCH_FULFILLED_REQUEST_ASYNC } from '../../redux/requestitem/requestitem.action'\r\n\r\nconst RequestListPage = ({ fetch_fulfilled_requests, fetch_requests, isFetching, requestList }) => {\r\n\r\n    const location = useLocation()\r\n\r\n    useEffect(() => {\r\n        if(location.pathname === \"/request_list\"){\r\n            fetch_requests()\r\n        }\r\n        else {\r\n            fetch_fulfilled_requests()\r\n        }\r\n    }, [location])\r\n\r\n    return (\r\n        <div>\r\n        {\r\n            isFetching ? <Spinner animation=\"border\" variant=\"success\" />\r\n            :\r\n            <div className='requestlist_page'>\r\n                <h3>{ location.pathname === \"/request_list\" ? 'Request List' : 'History'}</h3>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Project</th>\r\n                            <th>Requestor</th>\r\n                            <th>Collect Date</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        requestList.map(request => {\r\n                            return (    \r\n                            <tr key={request.request_id}>\r\n                                <td>{request.request_id}</td>\r\n                                <td>{request.project_name}</td>\r\n                                <td>{request.requestor}</td>\r\n                                <td>{request.collection_date}</td>\r\n                                <td><Link to={`/fulfill/${request.request_id}`}>Detail</Link></td>\r\n                            </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isFetching: state.RequestItemReducer.is_fetching,\r\n    requestList: state.RequestItemReducer.requestList\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetch_requests: () => dispatch(FETCH_REQUEST_LIST_ASYNC()),\r\n    fetch_fulfilled_requests: () => dispatch(FETCH_FULFILLED_REQUEST_ASYNC())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestListPage)","C:\\Users\\user\\Desktop\\store\\src\\page\\loginpage\\login.page.jsx",[],"C:\\Users\\user\\Desktop\\store\\src\\page\\requestitempage\\request_item.page.jsx",["191"],"import { Table } from 'react-bootstrap'\r\nimport React, { useState, useEffect } from 'react'\r\nimport './request_item.scss'\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport Datetime from 'react-datetime'\r\n\r\n\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport RequestItemSummary from '../../component/request_item_summary/request_item_summary.component'\r\n\r\nimport { Button, Form, Spinner } from 'react-bootstrap'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { ADD_TO_SUMMARY, SUBMIT_REQUEST_ASYNC } from '../../redux/requestitem/requestitem.action'\r\nimport { FETCH_ITEM_ASYNC } from '../../redux/storeitem/storeitem.action'\r\n\r\nconst RequestItemPage = ({add_to_summary, fetch_items, errorMessage, isFetching, redirectTo, storeItems, summaryItems, submit_request}) => {\r\n\r\n    const [request_quantity, handleRequestQuantity] = useState({})\r\n    const [project_name, handleProjectName] = useState('')\r\n    const [collection_date, handleCollectionDate] = useState('')\r\n\r\n    const handleDynamicInput = (event, item_name) => handleRequestQuantity({\r\n        ...request_quantity,\r\n        [item_name]: event.target.value\r\n    })\r\n\r\n    useEffect(() => {\r\n        fetch_items()\r\n    }, [])\r\n\r\n    if(redirectTo.length !== 0){\r\n        return <Redirect to={redirectTo} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {\r\n            isFetching ? <Spinner animation=\"border\" variant=\"success\" />\r\n            :\r\n            <div className='request_item_page'>\r\n                <div className='request_content'>\r\n                    <h2>Request Item</h2>\r\n                    <div className='request_item_others'>\r\n                        <div className='request_item_projectContainer'>\r\n                            <label htmlFor='project'>Project:</label>\r\n                            <input type='text' onChange={(event) => handleProjectName(event.target.value)}></input>\r\n                        </div>\r\n                        <div className='request_item_collectiondateContainer'>\r\n                            <label htmlFor='request_item_collectiondate'>Collection Date:</label>\r\n                            <Datetime inputProps={{\r\n                                placeholder: \"Collection Date & Time\"\r\n                            }} \r\n                                onChange={handleCollectionDate}\r\n                                utc={true}\r\n                                initialValue=\"\"\r\n                                name=\"request_item_collectiondate\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Item Name</th>\r\n                                <th>Available Quantities</th>\r\n                                <th>Notice</th>\r\n                                <th>Request Quantities</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                storeItems.map(item => {\r\n                                    return (\r\n                                        <tr key={item.item_id}>\r\n                                            <td>{item.item_id}</td>\r\n                                            <td>{item.item_name}</td>\r\n                                            <td>{item.available_quantity}</td>\r\n                                            <td>{item.notice}</td>\r\n                                            <td>\r\n                                                <Form.Control type='number' min='0' id={item.item_id} onChange={(event) => handleDynamicInput(event, item.item_name)}></Form.Control>\r\n                                            </td>\r\n                                            <td><Button variant=\"primary\" onClick={() => add_to_summary({name: item.item_name, quantity: request_quantity[item.item_name], \"item_id\": item.item_id})}>Add</Button></td>\r\n                                        </tr> \r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                    <Button variant=\"success\" type=\"button\"\r\n                        onClick={() => submit_request({\r\n                            \"collection_date\": collection_date,\r\n                            \"project_name\": project_name,\r\n                            \"item_details\": summaryItems,\r\n                            \"requestor\": \"Jeffrey\"\r\n                        })}\r\n                    >Submit Request</Button>\r\n                    {errorMessage ? <p className=\"errorMessage\">{errorMessage}</p> : null}\r\n                </div>\r\n                <div className='request_item_summary'>\r\n                    <RequestItemSummary />\r\n                </div>\r\n            </div>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    summaryItems: state.RequestItemReducer.summaryItems,\r\n    storeItems: state.StoreItemReducer.storeItem,\r\n    isFetching: state.StoreItemReducer.is_fetching,\r\n    redirectTo: state.UrlReducer.redirectLink,\r\n    errorMessage: state.RequestItemReducer.errorMessage\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    add_to_summary: (item) => dispatch(ADD_TO_SUMMARY(item)),\r\n    fetch_items: () => dispatch(FETCH_ITEM_ASYNC()),\r\n    submit_request: (dataObj) => dispatch(SUBMIT_REQUEST_ASYNC(dataObj))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestItemPage)","C:\\Users\\user\\Desktop\\store\\src\\page\\storelistpage\\storelist.page.jsx",["192"],"C:\\Users\\user\\Desktop\\store\\src\\page\\usermanagementpage\\usermanagement.page.jsx",["193"],"import React, { useEffect } from 'react'\r\nimport './usermanagement.scss'\r\n\r\nimport { Button, Table, Spinner } from 'react-bootstrap'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { SHOW_VERIFICATION_COMPONENT } from '../../redux/verification/verification.action'\r\nimport { FETCH_USERS_ASYNC } from '../../redux/user/user.action'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst UserManagementPage = ({ userList, showVerification, fetchUsers, is_fetching, redirectTo }) => {\r\n\r\n    useEffect(() => {\r\n        fetchUsers()\r\n    }, [])\r\n\r\n    const history = useHistory()\r\n\r\n    if(redirectTo === \"reload\"){\r\n        history.go(0)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {\r\n            is_fetching ? <Spinner animation=\"border\" variant=\"success\" />\r\n            :\r\n            <div className=\"user_management_page\">\r\n                <h2 className=\"user_management_title\">User List</h2>\r\n                <Button variant='info' className='addUser_btn' onClick={() => showVerification(null)}>Add User</Button>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Role</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                        userList.map(user => {\r\n                            return (\r\n                                <tr key={user.id}>\r\n                                    <td>{user.id}</td>\r\n                                    <td>{user.name}</td>\r\n                                    <td>{user.email}</td>\r\n                                    <td>{user.role}</td>\r\n                                    <td><Button variant=\"danger\" onClick={() => showVerification(user.id)}>Delete</Button></td>\r\n                                </tr>\r\n                            )\r\n                        }) \r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userList: state.UserReducer.user_list,\r\n    is_fetching: state.UserReducer.is_fetching,\r\n    redirectTo: state.UrlReducer.redirectLink\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    showVerification: (id) => dispatch(SHOW_VERIFICATION_COMPONENT(id)),\r\n    fetchUsers: () => dispatch(FETCH_USERS_ASYNC())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManagementPage)","C:\\Users\\user\\Desktop\\store\\src\\page\\homepage\\home.page.jsx",["194","195","196","197","198","199","200"],"C:\\Users\\user\\Desktop\\store\\src\\page\\fulfillpage\\fulfill.page.jsx",["201"],"import React, { useEffect } from 'react'\r\nimport './fulfill.scss'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { ListGroup, Button, Spinner } from 'react-bootstrap'\r\nimport { useParams, Redirect } from 'react-router-dom'\r\n\r\nimport { FETCH_SINGLEREQUEST_ASYNC } from '../../redux/requestitem/requestitem.action'\r\nimport { FULFILL_REQUEST_ASYNC, CANCEL_REQUEST_ASYNC } from '../../redux/fulfillrequest/fulfillrequest.action'\r\n\r\nconst FulfillPage = ({ redirectTo, errorMessage, fetchSingleRequest, isFetching, requestDetail, itemDetail, fulfillRequest, cancelRequest }) => {\r\n    const { request_id } = useParams()\r\n\r\n    useEffect(() => {\r\n        fetchSingleRequest(request_id)\r\n    }, [request_id])\r\n\r\n    if(redirectTo !== \"\"){\r\n        return <Redirect to={redirectTo} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {\r\n            isFetching ? <Spinner animation=\"border\" variant=\"success\" />\r\n            :<div className='fulfill-page'>\r\n                <h2 className='fulfill-title'>Request ID: {request_id}</h2>\r\n                {\r\n                    requestDetail.length > 0 ?\r\n                    <div>\r\n                        <ListGroup variant=\"flush\">\r\n                            {   requestDetail[0][\"item_details\"].map((item, index) => {\r\n                                    return <ListGroup.Item key={index}>{`${index+1}. ${item.name} - ${item.quantity}`}</ListGroup.Item>\r\n                            })}\r\n                        </ListGroup>\r\n                        <div className='fulfill_others' >\r\n                            <label htmlFor='project'>Project:</label>\r\n                            <h6 name='project'>{requestDetail[0][\"project_name\"]}</h6>\r\n                            <label htmlFor='collect_date'>Collect Date:</label>\r\n                            <h6 name='collect_date'>{requestDetail[0][\"collection_date\"]}</h6>\r\n                            <label htmlFor='requestor'>Requestor:</label>\r\n                            <h6 name='requestor'>{requestDetail[0][\"requestor\"]}</h6>\r\n                        </div>\r\n                        {\r\n                            requestDetail[0].status === \"Fulfilled\" ? null\r\n                            :\r\n                            <div className='action-container'>\r\n                                <Button variant=\"success\" type=\"button\" onClick={() => fulfillRequest(itemDetail, request_id)}>Complete</Button>\r\n                                <Button variant=\"danger\" type=\"button\" onClick={() => cancelRequest(request_id)}>Abandon</Button>\r\n                            </div>\r\n                        }\r\n                        {\r\n                            errorMessage !== \"\" ? <p className=\"errorMessage\">Error occured</p>: null\r\n                        }\r\n                    </div>\r\n                    : <Spinner animation=\"border\" variant=\"success\" />\r\n                }\r\n\r\n            </div>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isFetching: state.RequestItemReducer.is_singleFetching,\r\n    requestDetail: state.RequestItemReducer.singleRequest,\r\n    itemDetail: state.RequestItemReducer.request_items_detail,\r\n    redirectTo: state.UrlReducer.redirectLink,\r\n    errorMessage: state.FulfillRequestReducer.errorMessage\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchSingleRequest: (request_id) => dispatch(FETCH_SINGLEREQUEST_ASYNC(request_id)),\r\n    fulfillRequest: (itemObj, request_id) => dispatch(FULFILL_REQUEST_ASYNC(itemObj, request_id)),\r\n    cancelRequest: (request_id) => dispatch(CANCEL_REQUEST_ASYNC(request_id))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FulfillPage)","C:\\Users\\user\\Desktop\\store\\src\\page\\edititempage\\edititem.page.jsx",["202"],"import React, { useState, useEffect } from 'react'\r\nimport './edititem.scss'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Form, Button, Spinner } from 'react-bootstrap'\r\nimport { useParams, Redirect } from 'react-router-dom'\r\n\r\nimport { FETCH_SINGLEITEM_ASYNC, UPDATE_SINGLEITEM_ASYNC } from '../../redux/storeitem/storeitem.action'\r\n\r\nconst EditItemPage = ({ itemDetail, fetchDetail, singleItemFetching, updateItem, redirectTo }) => {\r\n    const { item_id } = useParams()\r\n\r\n    const [new_quantity, handleNewQuantity] = useState(0)\r\n    const [reserved_quantity, handleReservedQuantity] = useState(0)\r\n    const [new_notice, handleNotice] = useState('')\r\n\r\n    useEffect(() => {\r\n        fetchDetail(item_id)\r\n    }, [])\r\n\r\n    if(redirectTo.length !== 0){\r\n        return <Redirect to={`${redirectTo}`}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                itemDetail.length > 0 ?\r\n                <div className='edititem_page'>\r\n                    <h2 className=\"edititem_title\">Edit Item {item_id}</h2>\r\n                    {\r\n                        singleItemFetching ? <Spinner animation=\"border\" variant=\"success\" />\r\n                        :\r\n                        <Form>\r\n                            <Form.Group>\r\n                                <Form.Label><span>Item Name:</span> </Form.Label>\r\n                                <Form.Control plaintext readOnly defaultValue={itemDetail[0].item_name} />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label><span>Previous Available Quantities:</span> </Form.Label>\r\n                                <Form.Control plaintext readOnly defaultValue={itemDetail[0].available_quantity} />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label><span>Previous Reserved Quantities:</span> </Form.Label>\r\n                                <Form.Control plaintext readOnly defaultValue={itemDetail[0].reserved_quantity} />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                <Form.Label>Previous Notice</Form.Label>\r\n                                <Form.Control as=\"textarea\" rows={4} readOnly defaultValue={itemDetail[0].notice}/>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label><span>Brand:</span> </Form.Label>\r\n                                <Form.Control plaintext readOnly defaultValue={itemDetail[0].brand} />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label><span>Current Available Quantities:</span> </Form.Label>\r\n                                <Form.Control size='sm' type=\"number\" placeholder=\"Current available quantities\" min='0' onChange={(e) => handleNewQuantity(e.target.value)} />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label><span>Current Reserved Quantities:</span> </Form.Label>\r\n                                <Form.Control size='sm' type=\"number\" placeholder=\"Current reserved quantities\" min='0' onChange={(e) => handleReservedQuantity(e.target.value)} />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                <Form.Label>New Notice</Form.Label>\r\n                                <Form.Control as=\"textarea\" rows={4} onChange={(e) => handleNotice(e.target.value) }/>\r\n                            </Form.Group>\r\n                            <Button variant=\"success\" type=\"button\" \r\n                            onClick={() => updateItem({\r\n                                    \"item_id\": item_id,\r\n                                    \"available_quantity\": new_quantity,\r\n                                    \"reserved_quantity\": reserved_quantity,\r\n                                    \"notice\": new_notice\r\n                                    })\r\n                                }\r\n                            >\r\n                                Save & Edit\r\n                            </Button>\r\n                        </Form>            \r\n                    }\r\n                </div>: <Spinner animation=\"border\" variant=\"success\" />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    itemDetail: state.StoreItemReducer.singleItem,\r\n    singleItemFetching: state.StoreItemReducer.singleItem_is_fetching,\r\n    redirectTo: state.UrlReducer.redirectLink\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchDetail: (id) => dispatch(FETCH_SINGLEITEM_ASYNC(id)),\r\n    updateItem: (obj) => dispatch(UPDATE_SINGLEITEM_ASYNC(obj))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditItemPage)","C:\\Users\\user\\Desktop\\store\\src\\redux\\requestitem\\requestitem.reducer.js",["203"],"import REQUEST_ITEM_CONSTANT from './requestitem.constant'\r\n\r\nconst INITIAL_STATE = {\r\n    summaryItems: [],\r\n    errorMessage: \"\",\r\n    is_submitting: false,\r\n    requestList: [],\r\n    is_fetching: false,\r\n    is_singleFetching: false,\r\n    singleRequest: [],\r\n    request_items_detail: []\r\n}\r\n\r\nconst RequestItemReducer = (state=INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case REQUEST_ITEM_CONSTANT.ADD_TO_SUMMARY:\r\n            if(action.payload.quantity >= 0){\r\n                state.summaryItems.map((item, index) => {\r\n                    if(item.name === action.payload.name){\r\n                        state.summaryItems.splice(index, 1)\r\n                        return {\r\n                            ...state,\r\n                            summaryItems: state.summaryItems.concat(action.payload)\r\n                        }\r\n                    }\r\n                })\r\n                return {\r\n                    ...state,\r\n                    summaryItems: state.summaryItems.concat(action.payload)\r\n                }\r\n            }\r\n            else {\r\n                return state\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.REMOVE_FROM_SUMMARY:\r\n            let newArray = state.summaryItems.filter(item => {\r\n                return item.name !== action.payload.name\r\n            })\r\n            return {\r\n                ...state,\r\n                summaryItems: [].concat(newArray)\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.SUBMIT_REQUEST_START:\r\n            return {\r\n                ...state,\r\n                is_submitting: true\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.SUBMIT_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                is_submitting: false,\r\n                errorMessage: \"\"\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.SUBMIT_REQUEST_FAILED:\r\n            return {\r\n                ...state,\r\n                is_submitting: false,\r\n                errorMessage: action.payload\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.FETCH_REQUEST_LIST_START:\r\n            return {\r\n                ...state,\r\n                is_fetching: true\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.FETCH_REQUEST_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                is_fetching: false,\r\n                errorMessage: \"\",\r\n                requestList: Array.from(action.payload)\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.FETCH_REQUEST_LIST_FAILED:\r\n            return {\r\n                ...state,\r\n                is_fetching: false,\r\n                errorMessage: action.payload\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.FETCH_FULFILLED_REQUEST_START:\r\n            return {\r\n                ...state,\r\n                is_fetching: true\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.FETCH_FULFILLED_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                is_fetching: false,\r\n                errorMessage: \"\",\r\n                requestList: Array.from(action.payload)\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.FETCH_FULFILLED_REQUEST_FAILED:\r\n            return {\r\n                ...state,\r\n                is_fetching: false,\r\n                errorMessage: action.payload\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.FETCH_SINGLEREQUEST_START:\r\n            return {\r\n                ...state,\r\n                is_singleFetching: true\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.FETCH_SINGLEREQUEST_SUCCESS: \r\n            return {\r\n                ...state,\r\n                is_singleFetching: false,\r\n                errorMessage: \"\",\r\n                singleRequest: Array.from(action.payload),\r\n                request_items_detail: Array.from(action.payload[0][\"item_details\"])\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.FETCH_SINGLEREQUEST_FAILED:\r\n            return {\r\n                ...state,\r\n                is_singleFetching: false,\r\n                errorMessage: action.payload\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.RESET_SUMMARY:\r\n            return {\r\n                ...state,\r\n                errorMessage: \"\",\r\n                summaryItems: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default RequestItemReducer","C:\\Users\\user\\Desktop\\store\\src\\redux\\user\\user.reducer.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\storeitem\\storeitem.reducer.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\chart\\chart.reducer.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\verification\\verification.reducer.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\url\\url.reducer.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\fulfillrequest\\fulfillrequest.reducer.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\storeitem\\storeitem.action.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\verification\\verification.action.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\user\\user.action.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\requestitem\\requestitem.action.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\chart\\chart.action.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\fulfillrequest\\fulfillrequest.action.js",[],"C:\\Users\\user\\Desktop\\store\\src\\component\\request_item_summary\\request_item_summary.component.jsx",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\storeitem\\storeitem.constant.js",[],"C:\\Users\\user\\Desktop\\store\\src\\component\\pieChart\\piechart.component.jsx",[],"C:\\Users\\user\\Desktop\\store\\src\\component\\lineChart\\lineChart.component.jsx",["204"],"import React, { useEffect } from \"react\";\r\nimport { Chart, Line, Point, Tooltip, Axis } from \"bizcharts\";\r\nimport './linechart.scss'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nconst LineChart = ({ line_data }) => {\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4 className=\"lineChart-title\">Total Outbound Quantities Trend</h4>\r\n\t\t\t<Chart\r\n\t\t\t\tpadding={[10, 20, 50, 50]}\r\n\t\t\t\tautoFit\r\n\t\t\t\theight={500}\r\n\t\t\t\tdata={line_data}\r\n\t\t\t\tscale={{ value: { min: 0 } }}\r\n\t\t\t\t// onLineMouseleave={console.log}\r\n\t\t\t\t// onPointClick={console.warn}\r\n\t\t\t\tonAxisLabelClick={(e => {\r\n\t\t\t\t\tconst { axis } = e.gEvent.delegateObject;\r\n\t\t\t\t\tdebugger\r\n\t\t\t\t\talert(`you clicked axis: ${axis.get('field')}`)\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t<Line position=\"day*sum\" />\r\n\t\t\t\t<Point position=\"day*sum\" />\r\n\t\t\t\t<Tooltip showCrosshairs lock triggerOn='hover' />\r\n\t\t\t\t<Axis name='sum' title={{\r\n\t\t\t\t\tposition: 'center'\r\n\t\t\t\t}} />\r\n\t\t\t</Chart>\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tline_data: state.ChartReducer.line_data\r\n})\r\n\r\nexport default connect(mapStateToProps)(LineChart)\r\n","C:\\Users\\user\\Desktop\\store\\src\\redux\\requestitem\\requestitem.constant.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\chart\\chart.constant.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\url\\url.constant.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\verification\\verification.constant.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\fulfillrequest\\fulfillrequest.constant.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\url\\url.action.js",[],"C:\\Users\\user\\Desktop\\store\\src\\redux\\user\\user.constant.js",[],"C:\\Users\\user\\Desktop\\store\\src\\component\\table\\table.component.jsx",["205","206","207","208","209","210"],{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":13,"column":8,"nodeType":"217","endLine":13,"endColumn":20,"suggestions":"218"},{"ruleId":"215","severity":1,"message":"219","line":22,"column":8,"nodeType":"217","endLine":22,"endColumn":18,"suggestions":"220"},{"ruleId":"215","severity":1,"message":"221","line":31,"column":8,"nodeType":"217","endLine":31,"endColumn":10,"suggestions":"222"},{"ruleId":"215","severity":1,"message":"223","line":14,"column":7,"nodeType":"217","endLine":14,"endColumn":9,"suggestions":"224"},{"ruleId":"215","severity":1,"message":"225","line":15,"column":8,"nodeType":"217","endLine":15,"endColumn":10,"suggestions":"226"},{"ruleId":"227","severity":1,"message":"228","line":13,"column":8,"nodeType":"229","messageId":"230","endLine":13,"endColumn":17},{"ruleId":"231","severity":1,"message":"232","line":26,"column":87,"nodeType":"233","messageId":"234","endLine":26,"endColumn":88},{"ruleId":"215","severity":1,"message":"235","line":31,"column":8,"nodeType":"217","endLine":31,"endColumn":10,"suggestions":"236"},{"ruleId":"227","severity":1,"message":"237","line":35,"column":12,"nodeType":"229","messageId":"230","endLine":35,"endColumn":25},{"ruleId":"227","severity":1,"message":"238","line":35,"column":27,"nodeType":"229","messageId":"230","endLine":35,"endColumn":42},{"ruleId":"227","severity":1,"message":"239","line":36,"column":12,"nodeType":"229","messageId":"230","endLine":36,"endColumn":23},{"ruleId":"227","severity":1,"message":"240","line":36,"column":25,"nodeType":"229","messageId":"230","endLine":36,"endColumn":38},{"ruleId":"215","severity":1,"message":"241","line":17,"column":8,"nodeType":"217","endLine":17,"endColumn":20,"suggestions":"242"},{"ruleId":"215","severity":1,"message":"243","line":20,"column":8,"nodeType":"217","endLine":20,"endColumn":10,"suggestions":"244"},{"ruleId":"245","severity":1,"message":"246","line":18,"column":54,"nodeType":"247","messageId":"248","endLine":18,"endColumn":56},{"ruleId":"227","severity":1,"message":"249","line":1,"column":17,"nodeType":"229","messageId":"230","endLine":1,"endColumn":26},{"ruleId":"227","severity":1,"message":"249","line":1,"column":17,"nodeType":"229","messageId":"230","endLine":1,"endColumn":26},{"ruleId":"227","severity":1,"message":"250","line":1,"column":28,"nodeType":"229","messageId":"230","endLine":1,"endColumn":36},{"ruleId":"227","severity":1,"message":"251","line":7,"column":10,"nodeType":"229","messageId":"230","endLine":7,"endColumn":26},{"ruleId":"227","severity":1,"message":"252","line":9,"column":23,"nodeType":"229","messageId":"230","endLine":9,"endColumn":27},{"ruleId":"227","severity":1,"message":"253","line":13,"column":11,"nodeType":"229","messageId":"230","endLine":13,"endColumn":19},{"ruleId":"227","severity":1,"message":"254","line":14,"column":23,"nodeType":"229","messageId":"230","endLine":14,"endColumn":35},"no-native-reassign",["255"],"no-negated-in-lhs",["256"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array. If 'fetchUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["257"],"React Hook useEffect has missing dependencies: 'fetch_fulfilled_requests' and 'fetch_requests'. Either include them or remove the dependency array. If 'fetch_requests' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["258"],"React Hook useEffect has a missing dependency: 'fetch_items'. Either include it or remove the dependency array. If 'fetch_items' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["259"],"React Hook useEffect has a missing dependency: 'fetchItem'. Either include it or remove the dependency array. If 'fetchItem' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["260"],"React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array. If 'fetchUsers' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["261"],"no-unused-vars","'LineChart' is defined but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has missing dependencies: 'defaultStartDate', 'fetchItem', 'fetch_pie', and 'todayDate'. Either include them or remove the dependency array. If 'fetch_pie' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["262"],"'lineStartDate' is assigned a value but never used.","'linehandleStart' is assigned a value but never used.","'lineEndDate' is assigned a value but never used.","'linehandleEnd' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchSingleRequest'. Either include it or remove the dependency array. If 'fetchSingleRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["263"],"React Hook useEffect has missing dependencies: 'fetchDetail' and 'item_id'. Either include them or remove the dependency array. If 'fetchDetail' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["264"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useEffect' is defined but never used.","'useState' is defined but never used.","'FETCH_ITEM_ASYNC' is defined but never used.","'Link' is defined but never used.","'location' is assigned a value but never used.","'setDatatable' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},"Update the dependencies array to be: [capturedID, fetchUser]",{"range":"281","text":"282"},"Update the dependencies array to be: [fetch_fulfilled_requests, fetch_requests, location]",{"range":"283","text":"284"},"Update the dependencies array to be: [fetch_items]",{"range":"285","text":"286"},"Update the dependencies array to be: [fetchItem]",{"range":"287","text":"288"},"Update the dependencies array to be: [fetchUsers]",{"range":"289","text":"290"},"Update the dependencies array to be: [defaultStartDate, fetchItem, fetch_pie, todayDate]",{"range":"291","text":"292"},"Update the dependencies array to be: [fetchSingleRequest, request_id]",{"range":"293","text":"294"},"Update the dependencies array to be: [fetchDetail, item_id]",{"range":"295","text":"296"},[527,539],"[capturedID, fetchUser]",[672,682],"[fetch_fulfilled_requests, fetch_requests, location]",[1192,1194],"[fetch_items]",[470,472],"[fetchItem]",[539,541],"[fetchUsers]",[1025,1027],"[defaultStartDate, fetchItem, fetch_pie, todayDate]",[691,703],"[fetchSingleRequest, request_id]",[727,729],"[fetchDetail, item_id]"]