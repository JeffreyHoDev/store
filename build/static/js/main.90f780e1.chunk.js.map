{"version":3,"sources":["redux/user/user.constant.js","redux/url/url.constant.js","redux/url/url.action.js","redux/verification/verification.constant.js","redux/verification/verification.action.js","redux/user/user.action.js","redux/scaling/scaling.constant.js","redux/scaling/scaling.action.js","component/sidebar/sidebar.component.jsx","component/topbar/topbar.component.jsx","redux/storeitem/storeitem.constant.js","redux/storeitem/storeitem.action.js","component/addItem/addItem.component.jsx","redux/requestitem/requestitem.constant.js","redux/requestitem/requestitem.action.js","redux/fulfillrequest/fulfillrequest.constant.js","redux/fulfillrequest/fulfillrequest.action.js","page/fulfillpage/fulfill.page.jsx","component/verification/verification.component.jsx","component/addUser/adduser.component.jsx","component/deleteUser/deleteuser.component.jsx","component/requestItem/requestitem.component.jsx","component/table/table.component.jsx","component/pieChart/piechart.component.jsx","redux/chart/chart.constant.js","redux/chart/chart.action.js","page/homepage/home.page.jsx","page/loginpage/login.page.jsx","component/request_item_summary/request_item_summary.component.jsx","page/requestitempage/request_item.page.jsx","page/requestlistpage/requestlist.page.jsx","page/storelistpage/storelist.page.jsx","page/usermanagementpage/usermanagement.page.jsx","page/edititempage/edititem.page.jsx","App.js","reportWebVitals.js","redux/requestitem/requestitem.reducer.js","redux/storeitem/storeitem.reducer.js","redux/user/user.reducer.js","redux/verification/verification.reducer.js","redux/url/url.reducer.js","redux/fulfillrequest/fulfillrequest.reducer.js","redux/chart/chart.reducer.js","redux/scaling/scaling.reducer.js","redux/root/root-reducer.js","redux/store/store.js","index.js"],"names":["USER_CONSTANT","URL_CONSTANT","REDIRECT_TO","RESET_REDIRECT","RedirectTo","link","type","payload","ResetRedirect","VERIFICATION_CONSTANT","CLOSE_DISPLAY","RESET_AUTHORIZED","verify_authorized_personAsync","email","password","dispatch","fetch","method","headers","body","JSON","stringify","then","response","json","data","Error","catch","err","DELETE_USER_FROM_DATABASE_FAILED","FETCH_USER_FROM_DATABASE_START","FETCH_SINGLEUSER_FROM_DATABASE_START","ADD_NEW_USER_FAILED","error","DELETE_USER_ASYNC","user_id","ADD_NEW_USER_ASYNC","name","role","detail","FETCH_USERS_ASYNC","FETCH_SINGLEUSER_ASYNC","id","LOGIN_USER_ASYNC","result","LOGIN_USER_SUCCESS","SCALING_CONSTANT","TOOGLE_SIDEBAR_IN_SMALL_SCREEN","connect","state","profile","UserReducer","display_sidebar","ScalingReducer","logout","toggle_sidebar","className","onClick","to","toogle_sidebar","length","Spinner","variant","Nav","Item","STORE_ITEM_CONSTANT","DISPLAY_ADDITEM_COMPONENT","ADD_NEW_ITEM_START","ADD_NEW_ITEM_SUCCESS","ADD_NEW_ITEM_FAILED","FETCH_ITEM_START","FETCH_ITEM_SUCCESS","FETCH_ITEM_FAILED","FETCH_SINGLEITEM_START","FETCH_SINGLEITEM_SUCCESS","FETCH_SINGLEITEM_FAILED","UPDATE_SINGLEITEM_START","UPDATE_SINGLEITEM_SUCCESS","UPDATE_SINGLEITEM_FAILED","ADD_NEW_ITEM_ASYNC","dataObj","status","FETCH_ITEM_ASYNC","FETCH_SINGLEITEM_ASYNC","item_id","UPDATE_SINGLEITEM_ASYNC","displayAddItem","StoreItemReducer","errorMessage","toggleAddItem","addNewItem","useState","item_name","handleItemName","brand","handleBrand","available_quantity","handleAvailableQuantity","reserved_quantity","handleReservedQuantity","notice","handleNotice","Button","Form","Group","controlId","Label","Control","placeholder","onChange","e","target","value","as","rows","REQUEST_ITEM_CONSTANT","ADD_TO_SUMMARY","REMOVE_FROM_SUMMARY","SUBMIT_REQUEST_START","SUBMIT_REQUEST_SUCCESS","SUBMIT_REQUEST_FAILED","FETCH_REQUEST_LIST_START","FETCH_REQUEST_LIST_SUCCESS","FETCH_REQUEST_LIST_FAILED","FETCH_FULFILLED_REQUEST_START","FETCH_FULFILLED_REQUEST_SUCCESS","FETCH_FULFILLED_REQUEST_FAILED","FETCH_SINGLEREQUEST_START","FETCH_SINGLEREQUEST_SUCCESS","FETCH_SINGLEREQUEST_FAILED","RESET_SUMMARY","SHOW_REQUEST_ITEM_COMPONENT","FETCH_ONE_FOR_REQUEST_START","FETCH_ONE_FOR_REQUEST_SUCCESS","FETCH_ONE_FOR_REQUEST_FAILED","SUBMIT_REQUEST_ASYNC","collection_date","item_details","project_name","requestor","FETCH_REQUEST_LIST_ASYNC","FETCH_FULFILLED_REQUEST_ASYNC","FETCH_SINGLEREQUEST_ASYNC","request_id","FETCH_ONE_FOR_REQUEST_ASYNC","FULFILL_REQUEST_CONSTANT","FULFILL_REQUEST_START","FULFILL_REQUEST_SUCCESS","FULFILL_REQUEST_FAILED","CANCEL_REQUEST_START","CANCEL_REQUEST_SUCCESS","CANCEL_REQUEST_FAILED","FULFILL_REQUEST_ASYNC","itemObj","rowCount","CANCEL_REQUEST_ASYNC","isFetching","RequestItemReducer","is_singleFetching","requestDetail","singleRequest","itemDetail","request_items_detail","redirectTo","UrlReducer","redirectLink","FulfillRequestReducer","fetchSingleRequest","fulfillRequest","cancelRequest","useParams","useEffect","animation","ListGroup","map","item","index","quantity","htmlFor","verificationDisplay","verificationReducer","closeDisplay","handlePassword","readOnly","Text","message","authorized","capturedID","isAdding","is_adding","resetAuthorized","addUser","new_email","handleEmail","new_name","handleName","new_role","handleRole","new_password","required","isDeleting","is_deleting","is_fetching","singleUser","deleteUserAsync","fetchUser","showRequestComponent","oneItemRequest","toggleRequestComponent","add_to_summary","requestQuantity","handleQuantity","plaintext","defaultValue","size","min","storeItem","useLocation","React","columns","label","field","width","sort","datatable","hover","entriesOptions","entries","pagesAmount","pie_data","ChartReducer","height","autoFit","radius","showTitle","visible","position","adjust","color","style","lineWidth","stroke","content","sum","selected","t","res","getTheme","geometries","interval","rect","fill","CHART_CONSTANT","FETCH_FOR_PIE_START","FETCH_FOR_PIE_SUCCESS","FETCH_FOR_PIE_FAILED","FETCH_FOR_LINE_START","FETCH_FOR_LINE_SUCCESS","FETCH_FOR_LINE_FAILED","FETCH_FOR_PIE_ASYNC","start_date","end_date","FETCH_FOR_LINE_ASYNC","fetch_pie","start","end","fetch_line","fetchItem","today","Date","todayDate","getFullYear","getMonth","getDate","defaultStartDate","pieStartDate","piehandleStart","pieEndDate","piehandleEnd","Card","isLoggedIn","login","summary_items","summaryItems","removeFromSummary","storeItems","fetch_items","submit_request","fetch_request_one","handleProjectName","handleCollectionDate","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","setValue","useAsyncDebounce","undefined","useMemo","Header","accessor","Cell","row","original","tableInstance","useTable","initialState","pageIndex","pageSize","useFilters","useGlobalFilter","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","event","inputProps","utc","initialValue","Table","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","getRowProps","cells","cell","getCellProps","disabled","Number","requestList","fetch_requests","fetch_fulfilled_requests","location","pathname","striped","bordered","request","userList","user_list","showVerification","SHOW_VERIFICATION_COMPONENT","fetchUsers","user","singleItem","singleItemFetching","singleItem_is_fetching","fetchDetail","updateItem","obj","new_quantity","handleNewQuantity","new_notice","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","is_submitting","action","splice","concat","newArray","filter","Array","from","singleItem_is_updating","is_logging_in","is_verifying","is_cancelling","is_fetching_pie","errorMessage_pie","errorMessage_line","is_fetching_line","line_data","newPayload","parseInt","rootReducer","combineReducers","middlewares","logger","thunk","store","createStore","applyMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"sWAAaA,EACS,mBADTA,EAEW,qBAFXA,EAGU,oBAHVA,EAIwB,kCAJxBA,EAK0B,oCAL1BA,EAMyB,mCANzBA,EAOW,qBAPXA,EAQa,uBARbA,EASY,sBATZA,EAUuB,iCAVvBA,EAWyB,mCAXzBA,EAYwB,kCAZxBA,EAa6B,uCAb7BA,EAc+B,yCAd/BA,EAe8B,wCAf9BA,EAgBD,SCXGC,EALM,CACjBC,YAAa,cACbC,eAAgB,kBCAPC,EAAa,SAACC,GAAD,MAAW,CACjCC,KAAML,EAAaC,YACnBK,QAASF,IAGAG,EAAgB,iBAAO,CAChCF,KAAML,EAAaE,iBCRVM,EACoB,8BADpBA,EAEM,gBAFNA,EAGK,eAHLA,EAIO,iBAJPA,EAKM,gBALNA,EAMS,mBCCTC,EAAgB,CACzBJ,KAAMG,GAgBGE,EAAmB,iBAAO,CACnCL,KAAMG,IAGGG,EAAgC,SAACC,EAAOC,GACjD,OAAO,SAAAC,GACHA,EAnB2B,CAC/BT,KAAMG,IAmBFO,MAAM,gCAAiC,CACnCC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB,KAAQ,aACR,MAASR,EACT,SAAYC,MAGnBQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,GAAY,OAATA,EACC,MAAMC,MAAM,UAGZX,EAjCqB,CACjCT,KAAMG,IAiCMM,EAASL,MAGhBiB,OAAM,SAAAC,GACHb,EAlC6B,CACrCT,KAAMG,EACNF,QAgC+BqB,SCxCtBC,EAAmC,iBAAO,CACnDvB,KAAMN,IAGG8B,EAAiC,iBAAO,CACjDxB,KAAMN,IAaG+B,EAAuC,iBAAO,CACvDzB,KAAMN,IAmBGgC,EAAsB,SAACC,GAAD,MAAY,CAC3C3B,KAAMN,EACNO,QAAS0B,IAqBAC,EAAoB,SAACC,GAC9B,OAAO,SAAApB,GACHA,EAvE8C,CAClDT,KAAMN,IAuEFgB,MAAM,qCAAsC,CACxCC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB,GAAMc,MAGbb,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACU,IAATA,GACCV,EAhFwC,CACpDT,KAAMN,IAgFMe,EAASJ,KACTI,EAASX,EAAW,WACpBW,EAASP,MAGTO,EAASc,QAGhBF,OAAM,SAAAC,GAAG,OAAIb,EAASc,UAKlBO,EAAqB,SAACvB,EAAOwB,EAAMC,EAAMxB,GAClD,OAAO,SAAAC,GACHA,EA5DiC,CACrCT,KAAMN,IA4DFgB,MAAM,sCAAuC,CACzCC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB,KAAQgB,EACR,MAASxB,EACT,SAAYC,EACZ,KAAQwB,MAGfhB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACe,UAAdA,EAAKY,KACJtB,EAASiB,EAAoBP,EAAKc,UAGlCxB,EA5E2B,CACvCT,KAAMN,IA4EMe,EAASJ,KACTI,EAASX,EAAW,WACpBW,EAASP,SAIhBmB,OAAM,SAAAC,GAAG,OAAIb,EAASiB,EAAoBJ,SAItCY,EAAoB,WAC7B,OAAO,SAAAzB,GACHA,EAASe,GACTd,MAAM,qCAAqC,CACvCE,QAAS,CACL,eAAgB,oBAEpBD,OAAQ,SAEXK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFV,EA7HmD,CAC3DT,KAAMN,EACNO,QA2HkDkB,OAE7CE,OAAM,SAAAC,GAAG,OAAIb,EA1HqC,CACvDT,KAAMN,EACNO,QAwH2DqB,SAIlDa,EAAyB,SAACC,GACnC,OAAO,SAAA3B,GACHA,EAASgB,GACTf,MAAM,2CAA2C,CAC7CE,QAAS,CACL,eAAgB,oBAEpBD,OAAQ,OACRE,KAAMC,KAAKC,UAAU,CACjB,GAAMqB,MAGbpB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFV,EAnIyD,CACjET,KAAMN,EACNO,QAiIwDkB,OAEnDE,OAAM,SAAAC,GAAG,OAAIb,EAhI2C,CAC7DT,KAAMN,EACNO,QA8HiEqB,SAIxDe,EAAmB,SAAClB,GAC7B,OAAO,SAAAV,GACHA,EAtH+B,CACnCT,KAAMN,IAsHFgB,MAAM,oCAAqC,CACvCC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUI,KAExBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAsB,GACF7B,EA7HsB,SAACU,GAAD,MAAW,CACzCnB,KAAMN,EACNO,QAASkB,GA2HQoB,CAAmBD,IAC5B7B,EAASX,EAAW,MACpBW,EAASP,QAEZmB,OAAM,SAAAC,GAAG,OAAIb,EA7HuB,CACzCT,KAAMN,EACNO,QA2H6CqB,SCxLlCkB,EAJU,CACrBC,+BAAgC,kCCCvBA,EAAiC,iBAAO,CACjDzC,KAAMwC,EAAiBC,iCCoDZC,eAVS,SAAAC,GAAK,MAAK,CAC9BC,QAASD,EAAME,YAAYD,QAC3BE,gBAAiBH,EAAMI,eAAeD,oBAGf,SAAArC,GAAQ,MAAK,CACpCuC,OAAQ,kBAAMvC,EHiBW,CACzBT,KAAMN,KGjBNuD,eAAgB,kBAAMxC,EAASgC,SAGpBC,EA7CC,SAAC,GAA0D,IAAxDE,EAAuD,EAAvDA,QAASI,EAA8C,EAA9CA,OAAQF,EAAsC,EAAtCA,gBAAiBG,EAAqB,EAArBA,eACjD,OACI,qBAAKC,UAAS,kBAAaJ,EAAkB,SAAW,wBAAxD,SAGmC,UAAvBF,EAAQ,GAAR,KAEA,sBAAKM,UAAU,cAAf,UACMJ,EAAkB,qBAAKK,QAAS,kBAAMF,KAAkBC,UAAU,aAAhD,oBAA4E,KAChG,cAAC,IAAD,CAAME,GAAG,IAAIF,UAAU,mBAAmBC,QAAS,kBAAMF,KAAzD,kBACA,cAAC,IAAD,CAAMG,GAAG,mBAAmBF,UAAU,mBAAmBC,QAAS,kBAAMF,KAAxE,6BACA,cAAC,IAAD,CAAMG,GAAG,gBAAgBF,UAAU,mBAAmBC,QAAS,kBAAMF,KAArE,0BACA,cAAC,IAAD,CAAMG,GAAG,gBAAgBF,UAAU,mBAAmBC,QAAS,kBAAMF,KAArE,0BACA,cAAC,IAAD,CAAMG,GAAG,cAAcF,UAAU,mBAAmBC,QAAS,kBAAMF,KAAnE,8BACA,cAAC,IAAD,CAAMG,GAAG,WAAWF,UAAU,mBAAmBC,QAAS,kBAAMF,KAAhE,qBACA,cAAC,IAAD,CAAMG,GAAG,IAAIF,UAAU,mBAAmBC,QAAS,WAC/CH,IACAC,KAFJ,uBAMJ,sBAAKC,UAAU,cAAf,UACI,cAAC,IAAD,CAAME,GAAG,IAAIF,UAAU,mBAAmBC,QAAS,kBAAMF,KAAzD,kBACA,cAAC,IAAD,CAAMG,GAAG,gBAAgBF,UAAU,mBAAmBC,QAAS,kBAAMF,KAArE,0BACA,cAAC,IAAD,CAAMG,GAAG,WAAWF,UAAU,mBAAmBC,QAAS,kBAAMF,KAAhE,qBACA,cAAC,IAAD,CAAMG,GAAG,IAAIF,UAAU,mBAAmBC,QAAS,WAC/CH,IACAC,KAFJ,4B,0BCATP,eARS,SAAAC,GAAK,MAAK,CAC9BC,QAASD,EAAME,YAAYD,YAGJ,SAAAnC,GAAQ,MAAK,CACpC4C,eAAgB,kBAAM5C,EAASgC,SAGpBC,EA1BA,SAAC,GAAiC,IAA/BE,EAA8B,EAA9BA,QAASS,EAAqB,EAArBA,eAEvB,OACI,qBAAKH,UAAU,aAAf,SAEQN,EAAQU,QAAU,EAAI,cAACC,EAAA,EAAD,CAASC,QAAQ,YAEvC,eAACC,EAAA,EAAIC,KAAL,CAAUR,UAAU,kBAApB,UACA,qBAAKA,UAAU,OAAOC,QAAS,kBAAME,KAArC,uBACI,6BAAKT,EAAQ,GAAR,OACL,6BAAKA,EAAQ,GAAR,QACL,6BAAKA,EAAQ,GAAR,e,2BCJVe,I,MAhBa,CACxBC,0BAA4B,4BAC5BC,mBAAoB,qBACpBC,qBAAsB,uBACtBC,oBAAqB,sBACrBC,iBAAkB,mBAClBC,mBAAoB,qBACpBC,kBAAmB,oBACnBC,uBAAwB,yBACxBC,yBAA0B,2BAC1BC,wBAAyB,0BACzBC,wBAAyB,0BACzBC,0BAA2B,4BAC3BC,yBAA0B,6BCVjBZ,GAA4B,CACrC5D,KAAM2D,GAAoBC,2BAWjBG,GAAsB,SAACpC,GAAD,MAAY,CAC3C3B,KAAM2D,GAAoBI,oBAC1B9D,QAAS0B,IAsCA6C,GAA2B,SAAC7C,GAAD,MAAY,CAChD3B,KAAM2D,GAAoBa,yBAC1BvE,QAAS0B,IAKA8C,GAAqB,SAACC,GAC/B,OAAO,SAAAjE,GACHA,EAzDiC,CACrCT,KAAM2D,GAAoBE,qBAyDtBnD,MAAM,sCAAuC,CACzCC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU2D,KAExB1D,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACiB,OAAhBA,EAAKwD,QACJlE,EAhE2B,CACvCT,KAAM2D,GAAoBG,uBAgEdrD,EAASmD,IACTnD,EAASX,EAAW,WACpBW,EAASP,MAGTO,EAASsD,GAAoB5C,EAAKc,YAGzCZ,OAAM,SAAAC,GAAG,OAAIb,EAASsD,GAAoBzC,SAItCsD,GAAmB,WAC5B,OAAO,SAAAnE,GACHA,EAtE+B,CACnCT,KAAM2D,GAAoBK,mBAsEtBtD,MAAM,2CAA4C,CAC9CC,OAAQ,OACRC,QAAS,CACL,eAAgB,sBAGvBI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFV,EA3EsB,SAACU,GAAD,MAAW,CACzCnB,KAAM2D,GAAoBM,mBAC1BhE,QAASkB,GAyEQ8C,CAAmB9C,OAE/BE,OAAM,SAAAC,GAAG,OAAIb,EAxEuB,CACzCT,KAAM2D,GAAoBO,kBAC1BjE,QAsE6CqB,SAIpCuD,GAAyB,SAACC,GACnC,OAAO,SAAArE,GACHA,EA1EqC,CACzCT,KAAM2D,GAAoBQ,yBA0EtBzD,MAAM,2CAA4C,CAC9CC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB,QAAW+D,MAGlB9D,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFV,EAlF4B,SAACU,GAAD,MAAW,CAC/CnB,KAAM2D,GAAoBS,yBAC1BnE,QAASkB,GAgFQiD,CAAyBjD,OAErCE,OAAM,SAAAC,GAAG,OAAIb,EA/E6B,CAC/CT,KAAM2D,GAAoBU,wBAC1BpE,QA6EmDqB,SAI1CyD,GAA0B,SAACL,GACpC,OAAO,SAAAjE,GACHA,EAhFsC,CAC1CT,KAAM2D,GAAoBW,0BAgFtB5D,MAAM,4CAA6C,CAC/CC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU2D,KAExB1D,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACU,IAATA,GACCV,EAvFgC,CAC5CT,KAAM2D,GAAoBY,4BAuFd9D,EAASX,EAAW,gBACpBW,EAASP,MAGTO,EAAS+D,GAAyB,wBAGzCnD,OAAM,SAAAC,GAAG,OAAIb,EAAS+D,GAAyBlD,SCpEzCoB,gBAVS,SAACC,GAAD,MAAY,CAChCqC,eAAgBrC,EAAMsC,iBAAiBD,eACvCE,aAAcvC,EAAMsC,iBAAiBC,iBAGd,SAAAzE,GAAQ,MAAK,CACpC0E,cAAe,kBAAM1E,EAASmD,KAC9BwB,WAAY,SAACV,GAAD,OAAajE,EAASgE,GAAmBC,QAG1ChC,EAvEC,SAAC,GAA8D,IAA7DsC,EAA4D,EAA5DA,eAAeE,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,WAAgB,EAEtCC,mBAAS,IAF6B,mBAEnEC,EAFmE,KAExDC,EAFwD,OAG7CF,mBAAS,IAHoC,mBAGnEG,EAHmE,KAG5DC,EAH4D,OAIpBJ,mBAAS,GAJW,mBAInEK,EAJmE,KAI/CC,EAJ+C,OAKtBN,mBAAS,GALa,mBAKnEO,EALmE,KAKhDC,EALgD,OAM3CR,mBAAS,IANkC,mBAMnES,EANmE,KAM3DC,EAN2D,KAQ1E,OACA,8BAEQf,EACJ,gCACI,qBAAK9B,UAAU,kBAAkBC,QAASgC,IAC1C,sBAAKjC,UAAS,4BAAuB8B,EAAiB,iBAAmB,GAA3D,KAAd,UACI,sBAAK9B,UAAU,iBAAf,UACI,8CACA,cAAC8C,GAAA,EAAD,CAAQ9C,UAAU,aAAaM,QAAQ,YAAYL,QAASgC,EAA5D,uBAEJ,eAACc,GAAA,EAAD,WACI,eAACA,GAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAACF,GAAA,EAAKG,MAAN,yBACA,cAACH,GAAA,EAAKI,QAAN,CAAcrG,KAAK,OAAOsG,YAAY,kBAAkBC,SAAU,SAACC,GAAD,OAAOjB,EAAeiB,EAAEC,OAAOC,aAErG,eAACT,GAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAACF,GAAA,EAAKG,MAAN,qBACA,cAACH,GAAA,EAAKI,QAAN,CAAcrG,KAAK,OAAOsG,YAAY,mBAAmBC,SAAU,SAACC,GAAD,OAAOf,EAAYe,EAAEC,OAAOC,aAEnG,eAACT,GAAA,EAAKC,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAACF,GAAA,EAAKG,MAAN,kCACA,cAACH,GAAA,EAAKI,QAAN,CAAcrG,KAAK,SAASsG,YAAY,qCAAqCC,SAAU,SAACC,GAAD,OAAOb,EAAwBa,EAAEC,OAAOC,aAEnI,eAACT,GAAA,EAAKC,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAACF,GAAA,EAAKG,MAAN,iCACA,cAACH,GAAA,EAAKI,QAAN,CAAcrG,KAAK,SAASsG,YAAY,yEAAyEC,SAAU,SAACC,GAAD,OAAOX,EAAuBW,EAAEC,OAAOC,aAEtK,eAACT,GAAA,EAAKC,MAAN,CAAYC,UAAU,+BAAtB,UACI,cAACF,GAAA,EAAKG,MAAN,qBACA,cAACH,GAAA,EAAKI,QAAN,CAAcM,GAAG,WAAWC,KAAM,EAAGN,YAAY,qDAAqDC,SAAU,SAACC,GAAD,OAAOT,EAAaS,EAAEC,OAAOC,aAEjJ,cAACV,GAAA,EAAD,CAAQ9C,UAAU,qBAAqBM,QAAQ,UAAUxD,KAAK,SAC9DmD,QAAS,kBAAMiC,EAAW,CACtB,UAAaE,EACb,MAASE,EACT,mBAAsBE,EACtB,kBAAqBE,EACrB,OAAUE,KANd,oBAWA,mBAAG5C,UAAU,eAAb,SAA6BgC,GAA6B,gBAIpE,U,2BCxCK2B,GAtBe,CAC1BC,eAAgB,iBAChBC,oBAAqB,sBACrBC,qBAAsB,uBACtBC,uBAAwB,yBACxBC,sBAAuB,wBACvBC,yBAA0B,2BAC1BC,2BAA4B,6BAC5BC,0BAA2B,4BAC3BC,8BAA+B,gCAC/BC,gCAAiC,kCACjCC,+BAAgC,iCAChCC,0BAA2B,4BAC3BC,4BAA6B,8BAC7BC,2BAA4B,6BAC5BC,cAAe,gBACfC,4BAA6B,8BAC7BC,4BAA6B,8BAC7BC,8BAA+B,gCAC/BC,6BAA8B,gCCOrBd,GAAwB,SAACvF,GAAD,MAAY,CAC7C3B,KAAM6G,GAAsBK,sBAC5BjH,QAAS0B,IA2DAkG,GAA8B,iBAAO,CAC9C7H,KAAM6G,GAAsBgB,8BAInBI,GAAuB,SAACvD,GACjC,OAAO,SAAAjE,GAAa,IACRyH,EAA2DxD,EAA3DwD,gBAAiBC,EAA0CzD,EAA1CyD,aAAcC,EAA4B1D,EAA5B0D,aAAcC,EAAc3D,EAAd2D,UAClDF,EAAa7E,QAAU,GAAsB,KAAjB8E,GAA2C,KAApBF,EAClDzH,EAASyG,GAAsB,iCAG/BzG,EAjF+B,CACvCT,KAAM6G,GAAsBG,uBAiFpBtG,MAAM,wCAAyC,CAC3CC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB,gBAAmBmH,EACnB,aAAgBC,EAChB,aAAgBC,EAChB,UAAaC,MAGpBrH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACe,UAAdA,EAAKY,MACJtB,EA7FyB,CACzCT,KAAM6G,GAAsBI,yBA6FZxG,EAtGgB,CAChCT,KAAM6G,GAAsBe,gBAsGZnH,EAASX,EAAW,kBACpBW,EAASP,MAGTO,EAASyG,GAAsB/F,EAAKgH,kBAG3C9G,OAAM,SAAAC,GAAG,OAAIb,EAASyG,GAAsB5F,UAM5CgH,GAA2B,WACpC,OAAO,SAAA7H,GACHA,EArGuC,CAC3CT,KAAM6G,GAAsBM,2BAqGxBzG,MAAM,4CAA6C,CAC/CC,OAAQ,OACRC,QAAS,CACL,eAAgB,sBAGvBI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFV,EA1G8B,SAACU,GAAD,MAAW,CACjDnB,KAAM6G,GAAsBO,2BAC5BnH,QAASkB,GAwGQiG,CAA2BjG,OAEvCE,OAAM,SAAAC,GAAG,OAAIb,EAvG+B,CACjDT,KAAM6G,GAAsBQ,0BAC5BpH,QAqGqDqB,SAI5CiH,GAAgC,WACzC,OAAO,SAAA9H,GACHA,EAxG4C,CAChDT,KAAM6G,GAAsBS,gCAwGxB5G,MAAM,sDAAuD,CACzDC,OAAQ,OACRC,QAAS,CACL,eAAgB,sBAGvBI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFV,EA7GmC,SAACU,GAAD,MAAW,CACtDnB,KAAM6G,GAAsBU,gCAC5BtH,QAASkB,GA2GQoG,CAAgCpG,OAE5CE,OAAM,SAAAC,GAAG,OAAIb,EA1GoC,CACtDT,KAAM6G,GAAsBW,+BAC5BvH,QAwG0DqB,SAIjDkH,GAA4B,SAACC,GACtC,OAAO,SAAAhI,GACHA,EA3GwC,CAC5CT,KAAM6G,GAAsBY,4BA2GxB/G,MAAM,8CAA+C,CACjDC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAC,WAAc0H,MAEvCzH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFV,EAjH+B,SAACU,GAAD,MAAW,CAClDnB,KAAM6G,GAAsBa,4BAC5BzH,QAASkB,GA+GQuG,CAA4BvG,OAExCE,OAAM,SAAAC,GAAG,OAAIb,EA9GgC,CAClDT,KAAM6G,GAAsBc,2BAC5B1H,QA4GsDqB,SAI7CoH,GAA8B,SAAC5D,GACxC,OAAO,SAAArE,GACHA,EA/G0C,CAC9CT,KAAM6G,GAAsBiB,8BA+GxBpH,MAAM,2CAA4C,CAC9CC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB,QAAW+D,MAGlB9D,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFV,EAvHiC,SAACU,GAAD,MAAW,CACpDnB,KAAM6G,GAAsBkB,8BAC5B9H,QAASkB,GAqHQ4G,CAA8B5G,IACvCV,EAASoH,SAEZxG,OAAM,SAAAC,GAAG,OAAIb,EArHkC,CACpDT,KAAM6G,GAAsBmB,6BAC5B/H,QAmHwDqB,SC9L7CqH,GATkB,CAC7BC,sBAAwB,wBACxBC,wBAA0B,0BAC1BC,uBAAyB,yBACzBC,qBAAsB,uBACtBC,uBAAwB,yBACxBC,sBAAuB,yBCMdH,GAAyB,SAACnH,GAAD,MAAY,CAC9C3B,KAAM2I,GAAyBG,uBAC/B7I,QAAS0B,IAWAsH,GAAwB,SAACtH,GAAD,MAAY,CAC7C3B,KAAM2I,GAAyBM,sBAC/BhJ,QAAS0B,IAKAuH,GAAwB,SAACC,EAASV,GAC3C,OAAO,SAAAhI,GACHA,EA9BoC,CACxCT,KAAM2I,GAAyBC,wBA8B3BlI,MAAM,yCAA0C,CAC5CC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB,WAAc0H,EACd,QAAWU,MAGlBnI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACCA,EAAKiI,WAAaD,EAAQ7F,QACzB7C,EAxC8B,CAC1CT,KAAM2I,GAAyBE,0BAwCnBpI,EAASX,EAAW,kBACpBW,EAASP,MAGTO,EAASqI,GAAuB,0CAGvCzH,OAAM,SAAAC,GAAG,OAAIb,EAASqI,GAAuBxH,SAIzC+H,GAAuB,SAACZ,GACjC,OAAO,SAAAhI,GACHA,EA7CmC,CACvCT,KAAM2I,GAAyBI,uBA6C3BrI,MAAM,wCAAyC,CAC3CC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAOC,KAAKC,UAAU,CAClB,WAAc0H,MAGrBzH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACU,IAATA,GACCV,EAtD6B,CACzCT,KAAM2I,GAAyBK,yBAsDnBvI,EAASX,EAAW,kBACpBW,EAASP,MAGTO,EAASwI,GAAsB,uCAGtC5H,OAAM,SAAAC,GAAG,OAAIb,EAASwI,GAAsB3H,SCJtCoB,gBAdS,SAAAC,GAAK,MAAK,CAC9B2G,WAAY3G,EAAM4G,mBAAmBC,kBACrCC,cAAe9G,EAAM4G,mBAAmBG,cACxCC,WAAYhH,EAAM4G,mBAAmBK,qBACrCC,WAAYlH,EAAMmH,WAAWC,aAC7B7E,aAAcvC,EAAMqH,sBAAsB9E,iBAGnB,SAAAzE,GAAQ,MAAK,CACpCwJ,mBAAoB,SAACxB,GAAD,OAAgBhI,EAAS+H,GAA0BC,KACvEyB,eAAgB,SAACf,EAASV,GAAV,OAAyBhI,EAASyI,GAAsBC,EAASV,KACjF0B,cAAe,SAAC1B,GAAD,OAAgBhI,EAAS4I,GAAqBZ,QAGlD/F,EApEK,SAAC,GAA4H,IAA1HmH,EAAyH,EAAzHA,WAAY3E,EAA6G,EAA7GA,aAAc+E,EAA+F,EAA/FA,mBAAoBX,EAA2E,EAA3EA,WAAYG,EAA+D,EAA/DA,cAAeE,EAAgD,EAAhDA,WAAYO,EAAoC,EAApCA,eAAgBC,EAAoB,EAApBA,cAChH1B,EAAe2B,eAAf3B,WAMR,OAJA4B,qBAAU,WACNJ,EAAmBxB,KACpB,CAACA,IAEc,KAAfoB,EACQ,cAAC,KAAD,CAAUzG,GAAIyG,IAIrB,8BAEIP,EAAa,cAAC/F,EAAA,EAAD,CAAS+G,UAAU,SAAS9G,QAAQ,YAChD,sBAAKN,UAAU,eAAf,UACG,qBAAIA,UAAU,gBAAd,yBAA2CuF,KAEvCgB,EAAcnG,OAAS,EACvB,gCACI,cAACiH,GAAA,EAAD,CAAW/G,QAAQ,QAAnB,SACQiG,EAAc,GAAd,aAAiCe,KAAI,SAACC,EAAMC,GACxC,OAAO,cAACH,GAAA,EAAU7G,KAAX,oBAAgCgH,EAAM,EAAtC,aAA4CD,EAAK1I,KAAjD,cAA2D0I,EAAKE,WAA3CD,QAGxC,sBAAKxH,UAAU,iBAAf,UACI,uBAAO0H,QAAQ,UAAf,sBACA,oBAAI7I,KAAK,UAAT,SAAoB0H,EAAc,GAAd,eACpB,uBAAOmB,QAAQ,eAAf,2BACA,oBAAI7I,KAAK,eAAT,SAAyB0H,EAAc,GAAd,kBACzB,uBAAOmB,QAAQ,YAAf,wBACA,oBAAI7I,KAAK,YAAT,SAAsB0H,EAAc,GAAd,eAGM,cAA5BA,EAAc,GAAG9E,OAAyB,KAE1C,sBAAKzB,UAAU,mBAAf,UACI,cAAC8C,GAAA,EAAD,CAAQxC,QAAQ,UAAUxD,KAAK,SAASmD,QAAS,kBAAM+G,EAAeP,EAAYlB,IAAlF,sBACA,cAACzC,GAAA,EAAD,CAAQxC,QAAQ,SAASxD,KAAK,SAASmD,QAAS,kBAAMgH,EAAc1B,IAApE,wBAIa,KAAjBvD,EAAsB,mBAAGhC,UAAU,eAAb,2BAA+C,QAG3E,cAACK,EAAA,EAAD,CAAS+G,UAAU,SAAS9G,QAAQ,oBCH3Cd,I,MAAAA,aAXS,SAACC,GAAD,MAAY,CAChCkI,oBAAqBlI,EAAMmI,oBAAoBD,oBAC/CjI,QAASD,EAAME,YAAYD,QAC3BsC,aAAcvC,EAAMmI,oBAAoB5F,iBAGjB,SAAAzE,GAAQ,MAAK,CACpCsK,aAAc,kBAAMtK,EAASL,IAC7BE,8BAA+B,SAACC,EAAMC,GAAP,OAAoBC,EAASH,EAA8BC,EAAMC,QAGrFkC,EA5CM,SAAC,GAAiG,IAA/FmI,EAA8F,EAA9FA,oBAAqBE,EAAyE,EAAzEA,aAAczK,EAA2D,EAA3DA,8BAA+BsC,EAA4B,EAA5BA,QAASsC,EAAmB,EAAnBA,aAAmB,EAC/EG,mBAAS,IADsE,mBAC3G7E,EAD2G,KACjGwK,EADiG,KAElH,OACI,8BACKH,EACD,gCACI,qBAAK3H,UAAU,0BAA0BC,QAAS,kBAAM4H,OACxD,sBAAK7H,UAAU,yBAAf,UACI,mBAAGA,UAAU,kBAAb,iFACA,eAAC+C,GAAA,EAAD,WACI,eAACA,GAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAACF,GAAA,EAAKG,MAAN,4BACA,cAACH,GAAA,EAAKI,QAAN,CAAcrG,KAAK,QAAQ0G,MAAO9D,EAAQ,GAAR,MAAqBqI,UAAQ,IAC/D,cAAChF,GAAA,EAAKiF,KAAN,CAAWhI,UAAU,aAArB,+DAIJ,eAAC+C,GAAA,EAAKC,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAACF,GAAA,EAAKG,MAAN,uBACA,cAACH,GAAA,EAAKI,QAAN,CAAcrG,KAAK,WAAWsG,YAAY,WAAWC,SAAU,SAACC,GAAD,OAAOwE,EAAexE,EAAEC,OAAOC,aAElG,cAACV,GAAA,EAAD,CAAQxC,QAAQ,UAAUxD,KAAK,SAASmD,QAAS,kBAAM7C,EAA8BsC,EAAQ,GAAR,MAAqBpC,IAA1G,oBAGkB,KAAjB0E,EAAuBA,EAAaiG,QAAU,cAIzD,WCkCCzI,I,MAAAA,aAZS,SAACC,GAAD,MAAY,CAChCyI,WAAYzI,EAAMmI,oBAAoBM,WACtCC,WAAY1I,EAAMmI,oBAAoBO,WACtCnG,aAAcvC,EAAME,YAAYqC,aAChCoG,SAAU3I,EAAME,YAAY0I,cAGL,SAAA9K,GAAQ,MAAK,CACpC+K,gBAAiB,kBAAM/K,EAASJ,MAChCoL,QAAS,SAAClL,EAAMwB,EAAMC,EAAMxB,GAAnB,OAAgCC,EAASqB,EAAmBvB,EAAOwB,EAAMC,EAAMxB,QAG7EkC,EA9DC,SAAC,GAAgF,IAA/E0I,EAA8E,EAA9EA,WAAYC,EAAkE,EAAlEA,WAAYG,EAAsD,EAAtDA,gBAAiBC,EAAqC,EAArCA,QAASvG,EAA4B,EAA5BA,aAAcoG,EAAc,EAAdA,SAAc,EAC3DjG,mBAAS,IADkD,mBACrFqG,EADqF,KAC1EC,EAD0E,OAE7DtG,mBAAS,IAFoD,mBAErFuG,EAFqF,KAE3EC,EAF2E,OAG7DxG,mBAAS,SAHoD,mBAGrFyG,EAHqF,KAG3EC,EAH2E,OAIrD1G,mBAAS,IAJ4C,mBAIrF2G,EAJqF,KAIvEhB,EAJuE,KAK5F,OACI,8BAEQI,GAA6B,OAAfC,EACb,gCACG,qBAAKnI,UAAU,qBAAqBC,QAAS,kBAAMqI,OACnD,qBAAKtI,UAAU,oBAAf,SACI,eAAC+C,GAAA,EAAD,WACI,eAACA,GAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAACF,GAAA,EAAKG,MAAN,4BACA,cAACH,GAAA,EAAKI,QAAN,CAAcrG,KAAK,QAAQuG,SAAU,SAACC,GAAD,OAAOmF,EAAYnF,EAAEC,OAAOC,QAAQuF,UAAQ,IACjF,cAAChG,GAAA,EAAKiF,KAAN,CAAWhI,UAAU,aAArB,+DAIJ,eAAC+C,GAAA,EAAKC,MAAN,WACI,cAACD,GAAA,EAAKG,MAAN,mBACA,cAACH,GAAA,EAAKI,QAAN,CAAcrG,KAAK,OAAOuG,SAAU,SAACC,GAAD,OAAOqF,EAAWrF,EAAEC,OAAOC,QAAQuF,UAAQ,OAEnF,eAAChG,GAAA,EAAKC,MAAN,CAAYC,UAAU,6BAAtB,UACI,cAACF,GAAA,EAAKG,MAAN,mBACA,eAACH,GAAA,EAAKI,QAAN,CAAcM,GAAG,SAASJ,SAAU,SAACC,GAAD,OAAOuF,EAAWvF,EAAEC,OAAOC,QAA/D,UACA,2CACA,iDAGJ,eAACT,GAAA,EAAKC,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAACF,GAAA,EAAKG,MAAN,uBACA,cAACH,GAAA,EAAKI,QAAN,CAAcrG,KAAK,WAAWsG,YAAY,WAAW2F,UAAQ,EAAC1F,SAAU,SAACC,GAAD,OAAOwE,EAAexE,EAAEC,OAAOC,aAE3G,eAACV,GAAA,EAAD,CAAQxC,QAAQ,UAAUxD,KAAK,SAASmD,QAAS,kBAAMsI,EAAQC,EAAWE,EAAUE,EAAUE,IAA9F,qBAEKV,EAAW,cAAC/H,EAAA,EAAD,CAAS+G,UAAU,SAAS9G,QAAQ,YAAe,QAGvC,IAAxB0B,EAAa5B,OAAc,4BAAIxC,KAAKC,UAAUmE,KAAoB,aAI1E,WCWTxC,I,MAAAA,aAdS,SAACC,GAAD,MAAY,CAChCyI,WAAYzI,EAAMmI,oBAAoBM,WACtCC,WAAY1I,EAAMmI,oBAAoBO,WACtCa,WAAYvJ,EAAME,YAAYsJ,YAC9B7C,WAAY3G,EAAME,YAAYuJ,YAC9BC,WAAY1J,EAAME,YAAYwJ,eAGP,SAAA5L,GAAQ,MAAK,CACpC+K,gBAAiB,kBAAM/K,EAASJ,MAChCiM,gBAAiB,SAACzK,GAAD,OAAapB,EAASmB,EAAkBC,KACzD0K,UAAW,SAAC1K,GAAD,OAAapB,EAAS0B,EAAuBN,QAG7Ca,EAvDI,SAAC,GAAqG,IAAnG2J,EAAkG,EAAlGA,WAAYE,EAAsF,EAAtFA,UAAWnB,EAA2E,EAA3EA,WAAYC,EAA+D,EAA/DA,WAAYG,EAAmD,EAAnDA,gBAAiBc,EAAkC,EAAlCA,gBAAiBJ,EAAiB,EAAjBA,WAMnG,OAJA7B,qBAAU,WACNkC,EAAUlB,KACX,CAACA,IAGA,8BAEID,GAA6B,OAAfC,EACdgB,EAAW/I,OAAS,EACpB,gCACI,qBAAKJ,UAAU,wBAAwBC,QAAS,kBAAKqI,OACrD,sBAAKtI,UAAU,uBAAf,UACA,iDACA,eAAC+C,GAAA,EAAD,WACI,eAACA,GAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAACF,GAAA,EAAKG,MAAN,4BACA,cAACH,GAAA,EAAKI,QAAN,CAAcrG,KAAK,QAAQ0G,MAAO2F,EAAW,GAAG9L,MAAO0K,UAAQ,OAEnE,eAAChF,GAAA,EAAKC,MAAN,WACI,cAACD,GAAA,EAAKG,MAAN,mBACA,cAACH,GAAA,EAAKI,QAAN,CAAcrG,KAAK,OAAO0G,MAAO2F,EAAW,GAAGtK,KAAMkJ,UAAQ,OAEjE,eAAChF,GAAA,EAAKC,MAAN,CAAYC,UAAU,6BAAtB,UACI,cAACF,GAAA,EAAKG,MAAN,mBACA,cAACH,GAAA,EAAKI,QAAN,CAAcrG,KAAK,OAAO0G,MAAO2F,EAAW,GAAGrK,KAAMiJ,UAAQ,OAEjE,eAACjF,GAAA,EAAD,CAAQxC,QAAQ,SAASxD,KAAK,SAASmD,QAAS,kBAAMmJ,EAAgBjB,IAAtE,mBAEKa,EAAa,cAAC3I,EAAA,EAAD,CAAS+G,UAAU,SAAS9G,QAAQ,YAAc,iBAIpE,cAACD,EAAA,EAAD,IACN,WC4BCb,I,MAAAA,aAVS,SAAAC,GAAK,MAAK,CAC9B6J,qBAAsB7J,EAAM4G,mBAAmBiD,qBAC/C9C,cAAe/G,EAAM4G,mBAAmBkD,mBAGjB,SAAAhM,GAAQ,MAAK,CACpCiM,uBAAwB,kBAAMjM,EAASoH,OACvC8E,eAAgB,SAACxL,GAAD,OAAUV,EPjEW,CACrCT,KAAM6G,GAAsBC,eAC5B7G,QO+DkDkB,QAGvCuB,EA/Dc,SAAC,GAAqF,IAAnF8J,EAAkF,EAAlFA,qBAAsBE,EAA4D,EAA5DA,uBAAwBhD,EAAoC,EAApCA,cAAeiD,EAAqB,EAArBA,eAAqB,EAEpEtH,mBAAS,GAF2D,mBAEvGuH,EAFuG,KAEtFC,EAFsF,KAI9G,OACI,8BAEQL,EACA,gCACI,qBAAKtJ,UAAU,oCAAoCC,QAAS,kBAAMuJ,OAE9DhD,EAAcpG,OAAS,EAEvB,qBAAKJ,UAAU,mCAAf,SACI,eAAC+C,GAAA,EAAD,WACI,eAACA,GAAA,EAAKC,MAAN,WACI,eAACD,GAAA,EAAKG,MAAN,WAAY,8CAAZ,OACA,cAACH,GAAA,EAAKI,QAAN,CAAcyG,WAAS,EAAC7B,UAAQ,EAAC8B,aAAcrD,EAAc,GAAGpE,eAEpE,eAACW,GAAA,EAAKC,MAAN,WACI,eAACD,GAAA,EAAKG,MAAN,WAAY,0CAAZ,OACA,cAACH,GAAA,EAAKI,QAAN,CAAcyG,WAAS,EAAC7B,UAAQ,EAAC8B,aAAcrD,EAAc,GAAGlE,WAEpE,eAACS,GAAA,EAAKC,MAAN,WACI,eAACD,GAAA,EAAKG,MAAN,WAAY,yDAAZ,OACA,cAACH,GAAA,EAAKI,QAAN,CAAcyG,WAAS,EAAC7B,UAAQ,EAAC8B,aAAcrD,EAAc,GAAGhE,mBAAqBgE,EAAc,GAAG9D,uBAE1G,eAACK,GAAA,EAAKC,MAAN,CAAYC,UAAU,+BAAtB,UACI,cAACF,GAAA,EAAKG,MAAN,qBACA,cAACH,GAAA,EAAKI,QAAN,CAAcM,GAAG,WAAWC,KAAM,EAAGqE,UAAQ,EAAC8B,aAAcrD,EAAc,GAAG5D,YAEjF,eAACG,GAAA,EAAKC,MAAN,WACI,eAACD,GAAA,EAAKG,MAAN,WAAY,uDAAZ,OACA,cAACH,GAAA,EAAKI,QAAN,CAAc2G,KAAK,KAAKhN,KAAK,SAASsG,YAAY,gCAAgC2G,IAAI,IAAI1G,SAAU,SAACC,GAAD,OAAOqG,EAAerG,EAAEC,OAAOC,aAEvI,cAACV,GAAA,EAAD,CAAQxC,QAAQ,UAAUxD,KAAK,SAASmD,QAAS,kBAAMwJ,EAAe,CAClE,KAAQjD,EAAc,GAAGpE,UACzB,SAAYsH,EACZ,QAAWlD,EAAc,GAAG5E,WAHhC,iCASN,cAACvB,EAAA,EAAD,CAASC,QAAQ,eAGzB,W,mCCGHd,gBANS,SAAAC,GAAK,MAAK,CAC9BuK,UAAWvK,EAAMsC,iBAAiBiI,UAClC5D,WAAY3G,EAAMsC,iBAAiBmH,eAIxB1J,EAjDI,SAAC,GAA+B,IAA7BwK,EAA4B,EAA5BA,UAAW5D,EAAiB,EAAjBA,WAAiB,GAE7B6D,eACiBC,IAAM/H,SAAS,CAC7CgI,QAAS,CACP,CACEC,MAAO,IACPC,MAAO,UACPC,MAAO,KAET,CACEF,MAAO,YACPC,MAAO,YACPC,MAAO,KAET,CACEF,MAAO,uBACPC,MAAO,qBACPE,KAAM,MACND,MAAO,KAET,CACEF,MAAO,QACPC,MAAO,QACPC,MAAO,KAET,CACEF,MAAO,SACPC,MAAO,SACPC,MAAO,MAGX5G,KAAMsG,KAhCoC,mBAGvCQ,EAHuC,UAmChD,OAAO,8BAECpE,EAAa,cAAC/F,EAAA,EAAD,IACZ,cAAC,KAAD,CAAgBoK,OAAK,EAACC,eAAgB,CAAC,GAAI,GAAI,IAAKC,QAAS,GAAIC,YAAa,EAAG3M,KAAMuM,S,iBCanFhL,I,OAAAA,aAJS,SAAAC,GAAK,MAAK,CACjCoL,SAAUpL,EAAMqL,aAAaD,YAGfrL,EA/CE,SAAC,GAAgB,IAAfqL,EAAc,EAAdA,SAElB,OACC,8BAECA,EAASzK,QAAU,EAAI,KAEvB,gCACC,oBAAIJ,UAAU,iBAAd,8CACA,eAAC,SAAD,CAAO+K,OAAQ,IAAK9M,KAAM4M,EAAUG,SAAO,EAA3C,UACC,cAAC,cAAD,CAAYlO,KAAK,QAAQmO,OAAQ,MACjC,cAAC,WAAD,CAASC,WAAW,IACpB,cAAC,QAAD,CAAMC,SAAS,IACf,cAAC,YAAD,CACCC,SAAS,MACTC,OAAO,QACPC,MAAM,YACNC,MAAO,CACNC,UAAW,EACXC,OAAQ,QAETrB,MAAO,CAAC,MAAO,CACdsB,QAAS,SAACzN,GACT,MAAM,GAAN,OAAUA,EAAKmE,UAAf,aAA6BnE,EAAK0N,QAGpClM,MAAO,CACNmM,SAAU,CACTL,MAAO,SAACM,GACP,IAAMC,EAAMC,sBAAWC,WAAWC,SAASC,KAAKN,SAASL,MAAMM,GAC/D,OAAO,6BAAKC,GAAZ,IAAiBK,KAAM,aAK3B,cAAC,eAAD,CAAarP,KAAK,wCCxCRsP,GATQ,CACnBC,oBAAqB,sBACrBC,sBAAuB,wBACvBC,qBAAsB,uBACtBC,qBAAsB,uBACtBC,uBAAwB,yBACxBC,sBAAuB,yBCyBdC,GAAsB,SAACC,EAAYC,GAC5C,OAAO,SAAAtP,GACHA,EA/BkC,CACtCT,KAAMsP,GAAeC,sBA+BjB7O,MAAM,iCAAkC,CACpCC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB,WAAc+O,EACd,SAAYC,MAGnB/O,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIV,EAvCe,SAACU,GAAD,MAAW,CAC5CnB,KAAMsP,GAAeE,sBACrBvP,QAASkB,GAqCkBqO,CAAsBrO,OAC5CE,OAAM,SAAAC,GAAG,OAAIb,EAnC0B,CAC5CT,KAAMsP,GAAeG,qBACrBxP,QAiCgDqB,SAIvC0O,GAAuB,SAACF,EAAYC,GAC7C,OAAO,SAAAtP,GACHA,EApCmC,CACvCT,KAAMsP,GAAeI,uBAoCjBhP,MAAM,kCAAmC,CACrCC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB,WAAc+O,EACd,SAAYC,MAGnB/O,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIV,EA5CgB,SAACU,GAAD,MAAW,CAC7CnB,KAAMsP,GAAeK,uBACrB1P,QAASkB,GA0CkBwO,CAAuBxO,OAC7CE,OAAM,SAAAC,GAAG,OAAIb,EAxC2B,CAC7CT,KAAMsP,GAAeM,sBACrB3P,QAsCiDqB,SC4BtCoB,gBAXS,SAAAC,GAAK,MAAK,CAC9BuK,UAAWvK,EAAMsC,iBAAiBiI,UAClC5D,WAAY3G,EAAMsC,iBAAiBmH,gBAGZ,SAAA3L,GAAQ,MAAK,CACpCwP,UAAW,SAACC,EAAOC,GAAR,OAAgB1P,EAASoP,GAAoBK,EAAOC,KAC/DC,WAAY,SAACF,EAAOC,GAAR,OAAgB1P,EAASuP,GAAqBE,EAAOC,KACjEE,UAAW,kBAAM5P,EAASmE,UAGflC,EA3EE,SAAC,GAAiE,IAA/DuN,EAA8D,EAA9DA,UAAWG,EAAmD,EAAnDA,WAAYC,EAAuC,EAAvCA,UAAW/G,EAA4B,EAA5BA,WAE5CgH,GAFwE,EAAhBpD,UAEhD,IAAIqD,MACZC,EAAYF,EAAMG,cAAgB,KAAOH,EAAMI,WAAa,GAAK,IAAMJ,EAAMK,UAC7EC,EAAmBN,EAAMG,cAAgB,KAAOH,EAAMI,WAAa,GAAhDJ,KAEzBjG,qBAAU,WACN4F,EAAUW,EAAkBJ,GAC5BJ,EAAWQ,EAAkBJ,GAC7BH,MACD,IAV2E,MAYvChL,mBAAS,IAZ8B,mBAYvEwL,EAZuE,KAYzDC,EAZyD,OAa3CzL,mBAAS,IAbkC,mBAavE0L,EAbuE,KAa3DC,EAb2D,KAiB9E,OACI,8BAEQ1H,EAAY,cAAC/F,EAAA,EAAD,CAAS+G,UAAU,SAAS9G,QAAQ,YAEhD,sBAAKN,UAAU,uBAAf,UACI,eAAC+N,GAAA,EAAD,CAAM/N,UAAU,kBAAhB,UACI,sBAAKA,UAAU,cAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,uBAAO0H,QAAQ,gBAAf,0BACA,uBAAO5K,KAAK,OAAO+B,KAAK,gBAAgBwE,SAAU,SAACC,GAAD,OAAOsK,EAAetK,EAAEC,OAAOC,aAErF,sBAAKxD,UAAU,qBAAf,UACI,uBAAO0H,QAAQ,cAAf,wBACA,uBAAO5K,KAAK,OAAO+B,KAAK,cAAcwE,SAAU,SAACC,GAAD,OAAOwK,EAAaxK,EAAEC,OAAOC,aAEjF,cAACV,GAAA,EAAD,CAAQxC,QAAQ,OAAON,UAAU,aAAaC,QAAS,kBAAM8M,EAAUY,EAAcE,IAArF,uBAEJ,8BACI,cAAC,GAAD,SAmBR,qBAAK7N,UAAU,qBAAf,SACI,cAAC,GAAD,cCDTR,I,OAAAA,aAVS,SAAAC,GAAK,MAAK,CAC9BuO,WAAYvO,EAAME,YAAYqO,WAC9BrH,WAAYlH,EAAMmH,WAAWC,aAC7B7E,aAAcvC,EAAMmH,WAAW5E,iBAGR,SAAAzE,GAAQ,MAAM,CACrC0Q,MAAO,SAAChQ,GAAD,OAAUV,EAAS4B,EAAiBlB,QAGhCuB,EA9DG,SAAC,GAAyC,IAAvCyO,EAAsC,EAAtCA,MAAOtH,EAA+B,EAA/BA,WAAY3E,EAAmB,EAAnBA,aAAmB,EAE5BG,mBAAS,IAFmB,mBAEhDtD,EAFgD,KAE1C8J,EAF0C,OAGpBxG,mBAAS,IAHW,mBAGhD7E,EAHgD,KAGtCwK,EAHsC,OAI1B3F,mBAAS,IAJiB,mBAIhD9E,EAJgD,KAIzCoL,EAJyC,KAMvD,MAAkB,KAAf9B,EACQ,cAAC,KAAD,CAAUzG,GAAIyG,IAIrB,sBAAK3G,UAAU,YAAf,UACI,gEACA,eAAC+C,GAAA,EAAD,CAAM/C,UAAU,aAAhB,UACI,eAAC+C,GAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAACF,GAAA,EAAKG,MAAN,4BACA,cAACH,GAAA,EAAKI,QAAN,CAAcrG,KAAK,QAAQsG,YAAY,cAAcC,SAAU,SAACC,GAAD,OAAOmF,EAAYnF,EAAEC,OAAOC,UAC3F,cAACT,GAAA,EAAKiF,KAAN,CAAWhI,UAAU,aAArB,+DAIJ,eAAC+C,GAAA,EAAKC,MAAN,WACI,cAACD,GAAA,EAAKG,MAAN,mBACA,cAACH,GAAA,EAAKI,QAAN,CAAcrG,KAAK,OAAOsG,YAAY,6BAA6BC,SAAU,SAACC,GAAD,OAAOqF,EAAWrF,EAAEC,OAAOC,aAE5G,eAACT,GAAA,EAAKC,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAACF,GAAA,EAAKG,MAAN,uBACA,cAACH,GAAA,EAAKI,QAAN,CAAcrG,KAAK,WAAWsG,YAAY,WAAWC,SAAU,SAACC,GAAD,OAAOwE,EAAexE,EAAEC,OAAOC,aAElG,cAACV,GAAA,EAAD,CAAQxC,QAAQ,UAAUL,QAAS,WACnB,KAATpB,GAA4B,KAAbvB,GAA6B,KAAVD,GAGjC4Q,EAAM,CACN,KAAQpP,EACR,SAAYvB,EACZ,MAASD,KAPjB,oBAaA,mBAAG2C,UAAU,eAAb,sDACA,mBAAGA,UAAU,eAAb,kCACA,mBAAGA,UAAU,eAAb,wBACA,mBAAGA,UAAU,eAAb,iCACkB,KAAjBgC,EAAsB,6BAAKpE,KAAKC,UAAUmE,KAAsB,e,8CC1BlExC,I,OAAAA,aARS,SAACC,GAAD,MAAY,CAChCyO,cAAezO,EAAM4G,mBAAmB8H,iBAGjB,SAAA5Q,GAAQ,MAAK,CACpC6Q,kBAAmB,SAAA7G,GAAI,OAAIhK,EdnBI,SAACgK,GAAD,MAAW,CAC1CzK,KAAM6G,GAAsBE,oBAC5B9G,QAASwK,GciB2B1D,CAAoB0D,QAG7C/H,EAvBY,SAAC,GAAwC,IAAvC0O,EAAsC,EAAtCA,cAAeE,EAAuB,EAAvBA,kBACxC,OACI,sBAAKpO,UAAU,iCAAf,UACI,yCAEIkO,EAAc5G,KAAI,SAACC,EAAKC,GACpB,OAAO,cAACH,GAAA,EAAD,CAAW/G,QAAQ,QAAnB,SACH,eAAC+G,GAAA,EAAU7G,KAAX,CAAgBR,UAAU,eAA1B,UAAyC,iCAAOuH,EAAK1I,KAAZ,MAAqB0I,EAAKE,YAAgB,cAAC3E,GAAA,EAAD,CAAQxC,QAAQ,SAASL,QAAS,kBAAMmO,EAAkB7G,IAA1D,wBADhDC,a,SCoP5ChI,gBAfS,SAAAC,GAAK,MAAK,CAC9B0O,aAAc1O,EAAM4G,mBAAmB8H,aACvCE,WAAY5O,EAAMsC,iBAAiBiI,UACnC5D,WAAY3G,EAAMsC,iBAAiBmH,YACnCvC,WAAYlH,EAAMmH,WAAWC,aAC7B7E,aAAcvC,EAAM4G,mBAAmBrE,aACvCtC,QAASD,EAAME,YAAYD,YAGJ,SAAAnC,GAAQ,MAAK,CACpC+Q,YAAa,kBAAM/Q,EAASmE,OAC5B6M,eAAgB,SAAC/M,GAAD,OAAajE,EAASwH,GAAqBvD,KAC3DgN,kBAAmB,SAAC5M,GAAD,OAAarE,EAASiI,GAA4B5D,QAG1DpC,EAhPS,SAAC,GAAgI,IAA9HE,EAA6H,EAA7HA,QAAS8O,EAAoH,EAApHA,kBAAmBF,EAAiG,EAAjGA,YAAatM,EAAoF,EAApFA,aAAcoE,EAAsE,EAAtEA,WAAYO,EAA0D,EAA1DA,WAAY0H,EAA8C,EAA9CA,WAAYF,EAAkC,EAAlCA,aAAcI,EAAoB,EAApBA,eAAoB,EAE1GpM,mBAAS,IAFiG,mBAE7I+C,EAF6I,KAE/HuJ,EAF+H,OAGpGtM,mBAAS,IAH2F,mBAG7I6C,EAH6I,KAG5H0J,EAH4H,KASpJ,SAASC,EAAT,GAII,IAHAC,EAGD,EAHCA,sBACAC,EAED,EAFCA,aACAC,EACD,EADCA,gBACD,GACeF,EAAsBxO,OACV+B,mBAAS0M,IAFpC,mBAEQrL,EAFR,KAEeuL,EAFf,KAGO1L,EAAW2L,6BAAiB,SAAAxL,GAC9BsL,EAAgBtL,QAASyL,KAC1B,KAEH,OACI,+BACI,uBACIjP,UAAU,eACVwD,MAAOA,GAAS,GAChBH,SAAU,SAAAC,GACNyL,EAASzL,EAAEC,OAAOC,OAClBH,EAASC,EAAEC,OAAOC,QAEtBJ,YAAY,qBAxB5B+D,qBAAU,WACNmH,MACD,IA4BH,IAAMnE,EAAU+E,mBAAQ,iBAAM,CAC1B,CACIC,OAAQ,IACRC,SAAU,WAEd,CACID,OAAQ,OACRC,SAAU,aAEd,CACID,OAAQ,QACRC,SAAU,SAEd,CACID,OAAQ,SACRC,SAAU,UAEd,CACID,OAAQ,SACRE,KAAM,YAAY,IAAVC,EAAS,EAATA,IACJ,OAAO,cAACxM,GAAA,EAAD,CAAQxC,QAAQ,UAAUwJ,KAAK,KAAK9J,UAAU,iBAAiBC,QAAS,kBAAMuO,EAAkBc,EAAIC,SAAS3N,UAA7G,0BAGhB,IAGG3D,EAAOiM,IAAMgF,SAAQ,kBAAMb,IAAW,IACtCmB,EAAgBC,oBAAS,CAAEtF,UAASlM,OAAMyR,aAAc,CAAEC,UAAW,EAAGC,SAAU,IAAKC,cAAYC,mBAAiBC,kBAG1HC,EAiBIR,EAjBJQ,cACAC,EAgBIT,EAhBJS,kBACAC,EAeIV,EAfJU,aAEAC,GAaIX,EAdJ9L,KAcI8L,EAbJW,YACAC,EAYIZ,EAZJY,KACAC,EAWIb,EAXJa,gBACAC,EAUId,EAVJc,YACAC,EASIf,EATJe,YACAC,EAQIhB,EARJgB,UACAC,EAOIjB,EAPJiB,SACAC,EAMIlB,EANJkB,SACAC,EAKInB,EALJmB,aACAC,EAIIpB,EAJJoB,YACAhC,EAGIY,EAHJZ,sBACAE,EAEIU,EAFJV,gBAhFoJ,EAkFhJU,EADJ/P,MAASkQ,EAjF2I,EAiF3IA,UAAWC,EAjFgI,EAiFhIA,SAAUf,EAjFsH,EAiFtHA,aAG9B,OAAyB,IAAtBlI,EAAWvG,OACH,cAAC,KAAD,CAAUF,GAAIyG,IAIrB,8BAEIP,EAAa,cAAC/F,EAAA,EAAD,CAAS+G,UAAU,SAAS9G,QAAQ,YAEjD,sBAAKN,UAAU,oBAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,8CACA,sBAAKA,UAAU,sBAAf,UACI,sBAAKA,UAAU,gCAAf,UACI,uBAAO0H,QAAQ,UAAU1H,UAAU,wBAAnC,sBACA,uBAAOlD,KAAK,OAAOkD,UAAU,wBAAwBqD,SAAU,SAACwN,GAAD,OAAWpC,EAAkBoC,EAAMtN,OAAOC,aAE7G,sBAAKxD,UAAU,uCAAf,UACI,uBAAO0H,QAAQ,8BAA8B1H,UAAU,qBAAvD,8BACA,cAAC,KAAD,CAAU8Q,WAAY,CAClB1N,YAAa,0BAEbC,SAAUqL,EACVqC,KAAK,EACLC,aAAa,GACbnS,KAAK,8BACLmB,UAAU,6BAItB,cAAC2O,EAAD,CACIC,sBAAuBA,EACvBC,aAAcA,EACdC,gBAAiBA,IAErB,eAACmC,GAAA,EAAD,6BAAWjB,KAAX,IAA4BhQ,UAAU,qBAAtC,UACI,gCAEAkQ,EAAa5I,KAAI,SAAA4J,GAAW,OAExB,aADA,CACA,kCAAQA,EAAYC,uBAApB,aAEAD,EAAYxT,QAAQ4J,KAAI,SAAA8J,GAAM,OAE1B,aADA,CACA,kCAAQA,EAAOC,kBAAf,aAEAD,EAAOE,OAAO,wBAOtB,mDAAWrB,KAAX,aAEAG,EAAK9I,KAAI,SAAAgI,GAGL,OADAa,EAAWb,GAGX,aADA,CACA,kCAAQA,EAAIiC,eAAZ,aAEIjC,EAAIkC,MAAMlK,KAAI,SAAAmK,GAEd,OACI,gDAAQA,EAAKC,gBAAb,aAEAD,EAAKH,OAAO,2BAS5B,qBAAItR,UAAU,uBAAd,UACI,qBAAKA,UAAU,YAAYC,QAAS,kBAAMwQ,EAAS,IAAIkB,UAAWtB,EAAlE,mBAGA,qBAAKrQ,UAAU,YAAYC,QAAS,kBAAM0Q,KAAgBgB,UAAWtB,EAArE,SACK,MAEL,qBAAKrQ,UAAU,YAAYC,QAAS,kBAAMyQ,KAAYiB,UAAWrB,EAAjE,SACK,MAEL,qBAAKtQ,UAAU,YAAYC,QAAS,kBAAMwQ,EAASD,EAAY,IAAImB,UAAWrB,EAA9E,kBAGA,uCACS,IACL,mCACKX,EAAY,EADjB,OACwBY,EAAYnQ,UAC1B,OAEd,qBAAKJ,UAAU,yBAAf,SACQ,uBACIA,UAAU,eACVlD,KAAK,SACL+M,aAAc8F,EAAY,EAC1BtM,SAAU,SAAAC,GACN,IAAM8M,EAAO9M,EAAEC,OAAOC,MAAQoO,OAAOtO,EAAEC,OAAOC,OAAS,EAAI,EAC3DiN,EAASL,QAIlB,IACP,wBACIpQ,UAAU,yBACVwD,MAAOoM,EACPvM,SAAU,SAAAC,GACNsN,EAAYgB,OAAOtO,EAAEC,OAAOC,SAJpC,SAQK,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAI8D,KAAI,SAAAsI,GAAQ,OACjC,yBAAuBpM,MAAOoM,EAA9B,kBACUA,IADGA,WAMzB,cAAC9M,GAAA,EAAD,CAAQxC,QAAQ,UAAUxD,KAAK,SAASkD,UAAU,qBAC9CC,QAAS,kBAAMsO,EAAe,CAC1B,gBAAmBvJ,EACnB,aAAgBE,EAChB,aAAgBiJ,EAChB,UAAazO,EAAQ,GAAR,QALrB,4BAQCsC,EAAe,mBAAGhC,UAAU,eAAb,SAA6BgC,IAAoB,QAErE,qBAAKhC,UAAU,uBAAf,SACI,cAAC,GAAD,cClKLR,I,OAAAA,aAVS,SAAAC,GAAK,MAAK,CAC9B2G,WAAY3G,EAAM4G,mBAAmB6C,YACrC2I,YAAapS,EAAM4G,mBAAmBwL,gBAGf,SAAAtU,GAAQ,MAAK,CACpCuU,eAAgB,kBAAMvU,EAAS6H,OAC/B2M,yBAA0B,kBAAMxU,EAAS8H,UAG9B7F,EA/DS,SAAC,GAA2E,IAAzEuS,EAAwE,EAAxEA,yBAA0BD,EAA8C,EAA9CA,eAAgB1L,EAA8B,EAA9BA,WAAYyL,EAAkB,EAAlBA,YAEvEG,EAAW/H,eAWjB,OATA9C,qBAAU,WACmB,kBAAtB6K,EAASC,SACRH,IAGAC,MAEL,CAACC,IAGA,8BAEI5L,EAAa,cAAC/F,EAAA,EAAD,CAAS+G,UAAU,SAAS9G,QAAQ,YAEjD,sBAAKN,UAAU,mBAAf,UACI,6BAA4B,kBAAtBgS,EAASC,SAA+B,eAAiB,YAC/D,eAAChB,GAAA,EAAD,CAAOiB,SAAO,EAACC,UAAQ,EAAC1H,OAAK,EAA7B,UACI,gCACI,+BACI,mCACA,yCACA,2CACA,8CACA,6CAGR,gCAEIoH,EAAYvK,KAAI,SAAA8K,GACZ,OACA,+BACI,6BAAKA,EAAQ7M,aACb,6BAAK6M,EAAQlN,eACb,6BAAKkN,EAAQjN,YACb,6BAAKiN,EAAQpN,kBACb,6BAAI,cAAC,IAAD,CAAMhF,UAAU,WAAWE,GAAE,mBAAckS,EAAQ7M,YAAnD,wBALC6M,EAAQ7M,6B,SCyJ9B/F,I,OAAAA,aAXS,SAAAC,GAAK,MAAK,CAC9BuK,UAAWvK,EAAMsC,iBAAiBiI,UAClC5D,WAAY3G,EAAMsC,iBAAiBmH,YACnCvC,WAAYlH,EAAMmH,WAAWC,iBAGN,SAAAtJ,GAAQ,MAAK,CACpC0E,cAAe,kBAAM1E,EAASmD,KAC9ByM,UAAW,kBAAM5P,EAASmE,UAGflC,EA1LO,SAAC,GAAqE,IAAD,EAAlEyC,EAAkE,EAAlEA,cAAekL,EAAmD,EAAnDA,UAAWnD,EAAwC,EAAxCA,UAAW5D,EAA6B,EAA7BA,WAAYO,EAAiB,EAAjBA,WAEtEQ,qBAAU,WACNgG,MACF,IAEF,IAAMhD,EAAU+E,mBAAQ,iBAAM,CAC1B,CACIC,OAAQ,IACRC,SAAU,WAEd,CACID,OAAQ,OACRC,SAAU,aAEd,CACID,OAAQ,uBACRC,SAAU,sBAEd,CACID,OAAQ,sBACRC,SAAU,qBAEd,CACID,OAAQ,QACRC,SAAU,SAEd,CACID,OAAQ,SACRC,SAAU,UAEd,CACID,OAAQ,SACRC,SAAU,SACVC,KAAM,YAAY,IAAVC,EAAS,EAATA,IACJ,OAAO,cAAC,IAAD,CAAMtP,UAAU,WAAWE,GAAE,gBAAWoP,EAAIC,SAAS3N,SAArD,yBAGhB,IAIG3D,EAAO+L,EAEPwF,EAAgBC,oBAAS,CAAEtF,UAASlM,OAAMyR,aAAc,CAAEC,UAAW,EAAGC,SAAU,IAAMG,kBAG9FC,EAcIR,EAdJQ,cACAC,EAaIT,EAbJS,kBACAC,EAYIV,EAZJU,aACAC,EAWIX,EAXJW,WACAC,EAUIZ,EAVJY,KACAC,EASIb,EATJa,gBACAC,EAQId,EARJc,YACAC,EAOIf,EAPJe,YACAC,EAMIhB,EANJgB,UACAC,EAKIjB,EALJiB,SACAC,EAIIlB,EAJJkB,SACAC,EAGInB,EAHJmB,aACAC,EAEIpB,EAFJoB,YA3DuF,EA6DnFpB,EADJ/P,MAASkQ,EA5D8E,EA4D9EA,UAAWC,EA5DmE,EA4DnEA,SASpB,MALkB,WAAfjJ,GACCwG,IAKA,sBAAKnN,UAAU,iBAAf,UACI,oBAAIA,UAAU,kBAAd,0BACA,cAAC8C,GAAA,EAAD,CAAQxC,QAAQ,OAAON,UAAU,cAAcC,QAASgC,EAAxD,sBAEImE,EAAY,cAAC/F,EAAA,EAAD,CAAS+G,UAAU,SAAS9G,QAAQ,YAEhD,gCACI,eAAC2Q,GAAA,EAAD,6BAAWjB,KAAX,cACI,gCAEAE,EAAa5I,KAAI,SAAA4J,GAAW,OAExB,aADA,CACA,kCAAQA,EAAYC,uBAApB,aAEAD,EAAYxT,QAAQ4J,KAAI,SAAA8J,GAAM,OAE1B,aADA,CACA,kCAAQA,EAAOC,kBAAf,aAEAD,EAAOE,OAAO,wBAOtB,mDAAWrB,KAAX,aAEAG,EAAK9I,KAAI,SAAAgI,GAGL,OADAa,EAAWb,GAGX,aADA,CACA,kCAAQA,EAAIiC,eAAZ,aAEIjC,EAAIkC,MAAMlK,KAAI,SAAAmK,GAEd,OACI,gDAAQA,EAAKC,gBAAb,aAEAD,EAAKH,OAAO,2BAS5B,qBAAItR,UAAU,aAAd,UACI,oBAAIA,UAAU,YAAYC,QAAS,kBAAMwQ,EAAS,IAAIkB,UAAWtB,EAAjE,SACI,mBAAGrQ,UAAU,YAAb,qBAEJ,oBAAIA,UAAU,YAAYC,QAAS,kBAAM0Q,KAAgBgB,UAAWtB,EAApE,SACI,mBAAGrQ,UAAU,YAAb,SAA0B,QAE9B,oBAAIA,UAAU,YAAYC,QAAS,kBAAMyQ,KAAYiB,UAAWrB,EAAhE,SACI,mBAAGtQ,UAAU,YAAb,SAA0B,QAE9B,oBAAIA,UAAU,YAAYC,QAAS,kBAAMwQ,EAASD,EAAY,IAAImB,UAAWrB,EAA7E,SACI,mBAAGtQ,UAAU,YAAb,oBAEJ,6BACI,oBAAGA,UAAU,YAAb,iBACS,IACL,mCACK2P,EAAY,EADjB,OACwBY,EAAYnQ,UAC1B,SAGlB,oBAAIJ,UAAU,sBAAd,SACI,mBAAGA,UAAU,YAAb,SACI,uBACIA,UAAU,eACVlD,KAAK,SACL+M,aAAc8F,EAAY,EAC1BtM,SAAU,SAAAC,GACN,IAAM8M,EAAO9M,EAAEC,OAAOC,MAAQoO,OAAOtO,EAAEC,OAAOC,OAAS,EAAI,EAC3DiN,EAASL,IAEb7E,MAAO,CAAEjB,MAAO,QAASS,OAAQ,cAGvC,IACN,2BACI/K,UAAU,eACVwD,MAAOoM,GAFX,2BAGc,uBAHd,2BAIc,SAAAtM,GACNsN,EAAYgB,OAAOtO,EAAEC,OAAOC,WALpC,uBAOW,CAAE8G,MAAO,QAASS,OAAQ,SAPrC,0BASK,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAIzD,KAAI,SAAAsI,GAAQ,OACjC,yBAAuBpM,MAAOoM,EAA9B,kBACUA,IADGA,OAVrB,iBC9FTpQ,I,OAAAA,aAXS,SAAAC,GAAK,MAAK,CAC9B4S,SAAU5S,EAAME,YAAY2S,UAC5BpJ,YAAazJ,EAAME,YAAYuJ,YAC/BvC,WAAYlH,EAAMmH,WAAWC,iBAGN,SAAAtJ,GAAQ,MAAK,CACpCgV,iBAAkB,SAACrT,GAAD,OAAQ3B,E5BhEa,SAAC2B,GAAD,MAAS,CAChDpC,KAAMG,EACNF,QAASmC,G4B8D0BsT,CAA4BtT,KAC/DuT,WAAY,kBAAMlV,EAASyB,SAGhBQ,EA7DY,SAAC,GAAyE,IAAvE6S,EAAsE,EAAtEA,SAAUE,EAA4D,EAA5DA,iBAAkBE,EAA0C,EAA1CA,WAAYvJ,EAA8B,EAA9BA,YAUlE,MARkB,WAF8E,EAAjBvC,YAG3E8L,IAGJtL,qBAAU,WACNsL,MACD,IAGC,8BAEIvJ,EAAc,cAAC7I,EAAA,EAAD,CAAS+G,UAAU,SAAS9G,QAAQ,YAElD,sBAAKN,UAAU,uBAAf,UACI,oBAAIA,UAAU,wBAAd,uBACA,cAAC8C,GAAA,EAAD,CAAQxC,QAAQ,OAAON,UAAU,cAAcC,QAAS,kBAAMsS,EAAiB,OAA/E,sBACA,eAACtB,GAAA,EAAD,CAAOiB,SAAO,EAACC,UAAQ,EAAC1H,OAAK,EAA7B,UACI,gCACI,+BACI,mCACA,sCACA,uCACA,sCACA,6CAGR,gCAEI4H,EAAS/K,KAAI,SAAAoL,GACT,OACI,+BACI,6BAAKA,EAAKxT,KACV,6BAAKwT,EAAK7T,OACV,6BAAK6T,EAAKrV,QACV,6BAAKqV,EAAK5T,OACV,6BAAI,cAACgE,GAAA,EAAD,CAAQxC,QAAQ,SAASwJ,KAAK,KAAK9J,UAAU,aAAaC,QAAS,kBAAMsS,EAAiBG,EAAKxT,KAA/F,wBALCwT,EAAKxT,qBCyD/BM,I,OAAAA,aAXS,SAAAC,GAAK,MAAK,CAC9BgH,WAAYhH,EAAMsC,iBAAiB4Q,WACnCC,mBAAoBnT,EAAMsC,iBAAiB8Q,uBAC3ClM,WAAYlH,EAAMmH,WAAWC,iBAGN,SAAAtJ,GAAQ,MAAK,CACpCuV,YAAa,SAAC5T,GAAD,OAAQ3B,EAASoE,GAAuBzC,KACrD6T,WAAY,SAACC,GAAD,OAASzV,EAASsE,GAAwBmR,QAG3CxT,EAxFM,SAAC,GAA6E,IAA3EiH,EAA0E,EAA1EA,WAAYqM,EAA8D,EAA9DA,YAAaF,EAAiD,EAAjDA,mBAAoBG,EAA6B,EAA7BA,WAAYpM,EAAiB,EAAjBA,WACrE/E,EAAYsF,eAAZtF,QADsF,EAGpDO,mBAAS,GAH2C,mBAGvF8Q,EAHuF,KAGzEC,EAHyE,OAI1C/Q,mBAAS,GAJiC,mBAIvFO,EAJuF,KAIpEC,EAJoE,OAK3DR,mBAAS,IALkD,mBAKvFgR,EALuF,KAK3EtQ,EAL2E,KAW9F,OAJAsE,qBAAU,WACN2L,EAAYlR,KACb,IAEsB,IAAtB+E,EAAWvG,OACH,cAAC,KAAD,CAAUF,GAAE,UAAKyG,KAIxB,8BAEQF,EAAWrG,OAAS,EACpB,sBAAKJ,UAAU,gBAAf,UACI,qBAAIA,UAAU,iBAAd,uBAA0C4B,KAEtCgR,EAAqB,cAACvS,EAAA,EAAD,CAAS+G,UAAU,SAAS9G,QAAQ,YAEzD,eAACyC,GAAA,EAAD,WACI,eAACA,GAAA,EAAKC,MAAN,WACI,eAACD,GAAA,EAAKG,MAAN,WAAY,8CAAZ,OACA,cAACH,GAAA,EAAKI,QAAN,CAAcyG,WAAS,EAAC7B,UAAQ,EAAC8B,aAAcpD,EAAW,GAAGrE,eAEjE,eAACW,GAAA,EAAKC,MAAN,WACI,eAACD,GAAA,EAAKG,MAAN,WAAY,kEAAZ,OACA,cAACH,GAAA,EAAKI,QAAN,CAAcyG,WAAS,EAAC7B,UAAQ,EAAC8B,aAAcpD,EAAW,GAAGjE,wBAEjE,eAACO,GAAA,EAAKC,MAAN,WACI,eAACD,GAAA,EAAKG,MAAN,WAAY,iEAAZ,OACA,cAACH,GAAA,EAAKI,QAAN,CAAcyG,WAAS,EAAC7B,UAAQ,EAAC8B,aAAcpD,EAAW,GAAG/D,uBAEjE,eAACK,GAAA,EAAKC,MAAN,CAAYC,UAAU,+BAAtB,UACI,cAACF,GAAA,EAAKG,MAAN,8BACA,cAACH,GAAA,EAAKI,QAAN,CAAcM,GAAG,WAAWC,KAAM,EAAGqE,UAAQ,EAAC8B,aAAcpD,EAAW,GAAG7D,YAE9E,eAACG,GAAA,EAAKC,MAAN,WACI,eAACD,GAAA,EAAKG,MAAN,WAAY,0CAAZ,OACA,cAACH,GAAA,EAAKI,QAAN,CAAcyG,WAAS,EAAC7B,UAAQ,EAAC8B,aAAcpD,EAAW,GAAGnE,WAEjE,eAACS,GAAA,EAAKC,MAAN,WACI,eAACD,GAAA,EAAKG,MAAN,WAAY,iEAAZ,OACA,cAACH,GAAA,EAAKI,QAAN,CAAc2G,KAAK,KAAKhN,KAAK,SAASsG,YAAY,+BAA+B2G,IAAI,IAAI1G,SAAU,SAACC,GAAD,OAAO4P,EAAkB5P,EAAEC,OAAOC,aAEzI,eAACT,GAAA,EAAKC,MAAN,WACI,eAACD,GAAA,EAAKG,MAAN,WAAY,gEAAZ,OACA,cAACH,GAAA,EAAKI,QAAN,CAAc2G,KAAK,KAAKhN,KAAK,SAASsG,YAAY,8BAA8B2G,IAAI,IAAI1G,SAAU,SAACC,GAAD,OAAOX,EAAuBW,EAAEC,OAAOC,aAE7I,eAACT,GAAA,EAAKC,MAAN,CAAYC,UAAU,+BAAtB,UACI,cAACF,GAAA,EAAKG,MAAN,yBACA,cAACH,GAAA,EAAKI,QAAN,CAAcM,GAAG,WAAWC,KAAM,EAAGL,SAAU,SAACC,GAAD,OAAOT,EAAaS,EAAEC,OAAOC,aAEhF,cAACV,GAAA,EAAD,CAAQxC,QAAQ,UAAUxD,KAAK,SAC/BmD,QAAS,kBAAM8S,EAAW,CAClB,QAAWnR,EACX,mBAAsBqR,EACtB,kBAAqBvQ,EACrB,OAAUyQ,KALlB,+BAaJ,cAAC9S,EAAA,EAAD,CAAS+G,UAAU,SAAS9G,QAAQ,kBCW7Cd,gBALS,SAAAC,GAAK,MAAK,CAChCC,QAASD,EAAME,YAAYD,QAC3BsO,WAAYvO,EAAME,YAAYqO,cAGjBxO,EA1DH,SAAC,GAAoB,IAAlBwO,EAAiB,EAAjBA,WAEb,OACE,cAAC,IAAD,UACE,sBAAKhO,UAAU,MAAf,UACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,KAAD,CAAOoT,KAAK,SAAZ,SACE,cAAC,GAAD,MAGApF,EACA,sBAAKhO,UAAU,cAAf,UACE,cAAC,EAAD,CAASA,UAAU,iBACnB,cAAC,EAAD,CAAQA,UAAU,gBAClB,sBAAKA,UAAU,OAAf,UACI,cAAC,KAAD,CAAOqT,OAAK,EAACD,KAAK,IAAlB,SACE,cAAC,GAAD,MAEF,cAAC,KAAD,CAAOA,KAAK,gBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,KAAD,CAAOA,KAAK,uBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,KAAD,CAAOA,KAAK,gBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,KAAD,CAAOA,KAAK,mBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,KAAD,CAAOA,KAAK,cAAZ,SACE,cAAC,GAAD,MAEF,cAAC,KAAD,CAAOA,KAAK,WAAZ,SACE,cAAC,GAAD,MAEF,cAAC,KAAD,CAAOA,KAAK,iBAAZ,SACE,cAAC,GAAD,YAKR,cAAC,KAAD,CAAUlT,GAAG,mBCnENoT,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1V,MAAK,YAAkD,IAA/C2V,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,2DCLRO,GAAgB,CAClB3F,aAAc,GACdnM,aAAc,GACd+R,eAAe,EACfzK,sBAAsB,EACtBuI,YAAa,GACb3I,aAAa,EACb5C,mBAAmB,EACnBE,cAAe,GACfE,qBAAsB,GACtB6C,eAAgB,IA6ILlD,GA1IY,WAAkC,IAAjC5G,EAAgC,uDAA1BqU,GAAeE,EAAW,uCACxD,OAAOA,EAAOlX,MACV,KAAK6G,GAAsBC,eACvB,OAAGoQ,EAAOjX,QAAQ0K,UAAY,GAC1BhI,EAAM0O,aAAa7G,KAAI,SAACC,EAAMC,GAC1B,GAAGD,EAAK1I,OAASmV,EAAOjX,QAAQ8B,KAE5B,OADAY,EAAM0O,aAAa8F,OAAOzM,EAAO,GAC1B,6BACA/H,GADP,IAEI0O,aAAc1O,EAAM0O,aAAa+F,OAAOF,EAAOjX,SAC/CuM,sBAAuB7J,EAAM6J,0BAIlC,6BACA7J,GADP,IAEI0O,aAAc1O,EAAM0O,aAAa+F,OAAOF,EAAOjX,SAC/CuM,sBAAuB7J,EAAM6J,wBAI1B7J,EAEf,KAAKkE,GAAsBE,oBACvB,IAAIsQ,EAAW1U,EAAM0O,aAAaiG,QAAO,SAAA7M,GACrC,OAAOA,EAAK1I,OAASmV,EAAOjX,QAAQ8B,QAExC,OAAO,6BACAY,GADP,IAEI0O,aAAc,GAAG+F,OAAOC,KAEhC,KAAKxQ,GAAsBG,qBACvB,OAAO,6BACArE,GADP,IAEIsU,eAAe,IAEvB,KAAKpQ,GAAsBI,uBACvB,OAAO,6BACAtE,GADP,IAEIsU,eAAe,EACf/R,aAAc,KAEtB,KAAK2B,GAAsBK,sBACvB,OAAO,6BACAvE,GADP,IAEIsU,eAAe,EACf/R,aAAcgS,EAAOjX,UAE7B,KAAK4G,GAAsBM,yBACvB,OAAO,6BACAxE,GADP,IAEIyJ,aAAa,IAErB,KAAKvF,GAAsBO,2BACvB,OAAO,6BACAzE,GADP,IAEIyJ,aAAa,EACblH,aAAc,GACd6P,YAAawC,MAAMC,KAAKN,EAAOjX,WAEvC,KAAK4G,GAAsBQ,0BACvB,OAAO,6BACA1E,GADP,IAEIyJ,aAAa,EACblH,aAAcgS,EAAOjX,UAE7B,KAAK4G,GAAsBiB,4BACvB,OAAO,6BACAnF,GADP,IAEIyJ,aAAa,IAErB,KAAKvF,GAAsBkB,8BACvB,OAAO,6BACApF,GADP,IAEIyJ,aAAa,EACblH,aAAc,GACduH,eAAgB8K,MAAMC,KAAKN,EAAOjX,WAE1C,KAAK4G,GAAsBmB,6BACvB,OAAO,6BACArF,GADP,IAEIyJ,aAAa,EACblH,aAAcgS,EAAOjX,UAE7B,KAAK4G,GAAsBS,8BACvB,OAAO,6BACA3E,GADP,IAEIyJ,aAAa,IAErB,KAAKvF,GAAsBU,gCACvB,OAAO,6BACA5E,GADP,IAEIyJ,aAAa,EACblH,aAAc,GACd6P,YAAawC,MAAMC,KAAKN,EAAOjX,WAEvC,KAAK4G,GAAsBW,+BACvB,OAAO,6BACA7E,GADP,IAEIyJ,aAAa,EACblH,aAAcgS,EAAOjX,UAE7B,KAAK4G,GAAsBY,0BACvB,OAAO,6BACA9E,GADP,IAEI6G,mBAAmB,IAE3B,KAAK3C,GAAsBa,4BACvB,OAAO,6BACA/E,GADP,IAEI6G,mBAAmB,EACnBtE,aAAc,GACdwE,cAAe6N,MAAMC,KAAKN,EAAOjX,SACjC2J,qBAAsB2N,MAAMC,KAAKN,EAAOjX,QAAQ,GAAf,gBAEzC,KAAK4G,GAAsBc,2BACvB,OAAO,6BACAhF,GADP,IAEI6G,mBAAmB,EACnBtE,aAAcgS,EAAOjX,UAE7B,KAAK4G,GAAsBe,cACvB,OAAO,6BACAjF,GADP,IAEIuC,aAAc,GACdmM,aAAc,KAEtB,KAAKxK,GAAsBgB,4BACvB,OAAO,6BACAlF,GADP,IAEI6J,sBAAuB7J,EAAM6J,uBAErC,QACI,OAAO7J,ICpJbqU,GAAgB,CAClBhS,gBAAgB,EAChBuG,WAAW,EACXrG,aAAc,GACdgI,UAAW,GACXd,aAAa,EACbyJ,WAAY,GACZE,wBAAwB,EACxB0B,wBAAwB,GAkFbxS,GA/EU,WAAkC,IAAjCtC,EAAgC,uDAA1BqU,GAAeE,EAAW,uCACtD,OAAOA,EAAOlX,MACV,IAAK,4BACD,OAAO,6BACA2C,GADP,IAEIqC,gBAAiBrC,EAAMqC,iBAE/B,IAAK,qBACD,OAAO,6BACArC,GADP,IAEI4I,WAAW,IAEnB,IAAK,uBACD,OAAO,6BACA5I,GADP,IAEI4I,WAAW,EACXrG,aAAc,KAEtB,IAAK,sBACD,OAAO,6BACAvC,GADP,IAEI4I,WAAW,EACXrG,aAAcgS,EAAOjX,UAE7B,IAAK,mBACD,OAAO,6BACA0C,GADP,IAEIyJ,aAAa,IAErB,IAAK,qBACD,OAAO,6BACAzJ,GADP,IAEIyJ,aAAa,EACbc,UAAWqK,MAAMC,KAAKN,EAAOjX,WAErC,IAAK,oBACD,OAAO,6BACA0C,GADP,IAEI4I,WAAW,EACXrG,aAAcgS,EAAOjX,UAE7B,IAAK,yBACD,OAAO,6BACA0C,GADP,IAEIoT,wBAAwB,IAEhC,IAAK,2BACD,OAAO,6BACApT,GADP,IAEIoT,wBAAwB,EACxBF,WAAY0B,MAAMC,KAAKN,EAAOjX,WAEtC,IAAK,0BACD,OAAO,6BACA0C,GADP,IAEIoT,wBAAwB,EACxB7Q,aAAcgS,EAAOjX,UAE7B,IAAK,0BACD,OAAO,6BACA0C,GADP,IAEI8U,wBAAwB,IAEhC,IAAK,4BACD,OAAO,6BACA9U,GADP,IAEI8U,wBAAwB,IAEhC,IAAK,2BACD,OAAO,6BACA9U,GADP,IAEI8U,wBAAwB,EACxBvS,aAAcgS,EAAOjX,UAE7B,QACI,OAAO0C,ICtFbqU,GAAgB,CAClB7K,aAAa,EACbjH,aAAc,GACdqG,WAAW,EACXiK,UAAW,GACXpJ,aAAa,EACbC,WAAY,GACZ6E,YAAY,EACZwG,eAAe,EACf9U,QAAS,ICNPoU,GAAgB,CAClBnM,qBAAqB,EACrBQ,WAAY,KACZD,YAAY,EACZuM,cAAc,EACdzS,aAAc,IA6CH4F,GA1Ca,WAAkC,IAAjCnI,EAAgC,uDAA1BqU,GAAeE,EAAW,uCACzD,OAAOA,EAAOlX,MACV,KAAKG,EACD,OAAO,6BACAwC,GADP,IAEIkI,qBAAqB,EACrBQ,WAAY6L,EAAOjX,UAE3B,KAAKE,EACD,OAAO,6BACAwC,GADP,IAEIkI,qBAAqB,IAE7B,KAAK1K,EACD,OAAO,6BACAwC,GADP,IAEIgV,cAAc,IAEtB,KAAKxX,EACD,OAAO,6BACAwC,GADP,IAEIgV,cAAc,EACdvM,YAAY,EACZlG,aAAc,KAEtB,KAAK/E,EACD,OAAO,6BACAwC,GADP,IAEIgV,cAAc,EACdvM,YAAY,EACZlG,aAAcgS,EAAOjX,UAE7B,KAAKE,EACD,OAAO,6BACAwC,GADP,IAEIyI,YAAY,IAEpB,QACI,OAAOzI,IC/CbqU,GAAgB,CAClBjN,aAAc,IAoBHD,GAjBI,WAAkC,IAAjCnH,EAAgC,uDAA1BqU,GAAeE,EAAW,uCAChD,OAAOA,EAAOlX,MACV,KAAKL,EAAaC,YACd,OAAO,6BACA+C,GADP,IAEIoH,aAAcmN,EAAOjX,UAE7B,KAAKN,EAAaE,eACd,OAAO,6BACA8C,GADP,IAEIoH,aAAc,KAEtB,QACI,OAAOpH,ICjBbqU,GAAgB,CAClBC,eAAe,EACf/R,aAAc,GACd0S,eAAe,GA4CJ5N,GAzCe,WAAkC,IAAjCrH,EAAgC,uDAA1BqU,GAAeE,EAAW,uCAC3D,OAAOA,EAAOlX,MACV,KAAK2I,GAAyBC,sBAC1B,OAAO,6BACAjG,GADP,IAEIsU,eAAe,IAEvB,KAAKtO,GAAyBE,wBAC1B,OAAO,6BACAlG,GADP,IAEIsU,eAAe,EACf/R,aAAc,KAEtB,KAAKyD,GAAyBG,uBAC1B,OAAO,6BACAnG,GADP,IAEIsU,eAAe,EACf/R,aAAcgS,EAAOjX,UAE7B,KAAK0I,GAAyBI,qBAC1B,OAAO,6BACApG,GADP,IAEIiV,eAAe,IAEvB,KAAKjP,GAAyBK,uBAC1B,OAAO,6BACArG,GADP,IAEIiV,eAAe,EACf1S,aAAc,KAEtB,KAAKyD,GAAyBM,sBAC1B,OAAO,6BACAtG,GADP,IAEIiV,eAAe,EACf1S,aAAcgS,EAAOjX,UAE7B,QACI,OAAO0C,IC3CbqU,GAAgB,CAClBa,iBAAiB,EACjB9J,SAAU,GACV+J,iBAAkB,GAClBC,kBAAmB,GACnBC,kBAAkB,EAClBC,UAAW,IAgDAjK,GA7CM,WAAkC,IAAjCrL,EAAgC,uDAA1BqU,GAAeE,EAAW,uCAClD,OAAOA,EAAOlX,MACV,KAAKsP,GAAeC,oBAChB,OAAO,6BACA5M,GADP,IAEIkV,iBAAiB,IAEzB,KAAKvI,GAAeE,sBAChB,IAAM0I,EAAahB,EAAOjX,QAAQuK,KAAI,SAAAC,GAElC,OADAA,EAAI,IAAU0N,SAAS1N,EAAI,KACpBA,KAEX,OAAO,6BACA9H,GADP,IAEIkV,iBAAiB,EACjB9J,SAAU,GAAGqJ,OAAOc,KAE5B,KAAK5I,GAAeG,qBAChB,OAAO,6BACA9M,GADP,IAEIkV,iBAAiB,EACjBC,iBAAkBZ,EAAOjX,UAEjC,KAAKqP,GAAeI,qBAChB,OAAO,6BACA/M,GADP,IAEIqV,kBAAkB,IAE1B,KAAK1I,GAAeK,uBAChB,OAAO,6BACAhN,GADP,IAEIqV,kBAAkB,EAClBC,UAAW,GAAGb,OAAOF,EAAOjX,WAEpC,KAAKqP,GAAeM,sBAChB,OAAO,6BACAjN,GADP,IAEIqV,kBAAkB,EAClBD,kBAAmBb,EAAOjX,UAElC,QACI,OAAO0C,ICpDbqU,GAAgB,CAClBlU,iBAAiB,GAeNC,GAZQ,WAAkC,IAAjCJ,EAAgC,uDAA1BqU,GAAeE,EAAW,uCACpD,OAAOA,EAAOlX,MACV,IAAK,iCACD,OAAO,6BACA2C,GADP,IAEIG,iBAAkBH,EAAMG,kBAEhC,QACI,OAAOH,ICSJyV,GAXKC,aAAgB,CAChC9O,mBAAoBA,GACpBtE,iBAAkBA,GAClB6F,oBAAqBA,GACrBjI,YNFuB,WAAkC,IAAjCF,EAAgC,uDAA1BqU,GAAeE,EAAW,uCACxD,OAAOA,EAAOlX,MACV,IAAK,kCACD,OAAO,6BACA2C,GADP,IAEIwJ,aAAa,EACbjH,aAAc,KAEtB,IAAK,oCAKL,IAAK,mCACD,OAAO,6BACAvC,GADP,IAEIwJ,aAAa,IAErB,IAAK,iCACD,OAAO,6BACAxJ,GADP,IAEIyJ,aAAa,EACblH,aAAc,KAEtB,IAAK,mCACD,OAAO,6BACAvC,GADP,IAEIyJ,aAAa,EACboJ,UAAW+B,MAAMC,KAAKN,EAAOjX,WAErC,IAAK,kCACD,OAAO,6BACA0C,GADP,IAEIyJ,aAAa,EACblH,aAAcgS,EAAOjX,UAE7B,IAAK,uCACD,OAAO,6BACA0C,GADP,IAEIyJ,aAAa,EACblH,aAAc,KAEtB,IAAK,yCACD,OAAO,6BACAvC,GADP,IAEIyJ,aAAa,EACbC,WAAYkL,MAAMC,KAAKN,EAAOjX,WAEtC,IAAK,wCACD,OAAO,6BACA0C,GADP,IAEIyJ,aAAa,EACblH,aAAcgS,EAAOjX,UAE7B,IAAK,qBACD,OAAO,6BACA0C,GADP,IAEI4I,WAAW,IAEnB,IAAK,uBACD,OAAO,6BACA5I,GADP,IAEI4I,WAAW,EACXrG,aAAc,KAEtB,IAAK,sBACD,OAAO,6BACAvC,GADP,IAEI4I,WAAW,EACXrG,aAAcgS,EAAOjX,UAE7B,IAAK,mBACD,OAAO,6BACA0C,GADP,IAEI+U,eAAe,IAEvB,IAAK,qBACD,OAAO,6BACA/U,GADP,IAEI+U,eAAe,EACfxS,aAAc,GACdgM,YAAY,EACZtO,QAAS,GAAGwU,OAAOF,EAAOjX,WAElC,IAAK,oBACD,OAAO,6BACA0C,GADP,IAEI+U,eAAe,EACfxS,aAAcgS,EAAOjX,UAE7B,IAAK,SACD,OAAO,6BACA0C,GADP,IAEIC,QAAS,GAAGwU,OAAO,IACnBlG,YAAY,IAEpB,QACI,OAAOvO,IM9FfmH,WAAYA,GACZE,sBAAuBA,GACvBgE,aAAcA,GACdjL,eAAgBA,K,SCbduV,GAAc,CAACC,KAAQC,MAKdC,GAHDC,aAAYN,GAAaO,KAAe,WAAf,EAAmBL,KCS1DM,IAASpE,OACP,cAAC,IAAD,CAAUiE,MAAOA,GAAjB,SACE,cAAC,IAAMI,WAAP,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,SAM1BvC,M","file":"static/js/main.90f780e1.chunk.js","sourcesContent":["export const USER_CONSTANT = {\r\n    LOGIN_USER_START: \"LOGIN_USER_START\",\r\n    LOGIN_USER_SUCCESS: \"LOGIN_USER_SUCCESS\",\r\n    LOGIN_USER_FAILED: \"LOGIN_USER_FAILED\",\r\n    DELETE_USER_FROM_DATABASE_START: \"DELETE_USER_FROM_DATABASE_START\",\r\n    DELETE_USER_FROM_DATABASE_SUCCESS: \"DELETE_USER_FROM_DATABASE_SUCCESS\",\r\n    DELETE_USER_FROM_DATABASE_FAILED: \"DELETE_USER_FROM_DATABASE_FAILED\",\r\n    ADD_NEW_USER_START: \"ADD_NEW_USER_START\",\r\n    ADD_NEW_USER_SUCCESS: \"ADD_NEW_USER_SUCCESS\",\r\n    ADD_NEW_USER_FAILED: \"ADD_NEW_USER_FAILED\",\r\n    FETCH_USER_FROM_DATABASE_START: \"FETCH_USER_FROM_DATABASE_START\",\r\n    FETCH_USER_FROM_DATABASE_SUCCESS: \"FETCH_USER_FROM_DATABASE_SUCCESS\",\r\n    FETCH_USER_FROM_DATABASE_FAILED: \"FETCH_USER_FROM_DATABASE_FAILED\",\r\n    FETCH_SINGLEUSER_FROM_DATABASE_START: \"FETCH_SINGLEUSER_FROM_DATABASE_START\",\r\n    FETCH_SINGLEUSER_FROM_DATABASE_SUCCESS: \"FETCH_SINGLEUSER_FROM_DATABASE_SUCCESS\",\r\n    FETCH_SINGLEUSER_FROM_DATABASE_FAILED: \"FETCH_SINGLEUSER_FROM_DATABASE_FAILED\",\r\n    LOGOUT: \"LOGOUT\"\r\n}","const URL_CONSTANT = {\r\n    REDIRECT_TO: \"REDIRECT_TO\",\r\n    RESET_REDIRECT: \"RESET_REDIRECT\"\r\n}\r\n\r\nexport default URL_CONSTANT","import URL_CONSTANT from './url.constant'\r\n\r\nexport const RedirectTo = (link) => ({\r\n    type: URL_CONSTANT.REDIRECT_TO,\r\n    payload: link\r\n})\r\n\r\nexport const ResetRedirect = () => ({\r\n    type: URL_CONSTANT.RESET_REDIRECT\r\n})","export const VERIFICATION_CONSTANT = {\r\n    SHOW_VERIFICATION_COMPONENT: \"SHOW_VERIFICATION_COMPONENT\",\r\n    CLOSE_DISPLAY: \"CLOSE_DISPLAY\",\r\n    VERIFY_START: \"VERIFY_START\",\r\n    VERIFY_SUCCESS: \"VERIFY_SUCCESS\",\r\n    VERIFY_FAILED: \"VERIFY_FAILED\",\r\n    RESET_AUTHORIZED: \"RESET_AUTHORIZED\"\r\n} \r\n","import {VERIFICATION_CONSTANT} from './verification.constant'\r\n\r\nexport const SHOW_VERIFICATION_COMPONENT = (id) => ({\r\n    type: VERIFICATION_CONSTANT.SHOW_VERIFICATION_COMPONENT,\r\n    payload: id\r\n})\r\n\r\nexport const CLOSE_DISPLAY = {\r\n    type: VERIFICATION_CONSTANT.CLOSE_DISPLAY\r\n}\r\n\r\nexport const VERIFY_START = () => ({\r\n    type: VERIFICATION_CONSTANT.VERIFY_START\r\n})\r\n\r\nexport const VERIFY_SUCCESS = () => ({\r\n    type: VERIFICATION_CONSTANT.VERIFY_SUCCESS\r\n})\r\n\r\nexport const VERIFY_FAILED = (error) => ({\r\n    type: VERIFICATION_CONSTANT.VERIFY_FAILED,\r\n    payload: error\r\n})\r\n\r\nexport const RESET_AUTHORIZED = () => ({\r\n    type: VERIFICATION_CONSTANT.RESET_AUTHORIZED\r\n})\r\n\r\nexport const verify_authorized_personAsync = (email, password) => {\r\n    return dispatch => {\r\n        dispatch(VERIFY_START())\r\n        fetch('http://localhost:50000/verify', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                'name': 'Ho Kah Wai',\r\n                'email': email,\r\n                'password': password\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if(data !== \"OK\"){\r\n                throw Error(\"Failed\")\r\n            }\r\n            else {\r\n                dispatch(VERIFY_SUCCESS())\r\n                dispatch(CLOSE_DISPLAY)\r\n            }\r\n        })\r\n        .catch(err => {\r\n            dispatch(VERIFY_FAILED(err))\r\n        })\r\n    }\r\n}","import { USER_CONSTANT } from './user.constant'\r\n\r\nimport { RedirectTo, ResetRedirect } from '../url/url.action'\r\nimport { RESET_AUTHORIZED } from '../verification/verification.action'\r\n\r\nexport const DELETE_USER_FROM_DATABASE_START = () => ({\r\n    type: USER_CONSTANT.DELETE_USER_FROM_DATABASE_START\r\n})\r\n\r\nexport const DELETE_USER_FROM_DATABASE_SUCCESS = () => ({\r\n    type: USER_CONSTANT.DELETE_USER_FROM_DATABASE_SUCCESS\r\n})\r\n\r\nexport const DELETE_USER_FROM_DATABASE_FAILED = () => ({\r\n    type: USER_CONSTANT.DELETE_USER_FROM_DATABASE_FAILED\r\n})\r\n\r\nexport const FETCH_USER_FROM_DATABASE_START = () => ({\r\n    type: USER_CONSTANT.FETCH_USER_FROM_DATABASE_START\r\n})\r\n\r\nexport const FETCH_USER_FROM_DATABASE_SUCCESS = (userList) => ({\r\n    type: USER_CONSTANT.FETCH_USER_FROM_DATABASE_SUCCESS,\r\n    payload: userList\r\n})\r\n\r\nexport const FETCH_USER_FROM_DATABASE_FAILED = (error) => ({\r\n    type: USER_CONSTANT.FETCH_USER_FROM_DATABASE_FAILED,\r\n    payload: error\r\n})\r\n\r\nexport const FETCH_SINGLEUSER_FROM_DATABASE_START = () => ({\r\n    type: USER_CONSTANT.FETCH_SINGLEUSER_FROM_DATABASE_START\r\n})\r\n\r\nexport const FETCH_SINGLEUSER_FROM_DATABASE_SUCCESS = (userList) => ({\r\n    type: USER_CONSTANT.FETCH_SINGLEUSER_FROM_DATABASE_SUCCESS,\r\n    payload: userList\r\n})\r\n\r\nexport const FETCH_SINGLEUSER_FROM_DATABASE_FAILED = (error) => ({\r\n    type: USER_CONSTANT.FETCH_SINGLEUSER_FROM_DATABASE_FAILED,\r\n    payload: error\r\n})\r\n\r\nexport const ADD_NEW_USER_START = () => ({\r\n    type: USER_CONSTANT.ADD_NEW_USER_START\r\n})\r\nexport const ADD_NEW_USER_SUCCESS = () => ({\r\n    type: USER_CONSTANT.ADD_NEW_USER_SUCCESS\r\n})\r\nexport const ADD_NEW_USER_FAILED = (error) => ({\r\n    type: USER_CONSTANT.ADD_NEW_USER_FAILED,\r\n    payload: error\r\n})\r\n\r\nexport const LOGIN_USER_START = () => ({\r\n    type: USER_CONSTANT.LOGIN_USER_START\r\n})\r\nexport const LOGIN_USER_SUCCESS = (data) => ({\r\n    type: USER_CONSTANT.LOGIN_USER_SUCCESS,\r\n    payload: data\r\n})\r\nexport const LOGIN_USER_FAILED = (error) => ({\r\n    type: USER_CONSTANT.LOGIN_USER_FAILED,\r\n    payload: error\r\n})\r\n\r\nexport const LOGOUT = () => ({\r\n    type: USER_CONSTANT.LOGOUT\r\n})\r\n\r\n\r\n// START - ASYNC action handler\r\nexport const DELETE_USER_ASYNC = (user_id) => {\r\n    return dispatch => {\r\n        dispatch(DELETE_USER_FROM_DATABASE_START())\r\n        fetch('http://localhost:50000/delete_user', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                'id': user_id\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if(data === 1){\r\n                dispatch(DELETE_USER_FROM_DATABASE_SUCCESS())\r\n                dispatch(RESET_AUTHORIZED())\r\n                dispatch(RedirectTo('reload'))\r\n                dispatch(ResetRedirect())\r\n            }\r\n            else {\r\n                dispatch(DELETE_USER_FROM_DATABASE_FAILED())\r\n            }\r\n        })\r\n        .catch(err => dispatch(DELETE_USER_FROM_DATABASE_FAILED()))\r\n\r\n    }\r\n}\r\n\r\nexport const ADD_NEW_USER_ASYNC = (email, name, role, password) => {\r\n    return dispatch => {\r\n        dispatch(ADD_NEW_USER_START())\r\n        fetch('http://localhost:50000/add_new_user', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                'name': name,\r\n                'email': email,\r\n                'password': password,\r\n                'role': role\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if(data.name === \"error\"){\r\n                dispatch(ADD_NEW_USER_FAILED(data.detail))\r\n            }\r\n            else {\r\n                dispatch(ADD_NEW_USER_SUCCESS())\r\n                dispatch(RESET_AUTHORIZED())\r\n                dispatch(RedirectTo('reload'))\r\n                dispatch(ResetRedirect())\r\n\r\n            }\r\n        })\r\n        .catch(err => dispatch(ADD_NEW_USER_FAILED(err)))\r\n    }\r\n}\r\n\r\nexport const FETCH_USERS_ASYNC = () => {\r\n    return dispatch => {\r\n        dispatch(FETCH_USER_FROM_DATABASE_START)\r\n        fetch('http://localhost:50000/fetch_users',{\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'POST'\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            dispatch(FETCH_USER_FROM_DATABASE_SUCCESS(data))\r\n        })\r\n        .catch(err => dispatch(FETCH_USER_FROM_DATABASE_FAILED(err)))\r\n    }\r\n}\r\n\r\nexport const FETCH_SINGLEUSER_ASYNC = (id) => {\r\n    return dispatch => {\r\n        dispatch(FETCH_SINGLEUSER_FROM_DATABASE_START)\r\n        fetch('http://localhost:50000/fetch_single_user',{\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                'id': id\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            dispatch(FETCH_SINGLEUSER_FROM_DATABASE_SUCCESS(data))\r\n        })\r\n        .catch(err => dispatch(FETCH_SINGLEUSER_FROM_DATABASE_FAILED(err)))\r\n    }\r\n}\r\n\r\nexport const LOGIN_USER_ASYNC = (data) => {\r\n    return dispatch => {\r\n        dispatch(LOGIN_USER_START())\r\n        fetch('http://localhost:50000/login_user', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n            dispatch(LOGIN_USER_SUCCESS(result))\r\n            dispatch(RedirectTo('/'))\r\n            dispatch(ResetRedirect())\r\n        })\r\n        .catch(err => dispatch(LOGIN_USER_FAILED(err)))\r\n    }\r\n}\r\n// END - ASYNC action handler\r\n","const SCALING_CONSTANT = {\r\n    TOOGLE_SIDEBAR_IN_SMALL_SCREEN: \"TOOGLE_SIDEBAR_IN_SMALL_SCREEN\"\r\n}\r\n\r\nexport default SCALING_CONSTANT","import SCALING_CONSTANT from './scaling.constant'\r\n\r\nexport const TOOGLE_SIDEBAR_IN_SMALL_SCREEN = () => ({\r\n    type: SCALING_CONSTANT.TOOGLE_SIDEBAR_IN_SMALL_SCREEN\r\n})","import React from 'react'\r\nimport './sidebar.scss'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { LOGOUT } from '../../redux/user/user.action'\r\nimport { TOOGLE_SIDEBAR_IN_SMALL_SCREEN } from '../../redux/scaling/scaling.action'\r\n\r\nconst Sidebar = ({ profile, logout, display_sidebar, toggle_sidebar }) => {\r\n    return (\r\n        <div className={`sidebar ${display_sidebar ? \"appear\" : \"sidebar_small_screen\"}`}>\r\n            \r\n                {\r\n                    profile[0][\"role\"] === \"Admin\"\r\n                    ?\r\n                    <nav className=\"sidebar-nav\">\r\n                        { display_sidebar ? <div onClick={() => toggle_sidebar()} className=\"toggle-btn\">Toggle</div> : null}\r\n                        <Link to=\"/\" className='sidebar-nav-item' onClick={() => toggle_sidebar()}>Home</Link>\r\n                        <Link to=\"/user_management\" className='sidebar-nav-item' onClick={() => toggle_sidebar()}>User Management</Link>\r\n                        <Link to=\"/request_list\" className='sidebar-nav-item' onClick={() => toggle_sidebar()}>Request List</Link>\r\n                        <Link to=\"/request_item\" className='sidebar-nav-item' onClick={() => toggle_sidebar()}>Request Item</Link>\r\n                        <Link to=\"/store_list\" className='sidebar-nav-item' onClick={() => toggle_sidebar()}>Store Management</Link>\r\n                        <Link to=\"/history\" className='sidebar-nav-item' onClick={() => toggle_sidebar()}>History</Link>\r\n                        <Link to=\"#\" className='sidebar-nav-item' onClick={() => {\r\n                            logout();\r\n                            toggle_sidebar()\r\n                            }}>Logout</Link>\r\n                    </nav>\r\n                    :\r\n                    <nav className='sidebar-nav'>\r\n                        <Link to=\"/\" className='sidebar-nav-item' onClick={() => toggle_sidebar()}>Home</Link>\r\n                        <Link to=\"/request_item\" className='sidebar-nav-item' onClick={() => toggle_sidebar()}>Request Item</Link>\r\n                        <Link to=\"/history\" className='sidebar-nav-item' onClick={() => toggle_sidebar()}>History</Link>\r\n                        <Link to=\"#\" className='sidebar-nav-item' onClick={() => {\r\n                            logout()\r\n                            toggle_sidebar()\r\n                            }}>Logout</Link>\r\n                    </nav>\r\n                }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.UserReducer.profile,\r\n    display_sidebar: state.ScalingReducer.display_sidebar\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    logout: () => dispatch(LOGOUT()),\r\n    toggle_sidebar: () => dispatch(TOOGLE_SIDEBAR_IN_SMALL_SCREEN())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar)","import React from 'react'\r\nimport './topbar.scss'\r\n\r\nimport { Nav, Spinner } from 'react-bootstrap'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { TOOGLE_SIDEBAR_IN_SMALL_SCREEN } from '../../redux/scaling/scaling.action'\r\n\r\nconst Topbar = ({ profile, toogle_sidebar }) => {\r\n\r\n    return (\r\n        <div className='topbar-nav'>\r\n            {\r\n                profile.length <= 0 ? <Spinner variant=\"success\"/>\r\n                :\r\n                <Nav.Item className='topbar-nav-item'>\r\n                <div className=\"icon\" onClick={() => toogle_sidebar()}>Icon here</div>\r\n                    <h5>{profile[0][\"name\"]}</h5>\r\n                    <h5>{profile[0][\"email\"]}</h5>\r\n                    <h5>{profile[0][\"role\"]}</h5>\r\n                </Nav.Item>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.UserReducer.profile\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    toogle_sidebar: () => dispatch(TOOGLE_SIDEBAR_IN_SMALL_SCREEN())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Topbar)","const STORE_ITEM_CONSTANT = {\r\n    DISPLAY_ADDITEM_COMPONENT : \"DISPLAY_ADDITEM_COMPONENT\",\r\n    ADD_NEW_ITEM_START: \"ADD_NEW_ITEM_START\",\r\n    ADD_NEW_ITEM_SUCCESS: \"ADD_NEW_ITEM_SUCCESS\",\r\n    ADD_NEW_ITEM_FAILED: \"ADD_NEW_ITEM_FAILED\",\r\n    FETCH_ITEM_START: \"FETCH_ITEM_START\",\r\n    FETCH_ITEM_SUCCESS: \"FETCH_ITEM_SUCCESS\",\r\n    FETCH_ITEM_FAILED: \"FETCH_ITEM_FAILED\",\r\n    FETCH_SINGLEITEM_START: \"FETCH_SINGLEITEM_START\",\r\n    FETCH_SINGLEITEM_SUCCESS: \"FETCH_SINGLEITEM_SUCCESS\",\r\n    FETCH_SINGLEITEM_FAILED: \"FETCH_SINGLEITEM_FAILED\",\r\n    UPDATE_SINGLEITEM_START: \"UPDATE_SINGLEITEM_START\",\r\n    UPDATE_SINGLEITEM_SUCCESS: \"UPDATE_SINGLEITEM_SUCCESS\",\r\n    UPDATE_SINGLEITEM_FAILED: \"UPDATE_SINGLEITEM_FAILED\"\r\n}\r\n\r\nexport default STORE_ITEM_CONSTANT\r\n","import STORE_ITEM_CONSTANT from './storeitem.constant.js'\r\nimport { RedirectTo, ResetRedirect } from '../url/url.action'\r\n\r\nexport const DISPLAY_ADDITEM_COMPONENT = {\r\n    type: STORE_ITEM_CONSTANT.DISPLAY_ADDITEM_COMPONENT\r\n}\r\n\r\nexport const ADD_NEW_ITEM_START = () => ({\r\n    type: STORE_ITEM_CONSTANT.ADD_NEW_ITEM_START\r\n})\r\n\r\nexport const ADD_NEW_ITEM_SUCCESS = () => ({\r\n    type: STORE_ITEM_CONSTANT.ADD_NEW_ITEM_SUCCESS\r\n})\r\n\r\nexport const ADD_NEW_ITEM_FAILED = (error) => ({\r\n    type: STORE_ITEM_CONSTANT.ADD_NEW_ITEM_FAILED,\r\n    payload: error\r\n})\r\n\r\nexport const FETCH_ITEM_START = () => ({\r\n    type: STORE_ITEM_CONSTANT.FETCH_ITEM_START\r\n})\r\n\r\nexport const FETCH_ITEM_SUCCESS = (data) => ({\r\n    type: STORE_ITEM_CONSTANT.FETCH_ITEM_SUCCESS,\r\n    payload: data\r\n})\r\n\r\nexport const FETCH_ITEM_FAILED = (error) => ({\r\n    type: STORE_ITEM_CONSTANT.FETCH_ITEM_FAILED,\r\n    payload: error\r\n})\r\nexport const FETCH_SINGLEITEM_START = () => ({\r\n    type: STORE_ITEM_CONSTANT.FETCH_SINGLEITEM_START\r\n})\r\n\r\nexport const FETCH_SINGLEITEM_SUCCESS = (data) => ({\r\n    type: STORE_ITEM_CONSTANT.FETCH_SINGLEITEM_SUCCESS,\r\n    payload: data\r\n})\r\n\r\nexport const FETCH_SINGLEITEM_FAILED = (error) => ({\r\n    type: STORE_ITEM_CONSTANT.FETCH_SINGLEITEM_FAILED,\r\n    payload: error\r\n})\r\n\r\nexport const UPDATE_SINGLEITEM_START = () => ({\r\n    type: STORE_ITEM_CONSTANT.UPDATE_SINGLEITEM_START\r\n})\r\n\r\nexport const UPDATE_SINGLEITEM_SUCCESS = () => ({\r\n    type: STORE_ITEM_CONSTANT.UPDATE_SINGLEITEM_SUCCESS\r\n})\r\n\r\nexport const UPDATE_SINGLEITEM_FAILED = (error) => ({\r\n    type: STORE_ITEM_CONSTANT.UPDATE_SINGLEITEM_FAILED,\r\n    payload: error\r\n})\r\n\r\n// START - ASYNC action handler\r\n\r\nexport const ADD_NEW_ITEM_ASYNC = (dataObj) => {\r\n    return dispatch => {\r\n        dispatch(ADD_NEW_ITEM_START())\r\n        fetch('http://localhost:50000/add_new_item', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(dataObj)\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if(data.status === \"OK\"){\r\n                dispatch(ADD_NEW_ITEM_SUCCESS())\r\n                dispatch(DISPLAY_ADDITEM_COMPONENT)\r\n                dispatch(RedirectTo('reload'))\r\n                dispatch(ResetRedirect())\r\n            }\r\n            else{\r\n                dispatch(ADD_NEW_ITEM_FAILED(data.detail))\r\n            }\r\n        })\r\n        .catch(err => dispatch(ADD_NEW_ITEM_FAILED(err)))\r\n    }\r\n}\r\n\r\nexport const FETCH_ITEM_ASYNC = () => {\r\n    return dispatch => {\r\n        dispatch(FETCH_ITEM_START())\r\n        fetch('http://localhost:50000/fetch_store_items', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': \"application/json\"\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            dispatch(FETCH_ITEM_SUCCESS(data))\r\n        })\r\n        .catch(err => dispatch(FETCH_ITEM_FAILED(err)))\r\n    }\r\n}\r\n\r\nexport const FETCH_SINGLEITEM_ASYNC = (item_id) => {\r\n    return dispatch => {\r\n        dispatch(FETCH_SINGLEITEM_START())\r\n        fetch('http://localhost:50000/fetch_single_item', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"item_id\": item_id\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            dispatch(FETCH_SINGLEITEM_SUCCESS(data))\r\n        })\r\n        .catch(err => dispatch(FETCH_SINGLEITEM_FAILED(err)))\r\n    }\r\n}\r\n\r\nexport const UPDATE_SINGLEITEM_ASYNC = (dataObj) => {\r\n    return dispatch => {\r\n        dispatch(UPDATE_SINGLEITEM_START())\r\n        fetch('http://localhost:50000/update_single_item', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(dataObj)\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if(data === 1){\r\n                dispatch(UPDATE_SINGLEITEM_SUCCESS())\r\n                dispatch(RedirectTo('/store_list'))\r\n                dispatch(ResetRedirect())\r\n            }\r\n            else {\r\n                dispatch(UPDATE_SINGLEITEM_FAILED(\"Some error occur\"))\r\n            }\r\n        })\r\n        .catch(err => dispatch(UPDATE_SINGLEITEM_FAILED(err)))\r\n    }\r\n}\r\n\r\n// END - ASYNC action handler\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport './addItem.scss'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { DISPLAY_ADDITEM_COMPONENT, ADD_NEW_ITEM_ASYNC } from '../../redux/storeitem/storeitem.action'\r\n\r\nconst AddItem = ({displayAddItem,errorMessage, toggleAddItem, addNewItem}) => {\r\n\r\n    const [item_name, handleItemName] = useState('')\r\n    const [brand, handleBrand] = useState('')\r\n    const [available_quantity, handleAvailableQuantity] = useState(0)\r\n    const [reserved_quantity, handleReservedQuantity] = useState(0)\r\n    const [notice, handleNotice] = useState(\"\")\r\n\r\n    return ( \r\n    <div>\r\n        {\r\n            displayAddItem ?\r\n        <div>\r\n            <div className='background-page' onClick={toggleAddItem}></div>\r\n            <div className={`addItem_container ${displayAddItem ? 'animate-appear' : ''} `}>\r\n                <div className=\"addItem-header\">\r\n                    <h4>Add New Item</h4>\r\n                    <Button className=\"cancel-btn\" variant=\"secondary\" onClick={toggleAddItem}>Cancel</Button>\r\n                </div>\r\n                <Form>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Item Name:</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter item name\" onChange={(e) => handleItemName(e.target.value)}/>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Brand:</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter item brand\" onChange={(e) => handleBrand(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Available Quantity:</Form.Label>\r\n                        <Form.Control type=\"number\" placeholder=\"Enter current available quantities\" onChange={(e) => handleAvailableQuantity(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Reserved Quantity:</Form.Label>\r\n                        <Form.Control type=\"number\" placeholder=\"Enter reserved quantities that will not display to others except Admin\" onChange={(e) => handleReservedQuantity(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Notice</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={4} placeholder=\"Notification message to everyone about the item...\" onChange={(e) => handleNotice(e.target.value)}/>\r\n                    </Form.Group>\r\n                    <Button className=\"addItem-submit-btn\" variant=\"success\" type=\"button\" \r\n                    onClick={() => addNewItem({\r\n                        \"item_name\": item_name,\r\n                        \"brand\": brand,\r\n                        \"available_quantity\": available_quantity,\r\n                        \"reserved_quantity\": reserved_quantity,\r\n                        \"notice\": notice\r\n                    })}\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                    <p className='errorMessage'>{errorMessage? errorMessage : null}</p>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n        : null\r\n        }\r\n    </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    displayAddItem: state.StoreItemReducer.displayAddItem,\r\n    errorMessage: state.StoreItemReducer.errorMessage\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    toggleAddItem: () => dispatch(DISPLAY_ADDITEM_COMPONENT),\r\n    addNewItem: (dataObj) => dispatch(ADD_NEW_ITEM_ASYNC(dataObj))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddItem)","const REQUEST_ITEM_CONSTANT = {\r\n    ADD_TO_SUMMARY: \"ADD_TO_SUMMARY\",\r\n    REMOVE_FROM_SUMMARY: \"REMOVE_FROM_SUMMARY\",\r\n    SUBMIT_REQUEST_START: \"SUBMIT_REQUEST_START\",\r\n    SUBMIT_REQUEST_SUCCESS: \"SUBMIT_REQUEST_SUCCESS\",\r\n    SUBMIT_REQUEST_FAILED: \"SUBMIT_REQUEST_FAILED\",\r\n    FETCH_REQUEST_LIST_START: \"FETCH_REQUEST_LIST_START\",\r\n    FETCH_REQUEST_LIST_SUCCESS: \"FETCH_REQUEST_LIST_SUCCESS\",\r\n    FETCH_REQUEST_LIST_FAILED: \"FETCH_REQUEST_LIST_FAILED\",\r\n    FETCH_FULFILLED_REQUEST_START: \"FETCH_FULFILLED_REQUEST_START\",\r\n    FETCH_FULFILLED_REQUEST_SUCCESS: \"FETCH_FULFILLED_REQUEST_SUCCESS\",\r\n    FETCH_FULFILLED_REQUEST_FAILED: \"FETCH_FULFILLED_REQUEST_FAILED\",\r\n    FETCH_SINGLEREQUEST_START: \"FETCH_SINGLEREQUEST_START\",\r\n    FETCH_SINGLEREQUEST_SUCCESS: \"FETCH_SINGLEREQUEST_SUCCESS\",\r\n    FETCH_SINGLEREQUEST_FAILED: \"FETCH_SINGLEREQUEST_FAILED\",\r\n    RESET_SUMMARY: \"RESET_SUMMARY\",\r\n    SHOW_REQUEST_ITEM_COMPONENT: \"SHOW_REQUEST_ITEM_COMPONENT\",\r\n    FETCH_ONE_FOR_REQUEST_START: \"FETCH_ONE_FOR_REQUEST_START\",\r\n    FETCH_ONE_FOR_REQUEST_SUCCESS: \"FETCH_ONE_FOR_REQUEST_SUCCESS\",\r\n    FETCH_ONE_FOR_REQUEST_FAILED: \"FETCH_ONE_FOR_REQUEST_FAILED\"\r\n}\r\n\r\nexport default REQUEST_ITEM_CONSTANT","import REQUEST_ITEM_CONSTANT from './requestitem.constant'\r\n\r\nimport { RedirectTo, ResetRedirect } from '../url/url.action'\r\n\r\nexport const ADD_TO_SUMMARY = (item) => ({\r\n    type: REQUEST_ITEM_CONSTANT.ADD_TO_SUMMARY,\r\n    payload: item\r\n})\r\n\r\nexport const REMOVE_FROM_SUMMARY = (item) => ({\r\n    type: REQUEST_ITEM_CONSTANT.REMOVE_FROM_SUMMARY,\r\n    payload: item\r\n})\r\n\r\nexport const RESET_SUMMARY = () => ({\r\n    type: REQUEST_ITEM_CONSTANT.RESET_SUMMARY\r\n})\r\n\r\nexport const SUBMIT_REQUEST_START = () => ({\r\n    type: REQUEST_ITEM_CONSTANT.SUBMIT_REQUEST_START\r\n})\r\n\r\nexport const SUBMIT_REQUEST_SUCCESS = () => ({\r\n    type: REQUEST_ITEM_CONSTANT.SUBMIT_REQUEST_SUCCESS\r\n})\r\n\r\nexport const SUBMIT_REQUEST_FAILED = (error) => ({\r\n    type: REQUEST_ITEM_CONSTANT.SUBMIT_REQUEST_FAILED,\r\n    payload: error\r\n})\r\n\r\nexport const FETCH_REQUEST_LIST_START = () => ({\r\n    type: REQUEST_ITEM_CONSTANT.FETCH_REQUEST_LIST_START\r\n})\r\n\r\nexport const FETCH_REQUEST_LIST_SUCCESS = (data) => ({\r\n    type: REQUEST_ITEM_CONSTANT.FETCH_REQUEST_LIST_SUCCESS,\r\n    payload: data\r\n})\r\n\r\nexport const FETCH_REQUEST_LIST_FAILED = (error) => ({\r\n    type: REQUEST_ITEM_CONSTANT.FETCH_REQUEST_LIST_FAILED,\r\n    payload: error\r\n})\r\n\r\nexport const FETCH_FULFILLED_REQUEST_START = () => ({\r\n    type: REQUEST_ITEM_CONSTANT.FETCH_FULFILLED_REQUEST_START\r\n})\r\n\r\nexport const FETCH_FULFILLED_REQUEST_SUCCESS = (data) => ({\r\n    type: REQUEST_ITEM_CONSTANT.FETCH_FULFILLED_REQUEST_SUCCESS,\r\n    payload: data\r\n})\r\n\r\nexport const FETCH_FULFILLED_REQUEST_FAILED = (error) => ({\r\n    type: REQUEST_ITEM_CONSTANT.FETCH_FULFILLED_REQUEST_FAILED,\r\n    payload: error\r\n})\r\n\r\nexport const FETCH_SINGLEREQUEST_START = () => ({\r\n    type: REQUEST_ITEM_CONSTANT.FETCH_SINGLEREQUEST_START\r\n})\r\n\r\nexport const FETCH_SINGLEREQUEST_SUCCESS = (data) => ({\r\n    type: REQUEST_ITEM_CONSTANT.FETCH_SINGLEREQUEST_SUCCESS,\r\n    payload: data\r\n})\r\n\r\nexport const FETCH_SINGLEREQUEST_FAILED = (error) => ({\r\n    type: REQUEST_ITEM_CONSTANT.FETCH_SINGLEREQUEST_FAILED,\r\n    payload: error\r\n})\r\n\r\nexport const FETCH_ONE_FOR_REQUEST_START = () => ({\r\n    type: REQUEST_ITEM_CONSTANT.FETCH_ONE_FOR_REQUEST_START\r\n})\r\n\r\nexport const FETCH_ONE_FOR_REQUEST_SUCCESS = (data) => ({\r\n    type: REQUEST_ITEM_CONSTANT.FETCH_ONE_FOR_REQUEST_SUCCESS,\r\n    payload: data\r\n})\r\n\r\nexport const FETCH_ONE_FOR_REQUEST_FAILED = (error) => ({\r\n    type: REQUEST_ITEM_CONSTANT.FETCH_ONE_FOR_REQUEST_FAILED,\r\n    payload: error\r\n})\r\n\r\nexport const SHOW_REQUEST_ITEM_COMPONENT = () => ({\r\n    type: REQUEST_ITEM_CONSTANT.SHOW_REQUEST_ITEM_COMPONENT\r\n})\r\n\r\n// START - ASYNC action handler\r\nexport const SUBMIT_REQUEST_ASYNC = (dataObj) => {\r\n    return dispatch => {\r\n        const { collection_date, item_details, project_name, requestor } = dataObj\r\n        if(item_details.length <= 0 || project_name === \"\" || collection_date === \"\"){\r\n            dispatch(SUBMIT_REQUEST_FAILED(\"Missing Details Information\"))\r\n        }\r\n        else {\r\n            dispatch(SUBMIT_REQUEST_START())\r\n            fetch('http://localhost:50000/submit_request', {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    \"collection_date\": collection_date,\r\n                    \"item_details\": item_details,\r\n                    \"project_name\": project_name,\r\n                    \"requestor\": requestor,\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data.name !== 'error'){\r\n                    dispatch(SUBMIT_REQUEST_SUCCESS())\r\n                    dispatch(RESET_SUMMARY())\r\n                    dispatch(RedirectTo('/request_list'))\r\n                    dispatch(ResetRedirect())\r\n                }\r\n                else {\r\n                    dispatch(SUBMIT_REQUEST_FAILED(data.item_details))\r\n                }\r\n            })\r\n            .catch(err => dispatch(SUBMIT_REQUEST_FAILED(err)))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const FETCH_REQUEST_LIST_ASYNC = () => {\r\n    return dispatch => {\r\n        dispatch(FETCH_REQUEST_LIST_START())\r\n        fetch('http://localhost:50000/fetch_request_list', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            dispatch(FETCH_REQUEST_LIST_SUCCESS(data))\r\n        })\r\n        .catch(err => dispatch(FETCH_REQUEST_LIST_FAILED(err)))\r\n    }\r\n}\r\n\r\nexport const FETCH_FULFILLED_REQUEST_ASYNC = () => {\r\n    return dispatch => {\r\n        dispatch(FETCH_FULFILLED_REQUEST_START())\r\n        fetch('http://localhost:50000/fetch_fulfilled_request_list', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            dispatch(FETCH_FULFILLED_REQUEST_SUCCESS(data))\r\n        })\r\n        .catch(err => dispatch(FETCH_FULFILLED_REQUEST_FAILED(err)))\r\n    }\r\n}\r\n\r\nexport const FETCH_SINGLEREQUEST_ASYNC = (request_id) => {\r\n    return dispatch => {\r\n        dispatch(FETCH_SINGLEREQUEST_START())\r\n        fetch('http://localhost:50000/fetch_single_request', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\"request_id\": request_id})\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            dispatch(FETCH_SINGLEREQUEST_SUCCESS(data))\r\n        })\r\n        .catch(err => dispatch(FETCH_SINGLEREQUEST_FAILED(err)))\r\n    }\r\n}\r\n\r\nexport const FETCH_ONE_FOR_REQUEST_ASYNC = (item_id) => {\r\n    return dispatch => {\r\n        dispatch(FETCH_ONE_FOR_REQUEST_START())\r\n        fetch('http://localhost:50000/fetch_single_item', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"item_id\": item_id\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            dispatch(FETCH_ONE_FOR_REQUEST_SUCCESS(data))\r\n            dispatch(SHOW_REQUEST_ITEM_COMPONENT())\r\n        })\r\n        .catch(err => dispatch(FETCH_ONE_FOR_REQUEST_FAILED(err)))\r\n    }\r\n}\r\n// END - ASYNC action handler","const FULFILL_REQUEST_CONSTANT = {\r\n    FULFILL_REQUEST_START : \"FULFILL_REQUEST_START\",\r\n    FULFILL_REQUEST_SUCCESS : \"FULFILL_REQUEST_SUCCESS\",\r\n    FULFILL_REQUEST_FAILED : \"FULFILL_REQUEST_FAILED\",\r\n    CANCEL_REQUEST_START: \"CANCEL_REQUEST_START\",\r\n    CANCEL_REQUEST_SUCCESS: \"CANCEL_REQUEST_SUCCESS\",\r\n    CANCEL_REQUEST_FAILED: \"CANCEL_REQUEST_FAILED\"\r\n}\r\n\r\nexport default FULFILL_REQUEST_CONSTANT","import FULFILL_REQUEST_CONSTANT from './fulfillrequest.constant'\r\n\r\nimport { RedirectTo, ResetRedirect } from '../url/url.action'\r\n\r\nexport const FULFILL_REQUEST_START = () => ({\r\n    type: FULFILL_REQUEST_CONSTANT.FULFILL_REQUEST_START\r\n})\r\n\r\nexport const FULFILL_REQUEST_SUCCESS = () => ({\r\n    type: FULFILL_REQUEST_CONSTANT.FULFILL_REQUEST_SUCCESS\r\n})\r\n\r\nexport const FULFILL_REQUEST_FAILED = (error) => ({\r\n    type: FULFILL_REQUEST_CONSTANT.FULFILL_REQUEST_FAILED,\r\n    payload: error\r\n})\r\n\r\nexport const CANCEL_REQUEST_START = () => ({\r\n    type: FULFILL_REQUEST_CONSTANT.CANCEL_REQUEST_START\r\n})\r\n\r\nexport const CANCEL_REQUEST_SUCCESS = () => ({\r\n    type: FULFILL_REQUEST_CONSTANT.CANCEL_REQUEST_SUCCESS\r\n})\r\n\r\nexport const CANCEL_REQUEST_FAILED = (error) => ({\r\n    type: FULFILL_REQUEST_CONSTANT.CANCEL_REQUEST_FAILED,\r\n    payload: error\r\n})\r\n\r\n\r\n// START - ASYNC action handler\r\nexport const FULFILL_REQUEST_ASYNC = (itemObj, request_id) => {\r\n    return dispatch => {\r\n        dispatch(FULFILL_REQUEST_START())\r\n        fetch('http://localhost:50000/fulfill_request', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"request_id\": request_id,\r\n                \"itemObj\": itemObj\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if(data.rowCount === itemObj.length){\r\n                dispatch(FULFILL_REQUEST_SUCCESS())\r\n                dispatch(RedirectTo('/request_list'))\r\n                dispatch(ResetRedirect())\r\n            }\r\n            else {\r\n                dispatch(FULFILL_REQUEST_FAILED(\"Something is wrong when submitting\"))\r\n            }\r\n        })\r\n        .catch(err => dispatch(FULFILL_REQUEST_FAILED(err)))\r\n    }\r\n}\r\n\r\nexport const CANCEL_REQUEST_ASYNC = (request_id) => {\r\n    return dispatch => {\r\n        dispatch(CANCEL_REQUEST_START())\r\n        fetch('http://localhost:50000/cancel_request', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body : JSON.stringify({\r\n                \"request_id\": request_id\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if(data === 1) {\r\n                dispatch(CANCEL_REQUEST_SUCCESS())\r\n                dispatch(RedirectTo('/request_list'))\r\n                dispatch(ResetRedirect())\r\n            }\r\n            else {\r\n                dispatch(CANCEL_REQUEST_FAILED(\"Something wrong when cancelling\"))\r\n            }\r\n        })\r\n        .catch(err => dispatch(CANCEL_REQUEST_FAILED(err)))\r\n    }\r\n}\r\n// END - ASYNC action handler\r\n","import React, { useEffect } from 'react'\r\nimport './fulfill.scss'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { ListGroup, Button, Spinner } from 'react-bootstrap'\r\nimport { useParams, Redirect } from 'react-router-dom'\r\n\r\nimport { FETCH_SINGLEREQUEST_ASYNC } from '../../redux/requestitem/requestitem.action'\r\nimport { FULFILL_REQUEST_ASYNC, CANCEL_REQUEST_ASYNC } from '../../redux/fulfillrequest/fulfillrequest.action'\r\n\r\nconst FulfillPage = ({ redirectTo, errorMessage, fetchSingleRequest, isFetching, requestDetail, itemDetail, fulfillRequest, cancelRequest }) => {\r\n    const { request_id } = useParams()\r\n\r\n    useEffect(() => {\r\n        fetchSingleRequest(request_id)\r\n    }, [request_id])\r\n\r\n    if(redirectTo !== \"\"){\r\n        return <Redirect to={redirectTo} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {\r\n            isFetching ? <Spinner animation=\"border\" variant=\"success\" />\r\n            :<div className='fulfill-page'>\r\n                <h2 className='fulfill-title'>Request ID: {request_id}</h2>\r\n                {\r\n                    requestDetail.length > 0 ?\r\n                    <div>\r\n                        <ListGroup variant=\"flush\">\r\n                            {   requestDetail[0][\"item_details\"].map((item, index) => {\r\n                                    return <ListGroup.Item key={index}>{`${index+1}. ${item.name} - ${item.quantity}`}</ListGroup.Item>\r\n                            })}\r\n                        </ListGroup>\r\n                        <div className='fulfill_others' >\r\n                            <label htmlFor='project'>Project:</label>\r\n                            <h6 name='project'>{requestDetail[0][\"project_name\"]}</h6>\r\n                            <label htmlFor='collect_date'>Collect Date:</label>\r\n                            <h6 name='collect_date'>{requestDetail[0][\"collection_date\"]}</h6>\r\n                            <label htmlFor='requestor'>Requestor:</label>\r\n                            <h6 name='requestor'>{requestDetail[0][\"requestor\"]}</h6>\r\n                        </div>\r\n                        {\r\n                            requestDetail[0].status === \"Fulfilled\" ? null\r\n                            :\r\n                            <div className='action-container'>\r\n                                <Button variant=\"success\" type=\"button\" onClick={() => fulfillRequest(itemDetail, request_id)}>Complete</Button>\r\n                                <Button variant=\"danger\" type=\"button\" onClick={() => cancelRequest(request_id)}>Abandon</Button>\r\n                            </div>\r\n                        }\r\n                        {\r\n                            errorMessage !== \"\" ? <p className=\"errorMessage\">Error occured</p>: null\r\n                        }\r\n                    </div>\r\n                    : <Spinner animation=\"border\" variant=\"success\" />\r\n                }\r\n\r\n            </div>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isFetching: state.RequestItemReducer.is_singleFetching,\r\n    requestDetail: state.RequestItemReducer.singleRequest,\r\n    itemDetail: state.RequestItemReducer.request_items_detail,\r\n    redirectTo: state.UrlReducer.redirectLink,\r\n    errorMessage: state.FulfillRequestReducer.errorMessage\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchSingleRequest: (request_id) => dispatch(FETCH_SINGLEREQUEST_ASYNC(request_id)),\r\n    fulfillRequest: (itemObj, request_id) => dispatch(FULFILL_REQUEST_ASYNC(itemObj, request_id)),\r\n    cancelRequest: (request_id) => dispatch(CANCEL_REQUEST_ASYNC(request_id))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FulfillPage)","import React, { useState } from 'react'\r\nimport './verification.scss'\r\n\r\nimport { Form, Button } from 'react-bootstrap' \r\n\r\nimport { CLOSE_DISPLAY, verify_authorized_personAsync } from '../../redux/verification/verification.action'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nconst Verification = ({ verificationDisplay, closeDisplay, verify_authorized_personAsync, profile, errorMessage }) => {\r\n    const [password, handlePassword] = useState('')\r\n    return (\r\n        <div>\r\n            {verificationDisplay?\r\n            <div>\r\n                <div className=\"verification-background\" onClick={() => closeDisplay()}></div>\r\n                <div className='verification-container'>\r\n                    <p className='explain_message'>This is to verify you are the authorized personnel to do the action</p>\r\n                    <Form>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <Form.Control type=\"email\" value={profile[0][\"email\"]} readOnly />\r\n                            <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e) => handlePassword(e.target.value)} />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"button\" onClick={() => verify_authorized_personAsync(profile[0][\"email\"], password)}>\r\n                            Submit\r\n                        </Button>\r\n                        {errorMessage !== \"\"  ? errorMessage.message : null }\r\n                    </Form>            \r\n                </div>\r\n            </div>\r\n            : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    verificationDisplay: state.verificationReducer.verificationDisplay,\r\n    profile: state.UserReducer.profile,\r\n    errorMessage: state.verificationReducer.errorMessage\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    closeDisplay: () => dispatch(CLOSE_DISPLAY),\r\n    verify_authorized_personAsync: (email,password) => dispatch(verify_authorized_personAsync(email,password))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Verification)","import React, { useState } from 'react'\r\nimport './adduser.scss'\r\n\r\nimport { Form, Button, Spinner } from 'react-bootstrap'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { RESET_AUTHORIZED } from '../../redux/verification/verification.action'\r\nimport { ADD_NEW_USER_ASYNC } from '../../redux/user/user.action'\r\n\r\nconst AddUser = ({authorized, capturedID, resetAuthorized, addUser, errorMessage, isAdding}) => {\r\n    const [new_email, handleEmail] = useState('')\r\n    const [new_name, handleName] = useState('')\r\n    const [new_role, handleRole] = useState('Admin')\r\n    const [new_password, handlePassword] = useState('')\r\n    return (\r\n        <div>\r\n            {\r\n                authorized && capturedID === null\r\n                ?<div>\r\n                    <div className=\"adduser-background\" onClick={() => resetAuthorized()}></div>\r\n                    <div className=\"adduser-container\">\r\n                        <Form>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control type=\"email\" onChange={(e) => handleEmail(e.target.value)} required/>\r\n                                <Form.Text className=\"text-muted\">\r\n                                We'll never share your email with anyone else.\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control type=\"text\" onChange={(e) => handleName(e.target.value)} required/>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                <Form.Label>Role</Form.Label>\r\n                                <Form.Control as=\"select\" onChange={(e) => handleRole(e.target.value)}>\r\n                                <option>Admin</option>\r\n                                <option>Basic</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" placeholder=\"Password\" required onChange={(e) => handlePassword(e.target.value)}/>\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"button\" onClick={() => addUser(new_email, new_name, new_role, new_password)}>\r\n                                Add User \r\n                                {isAdding ? <Spinner animation=\"border\" variant=\"success\" /> : null}\r\n                            </Button>\r\n                            {\r\n                                errorMessage.length !== 0? <p>{JSON.stringify(errorMessage)}</p>: null\r\n                            }\r\n                        </Form>    \r\n                    </div>\r\n                </div>: null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authorized: state.verificationReducer.authorized,\r\n    capturedID: state.verificationReducer.capturedID,\r\n    errorMessage: state.UserReducer.errorMessage,\r\n    isAdding: state.UserReducer.is_adding\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    resetAuthorized: () => dispatch(RESET_AUTHORIZED()),\r\n    addUser: (email,name, role, password) => dispatch(ADD_NEW_USER_ASYNC(email, name, role, password))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddUser)","import React, { useEffect } from 'react'\r\nimport './deleteuser.scss'\r\n\r\nimport { Button, Form, Spinner } from 'react-bootstrap'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { RESET_AUTHORIZED } from '../../redux/verification/verification.action'\r\nimport { DELETE_USER_ASYNC, FETCH_SINGLEUSER_ASYNC } from '../../redux/user/user.action'\r\n\r\nconst DeleteUser = ({ singleUser, fetchUser, authorized, capturedID, resetAuthorized, deleteUserAsync, isDeleting }) => {\r\n    \r\n    useEffect(() => {\r\n        fetchUser(capturedID)\r\n    }, [capturedID])\r\n\r\n    return (\r\n        <div>\r\n        {\r\n            authorized && capturedID !== null ?\r\n            singleUser.length > 0 ?\r\n            <div>\r\n                <div className=\"deleteuser-background\" onClick={()=> resetAuthorized()}></div>\r\n                <div className=\"deleteuser-container\">\r\n                <h3>Confirm Delete?</h3>\r\n                <Form>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" value={singleUser[0].email} readOnly/>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type=\"text\" value={singleUser[0].name} readOnly/>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                        <Form.Label>Role</Form.Label>\r\n                        <Form.Control type=\"text\" value={singleUser[0].role} readOnly/>\r\n                    </Form.Group>\r\n                    <Button variant=\"danger\" type=\"button\" onClick={() => deleteUserAsync(capturedID)}>\r\n                        Delete\r\n                        {isDeleting ? <Spinner animation=\"border\" variant=\"success\" />: null}\r\n                    </Button>\r\n                </Form>\r\n                </div>\r\n            </div>: <Spinner />\r\n            : null\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authorized: state.verificationReducer.authorized,\r\n    capturedID: state.verificationReducer.capturedID,\r\n    isDeleting: state.UserReducer.is_deleting,\r\n    isFetching: state.UserReducer.is_fetching,\r\n    singleUser: state.UserReducer.singleUser\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    resetAuthorized: () => dispatch(RESET_AUTHORIZED()),\r\n    deleteUserAsync: (user_id) => dispatch(DELETE_USER_ASYNC(user_id)),\r\n    fetchUser: (user_id) => dispatch(FETCH_SINGLEUSER_ASYNC(user_id))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteUser)","import React, { useState } from 'react'\r\nimport './requestitem.scss'\r\n\r\nimport { Spinner, Form, Button } from 'react-bootstrap'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { SHOW_REQUEST_ITEM_COMPONENT, ADD_TO_SUMMARY } from '../../redux/requestitem/requestitem.action'\r\n\r\nconst RequestItemComponent = ({ showRequestComponent, toggleRequestComponent, singleRequest, add_to_summary }) => {\r\n\r\n    const [requestQuantity, handleQuantity] = useState(0)\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                showRequestComponent?\r\n                <div>\r\n                    <div className=\"request_item_component_background\" onClick={() => toggleRequestComponent()}></div>\r\n                    {\r\n                        singleRequest.length > 0 \r\n                        ?\r\n                        <div className='request_item_component_container'>\r\n                            <Form>\r\n                                <Form.Group>\r\n                                    <Form.Label><span>Item Name:</span> </Form.Label>\r\n                                    <Form.Control plaintext readOnly defaultValue={singleRequest[0].item_name} />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label><span>Brand:</span> </Form.Label>\r\n                                    <Form.Control plaintext readOnly defaultValue={singleRequest[0].brand} />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label><span>Available Quantities:</span> </Form.Label>\r\n                                    <Form.Control plaintext readOnly defaultValue={singleRequest[0].available_quantity - singleRequest[0].reserved_quantity} />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                    <Form.Label>Notice</Form.Label>\r\n                                    <Form.Control as=\"textarea\" rows={4} readOnly defaultValue={singleRequest[0].notice}/>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label><span>Request Quantities:</span> </Form.Label>\r\n                                    <Form.Control size='sm' type=\"number\" placeholder=\"Request your quantity of item\" min='0' onChange={(e) => handleQuantity(e.target.value)} />\r\n                                </Form.Group>\r\n                                <Button variant=\"success\" type=\"button\" onClick={() => add_to_summary({\r\n                                    \"name\": singleRequest[0].item_name,\r\n                                    \"quantity\": requestQuantity,\r\n                                    \"item_id\": singleRequest[0].item_id\r\n                                })}>\r\n                                    Add to Summary\r\n                                </Button>\r\n                            </Form>    \r\n                        </div>\r\n                        : <Spinner variant=\"success\"/>\r\n                    }\r\n                </div> \r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    showRequestComponent: state.RequestItemReducer.showRequestComponent,\r\n    singleRequest: state.RequestItemReducer.oneItemRequest\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    toggleRequestComponent: () => dispatch(SHOW_REQUEST_ITEM_COMPONENT()),\r\n    add_to_summary: (data) => dispatch(ADD_TO_SUMMARY(data))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestItemComponent)","import React from 'react';\r\nimport './table.scss'\r\nimport { MDBDataTableV5 } from 'mdbreact';\r\n\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst BasicTable = ({ storeItem, isFetching }) => {\r\n\r\n    const location = useLocation()\r\n    const [datatable, setDatatable] = React.useState({\r\n        columns: [\r\n          {\r\n            label: '#',\r\n            field: 'item_id',\r\n            width: 270,\r\n          },\r\n          {\r\n            label: 'Item Name',\r\n            field: 'item_name',\r\n            width: 200,\r\n          },\r\n          {\r\n            label: 'Available Quantities',\r\n            field: 'available_quantity',\r\n            sort: 'asc',\r\n            width: 100,\r\n          },\r\n          {\r\n            label: 'Brand',\r\n            field: 'brand',\r\n            width: 150,\r\n          },\r\n          {\r\n            label: 'Notice',\r\n            field: 'notice',\r\n            width: 100,\r\n          },\r\n        ],\r\n        rows: storeItem\r\n    });\r\n\r\n  return <div>\r\n      {\r\n          isFetching ? <Spinner />\r\n          :<MDBDataTableV5 hover entriesOptions={[10, 20, 25]} entries={10} pagesAmount={4} data={datatable} />\r\n      }\r\n  </div>\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    storeItem: state.StoreItemReducer.storeItem,\r\n    isFetching: state.StoreItemReducer.is_fetching,\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps)(BasicTable)","import React from 'react';\r\nimport {\r\n\tChart,\r\n\tInterval,\r\n\tTooltip,\r\n\tAxis,\r\n\tCoordinate,\r\n\tInteraction,\r\n\tgetTheme\r\n} from 'bizcharts';\r\nimport './pieChart.scss'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nconst PieChart = ({pie_data}) => {\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t{\r\n\t\t\tpie_data.length <= 0 ? null\r\n\t\t\t:\r\n\t\t\t<div>\r\n\t\t\t\t<h4 className=\"pieChart-title\">Outbound Quantities Distribution</h4>\r\n\t\t\t\t<Chart height={400} data={pie_data} autoFit >\r\n\t\t\t\t\t<Coordinate type=\"theta\" radius={0.75} />\r\n\t\t\t\t\t<Tooltip showTitle={false} />\r\n\t\t\t\t\t<Axis visible={false} />\r\n\t\t\t\t\t<Interval\r\n\t\t\t\t\t\tposition=\"sum\"\r\n\t\t\t\t\t\tadjust=\"stack\"\r\n\t\t\t\t\t\tcolor=\"item_name\"\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tlineWidth: 1,\r\n\t\t\t\t\t\t\tstroke: '#fff',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tlabel={['sum', {\r\n\t\t\t\t\t\t\tcontent: (data) => {\r\n\t\t\t\t\t\t\t\treturn `${data.item_name}: ${data.sum}`;\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t}]}\r\n\t\t\t\t\t\tstate={{\r\n\t\t\t\t\t\t\tselected: {\r\n\t\t\t\t\t\t\t\tstyle: (t) => {\r\n\t\t\t\t\t\t\t\t\tconst res = getTheme().geometries.interval.rect.selected.style(t);\r\n\t\t\t\t\t\t\t\t\treturn { ...res, fill: 'red' }\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Interaction type='element-single-selected' />\r\n\t\t\t\t</Chart>\r\n\t\t\t</div>\r\n\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tpie_data: state.ChartReducer.pie_data\r\n})\r\n\r\nexport default connect(mapStateToProps)(PieChart)\r\n","const CHART_CONSTANT = {\r\n    FETCH_FOR_PIE_START: \"FETCH_FOR_PIE_START\",\r\n    FETCH_FOR_PIE_SUCCESS: \"FETCH_FOR_PIE_SUCCESS\",\r\n    FETCH_FOR_PIE_FAILED: \"FETCH_FOR_PIE_FAILED\",\r\n    FETCH_FOR_LINE_START: \"FETCH_FOR_LINE_START\",\r\n    FETCH_FOR_LINE_SUCCESS: \"FETCH_FOR_LINE_SUCCESS\",\r\n    FETCH_FOR_LINE_FAILED: \"FETCH_FOR_LINE_FAILED\"\r\n}\r\n\r\nexport default CHART_CONSTANT","import CHART_CONSTANT from './chart.constant'\r\n\r\nexport const FETCH_FOR_PIE_START = () => ({\r\n    type: CHART_CONSTANT.FETCH_FOR_PIE_START\r\n})\r\n\r\nexport const FETCH_FOR_PIE_SUCCESS = (data) => ({\r\n    type: CHART_CONSTANT.FETCH_FOR_PIE_SUCCESS,\r\n    payload: data\r\n})\r\n\r\nexport const FETCH_FOR_PIE_FAILED = (error) => ({\r\n    type: CHART_CONSTANT.FETCH_FOR_PIE_FAILED,\r\n    payload: error\r\n})\r\n\r\nexport const FETCH_FOR_LINE_START = () => ({\r\n    type: CHART_CONSTANT.FETCH_FOR_LINE_START\r\n})\r\n\r\nexport const FETCH_FOR_LINE_SUCCESS = (data) => ({\r\n    type: CHART_CONSTANT.FETCH_FOR_LINE_SUCCESS,\r\n    payload: data\r\n})\r\n\r\nexport const FETCH_FOR_LINE_FAILED = (error) => ({\r\n    type: CHART_CONSTANT.FETCH_FOR_LINE_FAILED,\r\n    payload: error\r\n})\r\n\r\n// START - ASYNC action handler\r\nexport const FETCH_FOR_PIE_ASYNC = (start_date, end_date) => {\r\n    return dispatch => {\r\n        dispatch(FETCH_FOR_PIE_START())\r\n        fetch('http://localhost:50000/get_pie', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"start_date\": start_date,\r\n                \"end_date\": end_date\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => dispatch(FETCH_FOR_PIE_SUCCESS(data)))\r\n        .catch(err => dispatch(FETCH_FOR_PIE_FAILED(err)))\r\n    }\r\n}\r\n\r\nexport const FETCH_FOR_LINE_ASYNC = (start_date, end_date) => {\r\n    return dispatch => {\r\n        dispatch(FETCH_FOR_LINE_START())\r\n        fetch('http://localhost:50000/get_line', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"start_date\": start_date,\r\n                \"end_date\": end_date\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => dispatch(FETCH_FOR_LINE_SUCCESS(data)))\r\n        .catch(err => dispatch(FETCH_FOR_LINE_FAILED(err)))\r\n    }\r\n}\r\n// END - ASYNC action handler","import React from 'react'\r\nimport './home.scss'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Card, Spinner, Button } from 'react-bootstrap'\r\n\r\nimport BasicTable from '../../component/table/table.component'\r\n\r\nimport PieChart from '../../component/pieChart/piechart.component'\r\n\r\nimport { useState, useEffect } from 'react'\r\n\r\nimport { FETCH_FOR_PIE_ASYNC, FETCH_FOR_LINE_ASYNC } from '../../redux/chart/chart.action'\r\nimport { FETCH_ITEM_ASYNC } from '../../redux/storeitem/storeitem.action'\r\n\r\n\r\n\r\nconst HomePage = ({ fetch_pie, fetch_line, fetchItem, isFetching, storeItem }) => {\r\n\r\n    const today = new Date()\r\n    const todayDate = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    const defaultStartDate = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + '1';\r\n\r\n    useEffect(() => {\r\n        fetch_pie(defaultStartDate, todayDate)\r\n        fetch_line(defaultStartDate, todayDate)\r\n        fetchItem()\r\n    }, [])\r\n    \r\n    const [pieStartDate, piehandleStart] = useState('')\r\n    const [pieEndDate, piehandleEnd] = useState('')\r\n    // const [lineStartDate, linehandleStart] = useState('')\r\n    // const [lineEndDate, linehandleEnd] = useState('')\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                isFetching? <Spinner animation=\"border\" variant=\"success\" />\r\n                :\r\n                <div className=\"chart-page-container\">\r\n                    <Card className=\"chart-container\">\r\n                        <div className='chart-query'>\r\n                            <div className=\"start_date_container\">\r\n                                <label htmlFor=\"pie_startdate\">Start Date: </label>\r\n                                <input type=\"date\" name=\"pie_startdate\" onChange={(e) => piehandleStart(e.target.value)}></input>\r\n                            </div>\r\n                            <div className=\"end_date_container\">\r\n                                <label htmlFor=\"pie_enddate\">End Date: </label>\r\n                                <input type=\"date\" name=\"pie_enddate\" onChange={(e) => piehandleEnd(e.target.value)}></input>\r\n                            </div>\r\n                            <Button variant=\"info\" className=\"search-btn\" onClick={() => fetch_pie(pieStartDate, pieEndDate)}>Search</Button>\r\n                        </div>\r\n                        <div>\r\n                            <PieChart/>\r\n                        </div>\r\n                    </Card>\r\n                    {/* <Card className=\"chart-container\">\r\n                        <div className='chart-query'>\r\n                            <div className=\"start_date_container\">\r\n                                <label htmlFor=\"line_startdate\">Start Date: </label>\r\n                                <input type=\"date\" name=\"line_startdate\" onChange={(e) => linehandleStart(e.target.value)}></input>\r\n                            </div>\r\n                            <div className=\"end_date_container\">\r\n                                <label htmlFor=\"line_enddate\">End Date: </label>\r\n                                <input type=\"date\" name=\"line_enddate\" onChange={(e) => linehandleEnd(e.target.value)}></input>\r\n                            </div>\r\n                            <Button variant=\"info\" onClick={() => fetch_line(lineStartDate, lineEndDate)}>Search</Button>\r\n                        </div>\r\n                        <div>\r\n                            <LineChart/>\r\n                        </div>\r\n                    </Card> */}\r\n                    <div className=\"homepage-storelist\">\r\n                        <BasicTable/>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    storeItem: state.StoreItemReducer.storeItem,\r\n    isFetching: state.StoreItemReducer.is_fetching\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetch_pie: (start, end) => dispatch(FETCH_FOR_PIE_ASYNC(start, end)),\r\n    fetch_line: (start, end) => dispatch(FETCH_FOR_LINE_ASYNC(start, end)),\r\n    fetchItem: () => dispatch(FETCH_ITEM_ASYNC())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage)","import React, { useState } from 'react'\r\nimport './login.scss'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { LOGIN_USER_ASYNC } from '../../redux/user/user.action'\r\n\r\n\r\nconst LoginPage = ({ login, redirectTo, errorMessage }) => {\r\n\r\n    const [name, handleName] = useState('')\r\n    const [password, handlePassword] = useState('')\r\n    const [email, handleEmail] = useState('')\r\n\r\n    if(redirectTo !== \"\") {\r\n        return <Redirect to={redirectTo}/>\r\n    }\r\n    \r\n    return (\r\n        <div className='loginpage'>\r\n            <h2>Welcome to Store Platform v1.0</h2>\r\n            <Form className=\"login-form\">\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={(e) => handleEmail(e.target.value)}/>\r\n                    <Form.Text className=\"text-muted\">\r\n                    We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter your registered name\" onChange={(e) => handleName(e.target.value)}/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e) => handlePassword(e.target.value)} />\r\n                </Form.Group>\r\n                <Button variant=\"success\" onClick={() => {\r\n                    if(name === \"\" || password === \"\" || email === \"\"){\r\n                    }\r\n                    else {\r\n                        login({\r\n                        \"name\": name,\r\n                        \"password\": password,\r\n                        \"email\": email\r\n                        })\r\n                    }\r\n                }}>\r\n                    Submit\r\n                </Button>\r\n                <p className=\"demo-message\">Please use the following to login (Demo)</p>\r\n                <p className=\"demo-message\">Email: demo@demo.com</p>\r\n                <p className=\"demo-message\">Name: Demo</p>\r\n                <p className=\"demo-message\">Password: Demo12345</p>\r\n                {errorMessage !== \"\" ? <h4>{JSON.stringify(errorMessage)}</h4> : null}\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isLoggedIn: state.UserReducer.isLoggedIn,\r\n    redirectTo: state.UrlReducer.redirectLink,\r\n    errorMessage: state.UrlReducer.errorMessage\r\n})\r\n\r\nconst mapDispatchToProps = dispatch =>  ({\r\n    login: (data) => dispatch(LOGIN_USER_ASYNC(data))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);","import React from 'react'\r\nimport './request_item_summary.scss'\r\n\r\nimport { ListGroup, Button } from 'react-bootstrap'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { REMOVE_FROM_SUMMARY } from '../../redux/requestitem/requestitem.action'\r\n\r\nconst RequestItemSummary = ({summary_items, removeFromSummary}) => {\r\n    return (\r\n        <div className='request_item_summary_container'>\r\n            <h3>Summary</h3>\r\n            {\r\n                summary_items.map((item,index) => {\r\n                    return(<ListGroup variant=\"flush\" key={index}>\r\n                        <ListGroup.Item className='summary_item'><span>{item.name} - {item.quantity}</span><Button variant=\"danger\" onClick={() => removeFromSummary(item)}>Remove</Button></ListGroup.Item>\r\n                    </ListGroup>)\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    summary_items: state.RequestItemReducer.summaryItems\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    removeFromSummary: item => dispatch(REMOVE_FROM_SUMMARY(item))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestItemSummary)","import { Table } from 'react-bootstrap'\r\nimport React, { useState, useMemo, useEffect } from 'react'\r\nimport './request_item.scss'\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport Datetime from 'react-datetime'\r\n\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport RequestItemSummary from '../../component/request_item_summary/request_item_summary.component'\r\n\r\nimport { Button, Spinner } from 'react-bootstrap'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { SUBMIT_REQUEST_ASYNC, FETCH_ONE_FOR_REQUEST_ASYNC } from '../../redux/requestitem/requestitem.action'\r\nimport { FETCH_ITEM_ASYNC } from '../../redux/storeitem/storeitem.action'\r\n\r\nimport { useTable, usePagination, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table'\r\n\r\nconst RequestItemPage = ({ profile, fetch_request_one, fetch_items, errorMessage, isFetching, redirectTo, storeItems, summaryItems, submit_request}) => {\r\n\r\n    const [project_name, handleProjectName] = useState('')\r\n    const [collection_date, handleCollectionDate] = useState('')\r\n\r\n    useEffect(() => {\r\n        fetch_items()\r\n    }, [])\r\n\r\n    function GlobalFilter({\r\n        preGlobalFilteredRows,\r\n        globalFilter,\r\n        setGlobalFilter,\r\n    }) {\r\n        const count = preGlobalFilteredRows.length\r\n        const [value, setValue] = useState(globalFilter)\r\n        const onChange = useAsyncDebounce(value => {\r\n            setGlobalFilter(value || undefined)\r\n        }, 200)\r\n    \r\n        return (\r\n            <span>\r\n                <input\r\n                    className=\"form-control\"\r\n                    value={value || \"\"}\r\n                    onChange={e => {\r\n                        setValue(e.target.value);\r\n                        onChange(e.target.value);\r\n                    }}\r\n                    placeholder=\"Search Item...\"\r\n                />\r\n            </span>\r\n        )\r\n    }\r\n\r\n    const columns = useMemo(() => [\r\n        {\r\n            Header: '#',\r\n            accessor: 'item_id'\r\n        },\r\n        {\r\n            Header: 'Item',\r\n            accessor: 'item_name'\r\n        },\r\n        {\r\n            Header: 'Brand',\r\n            accessor: 'brand'\r\n        },\r\n        {\r\n            Header: 'Notice',\r\n            accessor: 'notice'\r\n        },\r\n        {\r\n            Header: 'Action',\r\n            Cell: ({row}) => {\r\n                return <Button variant=\"primary\" size=\"sm\" className=\"to-summary-btn\" onClick={() => fetch_request_one(row.original.item_id)}>Request</Button>\r\n            }\r\n        }\r\n    ], [])\r\n\r\n\r\n    const data = React.useMemo(() => storeItems,[])\r\n    const tableInstance = useTable({ columns, data, initialState: { pageIndex: 0, pageSize: 5} },useFilters, useGlobalFilter, usePagination, )\r\n        \r\n    const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n    state: { pageIndex, pageSize, globalFilter}\r\n    } = tableInstance\r\n\r\n    if(redirectTo.length !== 0){\r\n        return <Redirect to={redirectTo} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {\r\n            isFetching ? <Spinner animation=\"border\" variant=\"success\" />\r\n            :\r\n            <div className='request_item_page'>\r\n                <div className='request_content'>\r\n                    <h2>Request Item</h2>\r\n                    <div className='request_item_others'>\r\n                        <div className='request_item_projectContainer'>\r\n                            <label htmlFor='project' className=\"request-project-label\">Project:</label>\r\n                            <input type='text' className=\"request-project-input\" onChange={(event) => handleProjectName(event.target.value)}></input>\r\n                        </div>\r\n                        <div className='request_item_collectiondateContainer'>\r\n                            <label htmlFor='request_item_collectiondate' className=\"request-date-label\">Collection Date:</label>\r\n                            <Datetime inputProps={{\r\n                                placeholder: \"Collection Date & Time\"\r\n                            }} \r\n                                onChange={handleCollectionDate}\r\n                                utc={true}\r\n                                initialValue=\"\"\r\n                                name=\"request_item_collectiondate\"\r\n                                className=\"request-date-input\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <GlobalFilter\r\n                        preGlobalFilteredRows={preGlobalFilteredRows}\r\n                        globalFilter={globalFilter}\r\n                        setGlobalFilter={setGlobalFilter}\r\n                    />\r\n                    <Table {...getTableProps()} className=\"request-item-table\">\r\n                        <thead>\r\n                        {// Loop over the header rows\r\n                        headerGroups.map(headerGroup => (\r\n                            // Apply the header row props\r\n                            <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {// Loop over the headers in each row\r\n                            headerGroup.headers.map(column => (\r\n                                // Apply the header cell props\r\n                                <th {...column.getHeaderProps()}>\r\n                                {// Render the header\r\n                                column.render('Header')}\r\n                                </th>\r\n                            ))}\r\n                            </tr>\r\n                        ))}\r\n                        </thead>\r\n                        {/* Apply the table body props */}\r\n                        <tbody {...getTableBodyProps()}>\r\n                        {// Loop over the table rows\r\n                        page.map(row => {\r\n                            // Prepare the row for display\r\n                            prepareRow(row)\r\n                            return (\r\n                            // Apply the row props\r\n                            <tr {...row.getRowProps()}>\r\n                                {// Loop over the rows cells\r\n                                row.cells.map(cell => {\r\n                                // Apply the cell props\r\n                                return (\r\n                                    <td {...cell.getCellProps()}>\r\n                                    {// Render the cell contents\r\n                                    cell.render('Cell')}\r\n                                    </td>\r\n                                )\r\n                                })}\r\n                            </tr>\r\n                            )\r\n                        })}\r\n                        </tbody>\r\n                    </Table>\r\n                    <ul className=\"pagination-utilities\">\r\n                        <div className=\"page-item\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n                            First\r\n                        </div>\r\n                        <div className=\"page-item\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                            {'<'}\r\n                        </div>\r\n                        <div className=\"page-item\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n                            {'>'}\r\n                        </div>\r\n                        <div className=\"page-item\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n                            Last\r\n                        </div>\r\n                        <div>\r\n                            Page{' '}\r\n                            <strong>\r\n                                {pageIndex + 1} of {pageOptions.length}\r\n                            </strong>{' '}\r\n                        </div>\r\n                        <div className=\"form-control-container\">\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"number\"\r\n                                    defaultValue={pageIndex + 1}\r\n                                    onChange={e => {\r\n                                        const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                                        gotoPage(page)\r\n                                    }}\r\n                                    \r\n                                />\r\n                        </div>{' '}\r\n                        <select\r\n                            className=\"form-control-container\"\r\n                            value={pageSize}\r\n                            onChange={e => {\r\n                                setPageSize(Number(e.target.value))\r\n                            }}\r\n                            \r\n                        >\r\n                            {[5, 10, 20, 30, 40, 50].map(pageSize => (\r\n                                <option key={pageSize} value={pageSize}>\r\n                                    Show {pageSize}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </ul>\r\n                    <Button variant=\"success\" type=\"button\" className=\"submit-request-btn\"\r\n                        onClick={() => submit_request({\r\n                            \"collection_date\": collection_date,\r\n                            \"project_name\": project_name,\r\n                            \"item_details\": summaryItems,\r\n                            \"requestor\": profile[0][\"name\"]\r\n                        })}\r\n                    >Submit Request</Button>\r\n                    {errorMessage ? <p className=\"errorMessage\">{errorMessage}</p> : null}\r\n                </div>\r\n                <div className='request_item_summary'>\r\n                    <RequestItemSummary />\r\n                </div>\r\n            </div>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    summaryItems: state.RequestItemReducer.summaryItems,\r\n    storeItems: state.StoreItemReducer.storeItem,\r\n    isFetching: state.StoreItemReducer.is_fetching,\r\n    redirectTo: state.UrlReducer.redirectLink,\r\n    errorMessage: state.RequestItemReducer.errorMessage,\r\n    profile: state.UserReducer.profile\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetch_items: () => dispatch(FETCH_ITEM_ASYNC()),\r\n    submit_request: (dataObj) => dispatch(SUBMIT_REQUEST_ASYNC(dataObj)),\r\n    fetch_request_one: (item_id) => dispatch(FETCH_ONE_FOR_REQUEST_ASYNC(item_id))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestItemPage)","import React, { useEffect } from 'react'\r\nimport './requestlist.scss'\r\nimport { Table, Spinner } from 'react-bootstrap'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\nimport { FETCH_REQUEST_LIST_ASYNC, FETCH_FULFILLED_REQUEST_ASYNC } from '../../redux/requestitem/requestitem.action'\r\n\r\nconst RequestListPage = ({ fetch_fulfilled_requests, fetch_requests, isFetching, requestList }) => {\r\n\r\n    const location = useLocation()\r\n\r\n    useEffect(() => {\r\n        if(location.pathname === \"/request_list\"){\r\n            fetch_requests()\r\n        }\r\n        else {\r\n            fetch_fulfilled_requests()\r\n        }\r\n    }, [location])\r\n\r\n    return (\r\n        <div>\r\n        {\r\n            isFetching ? <Spinner animation=\"border\" variant=\"success\" />\r\n            :\r\n            <div className='requestlist_page'>\r\n                <h3>{ location.pathname === \"/request_list\" ? 'Request List' : 'History'}</h3>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Project</th>\r\n                            <th>Requestor</th>\r\n                            <th>Collect Date</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        requestList.map(request => {\r\n                            return (    \r\n                            <tr key={request.request_id}>\r\n                                <td>{request.request_id}</td>\r\n                                <td>{request.project_name}</td>\r\n                                <td>{request.requestor}</td>\r\n                                <td>{request.collection_date}</td>\r\n                                <td><Link className=\"link-btn\" to={`/fulfill/${request.request_id}`}>Detail</Link></td>\r\n                            </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isFetching: state.RequestItemReducer.is_fetching,\r\n    requestList: state.RequestItemReducer.requestList\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetch_requests: () => dispatch(FETCH_REQUEST_LIST_ASYNC()),\r\n    fetch_fulfilled_requests: () => dispatch(FETCH_FULFILLED_REQUEST_ASYNC())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestListPage)","import React, {useEffect, useMemo } from 'react'\r\nimport './storelist.scss'\r\n\r\nimport { Table, Button, Spinner } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom' \r\n\r\nimport { connect } from 'react-redux'\r\nimport { DISPLAY_ADDITEM_COMPONENT, FETCH_ITEM_ASYNC } from '../../redux/storeitem/storeitem.action'\r\n\r\nimport { useTable, usePagination } from 'react-table'\r\n\r\nconst StoreListPage = ({ toggleAddItem, fetchItem, storeItem, isFetching, redirectTo }) => {\r\n\r\n    useEffect(() => {\r\n        fetchItem()\r\n    },[])\r\n\r\n    const columns = useMemo(() => [\r\n        {\r\n            Header: '#',\r\n            accessor: 'item_id'\r\n        },\r\n        {\r\n            Header: 'Item',\r\n            accessor: 'item_name'\r\n        },\r\n        {\r\n            Header: 'Available Quantities',\r\n            accessor: 'available_quantity'\r\n        },\r\n        {\r\n            Header: 'Reserved Quantities',\r\n            accessor: 'reserved_quantity'\r\n        },\r\n        {\r\n            Header: 'Brand',\r\n            accessor: 'brand'\r\n        },\r\n        {\r\n            Header: 'Notice',\r\n            accessor: 'notice'\r\n        },\r\n        {\r\n            Header: 'Action',\r\n            accessor: 'action',\r\n            Cell: ({row}) => {\r\n                return <Link className=\"link-btn\" to={`/edit/${row.original.item_id}`}>Detail</Link>\r\n            }\r\n        }\r\n    ], [])\r\n\r\n\r\n    // const data = React.useMemo(() => storeItem,[])\r\n    const data = storeItem\r\n    \r\n    const tableInstance = useTable({ columns, data, initialState: { pageIndex: 0, pageSize: 9} }, usePagination)\r\n        \r\n    const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize}\r\n    } = tableInstance\r\n\r\n    // START - To reload this page after use add the item\r\n    if(redirectTo === 'reload'){\r\n        fetchItem()\r\n    }\r\n    // END - To reload this page after use add the item\r\n\r\n    return (\r\n        <div className=\"storelist_page\">\r\n            <h2 className=\"storelist_title\">Inhouse List</h2>\r\n            <Button variant='info' className='addItem_btn' onClick={toggleAddItem}>Add Item</Button>\r\n            {\r\n                isFetching? <Spinner animation=\"border\" variant=\"success\" />\r\n                :\r\n                <div>\r\n                    <Table {...getTableProps()}>\r\n                        <thead>\r\n                        {// Loop over the header rows\r\n                        headerGroups.map(headerGroup => (\r\n                            // Apply the header row props\r\n                            <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {// Loop over the headers in each row\r\n                            headerGroup.headers.map(column => (\r\n                                // Apply the header cell props\r\n                                <th {...column.getHeaderProps()}>\r\n                                {// Render the header\r\n                                column.render('Header')}\r\n                                </th>\r\n                            ))}\r\n                            </tr>\r\n                        ))}\r\n                        </thead>\r\n                        {/* Apply the table body props */}\r\n                        <tbody {...getTableBodyProps()}>\r\n                        {// Loop over the table rows\r\n                        page.map(row => {\r\n                            // Prepare the row for display\r\n                            prepareRow(row)\r\n                            return (\r\n                            // Apply the row props\r\n                            <tr {...row.getRowProps()}>\r\n                                {// Loop over the rows cells\r\n                                row.cells.map(cell => {\r\n                                // Apply the cell props\r\n                                return (\r\n                                    <td {...cell.getCellProps()}>\r\n                                    {// Render the cell contents\r\n                                    cell.render('Cell')}\r\n                                    </td>\r\n                                )\r\n                                })}\r\n                            </tr>\r\n                            )\r\n                        })}\r\n                        </tbody>\r\n                    </Table>\r\n                    <ul className=\"pagination\">\r\n                        <li className=\"page-item\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n                            <a className=\"page-link\">First</a>\r\n                        </li>\r\n                        <li className=\"page-item\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                            <a className=\"page-link\">{'<'}</a>\r\n                        </li>\r\n                        <li className=\"page-item\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n                            <a className=\"page-link\">{'>'}</a>\r\n                        </li>\r\n                        <li className=\"page-item\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n                            <a className=\"page-link\">Last</a>\r\n                        </li>\r\n                        <li>\r\n                            <a className=\"page-link\">\r\n                                Page{' '}\r\n                                <strong>\r\n                                    {pageIndex + 1} of {pageOptions.length}\r\n                                </strong>{' '}\r\n                            </a>\r\n                        </li>\r\n                        <li className=\"page-link-container\">\r\n                            <a className=\"page-link\">\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"number\"\r\n                                    defaultValue={pageIndex + 1}\r\n                                    onChange={e => {\r\n                                        const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                                        gotoPage(page)\r\n                                    }}\r\n                                    style={{ width: '100px', height: '20px' }}\r\n                                />\r\n                            </a>\r\n                        </li>{' '}\r\n                        <select\r\n                            className=\"form-control\"\r\n                            value={pageSize}\r\n                            className=\"page-link-container\"\r\n                            onChange={e => {\r\n                                setPageSize(Number(e.target.value))\r\n                            }}\r\n                            style={{ width: '120px', height: '38px' }}\r\n                        >\r\n                            {[5, 10, 20, 30, 40, 50].map(pageSize => (\r\n                                <option key={pageSize} value={pageSize}>\r\n                                    Show {pageSize}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </ul>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    storeItem: state.StoreItemReducer.storeItem,\r\n    isFetching: state.StoreItemReducer.is_fetching,\r\n    redirectTo: state.UrlReducer.redirectLink\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    toggleAddItem: () => dispatch(DISPLAY_ADDITEM_COMPONENT),\r\n    fetchItem: () => dispatch(FETCH_ITEM_ASYNC())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StoreListPage)","import React, { useEffect } from 'react'\r\nimport './usermanagement.scss'\r\n\r\nimport { Button, Table, Spinner } from 'react-bootstrap'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { SHOW_VERIFICATION_COMPONENT } from '../../redux/verification/verification.action'\r\nimport { FETCH_USERS_ASYNC } from '../../redux/user/user.action'\r\n\r\nconst UserManagementPage = ({ userList, showVerification, fetchUsers, is_fetching, redirectTo }) => {\r\n\r\n    if(redirectTo === \"reload\"){\r\n        fetchUsers()\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchUsers()\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n        {\r\n            is_fetching ? <Spinner animation=\"border\" variant=\"success\" />\r\n            :\r\n            <div className=\"user_management_page\">\r\n                <h2 className=\"user_management_title\">User List</h2>\r\n                <Button variant='info' className='addUser_btn' onClick={() => showVerification(null)}>Add User</Button>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Role</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                        userList.map(user => {\r\n                            return (\r\n                                <tr key={user.id}>\r\n                                    <td>{user.id}</td>\r\n                                    <td>{user.name}</td>\r\n                                    <td>{user.email}</td>\r\n                                    <td>{user.role}</td>\r\n                                    <td><Button variant=\"danger\" size=\"sm\" className=\"delete-btn\" onClick={() => showVerification(user.id)}>Delete</Button></td>\r\n                                </tr>\r\n                            )\r\n                        }) \r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userList: state.UserReducer.user_list,\r\n    is_fetching: state.UserReducer.is_fetching,\r\n    redirectTo: state.UrlReducer.redirectLink\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    showVerification: (id) => dispatch(SHOW_VERIFICATION_COMPONENT(id)),\r\n    fetchUsers: () => dispatch(FETCH_USERS_ASYNC())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManagementPage)","import React, { useState, useEffect } from 'react'\r\nimport './edititem.scss'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Form, Button, Spinner } from 'react-bootstrap'\r\nimport { useParams, Redirect } from 'react-router-dom'\r\n\r\nimport { FETCH_SINGLEITEM_ASYNC, UPDATE_SINGLEITEM_ASYNC } from '../../redux/storeitem/storeitem.action'\r\n\r\nconst EditItemPage = ({ itemDetail, fetchDetail, singleItemFetching, updateItem, redirectTo }) => {\r\n    const { item_id } = useParams()\r\n\r\n    const [new_quantity, handleNewQuantity] = useState(0)\r\n    const [reserved_quantity, handleReservedQuantity] = useState(0)\r\n    const [new_notice, handleNotice] = useState('')\r\n\r\n    useEffect(() => {\r\n        fetchDetail(item_id)\r\n    }, [])\r\n\r\n    if(redirectTo.length !== 0){\r\n        return <Redirect to={`${redirectTo}`}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                itemDetail.length > 0 ?\r\n                <div className='edititem_page'>\r\n                    <h2 className=\"edititem_title\">Edit Item {item_id}</h2>\r\n                    {\r\n                        singleItemFetching ? <Spinner animation=\"border\" variant=\"success\" />\r\n                        :\r\n                        <Form>\r\n                            <Form.Group>\r\n                                <Form.Label><span>Item Name:</span> </Form.Label>\r\n                                <Form.Control plaintext readOnly defaultValue={itemDetail[0].item_name} />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label><span>Previous Available Quantities:</span> </Form.Label>\r\n                                <Form.Control plaintext readOnly defaultValue={itemDetail[0].available_quantity} />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label><span>Previous Reserved Quantities:</span> </Form.Label>\r\n                                <Form.Control plaintext readOnly defaultValue={itemDetail[0].reserved_quantity} />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                <Form.Label>Previous Notice</Form.Label>\r\n                                <Form.Control as=\"textarea\" rows={4} readOnly defaultValue={itemDetail[0].notice}/>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label><span>Brand:</span> </Form.Label>\r\n                                <Form.Control plaintext readOnly defaultValue={itemDetail[0].brand} />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label><span>Current Available Quantities:</span> </Form.Label>\r\n                                <Form.Control size='sm' type=\"number\" placeholder=\"Current available quantities\" min='0' onChange={(e) => handleNewQuantity(e.target.value)} />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label><span>Current Reserved Quantities:</span> </Form.Label>\r\n                                <Form.Control size='sm' type=\"number\" placeholder=\"Current reserved quantities\" min='0' onChange={(e) => handleReservedQuantity(e.target.value)} />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                <Form.Label>New Notice</Form.Label>\r\n                                <Form.Control as=\"textarea\" rows={4} onChange={(e) => handleNotice(e.target.value) }/>\r\n                            </Form.Group>\r\n                            <Button variant=\"success\" type=\"button\" \r\n                            onClick={() => updateItem({\r\n                                    \"item_id\": item_id,\r\n                                    \"available_quantity\": new_quantity,\r\n                                    \"reserved_quantity\": reserved_quantity,\r\n                                    \"notice\": new_notice\r\n                                    })\r\n                                }\r\n                            >\r\n                                Save & Edit\r\n                            </Button>\r\n                        </Form>            \r\n                    }\r\n                </div>: <Spinner animation=\"border\" variant=\"success\" />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    itemDetail: state.StoreItemReducer.singleItem,\r\n    singleItemFetching: state.StoreItemReducer.singleItem_is_fetching,\r\n    redirectTo: state.UrlReducer.redirectLink\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchDetail: (id) => dispatch(FETCH_SINGLEITEM_ASYNC(id)),\r\n    updateItem: (obj) => dispatch(UPDATE_SINGLEITEM_ASYNC(obj))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditItemPage)","import './App.scss';\r\n\r\n// Start Importing components\r\nimport Sidebar from './component/sidebar/sidebar.component'\r\nimport Topbar from './component/topbar/topbar.component'\r\nimport AddItem from './component/addItem/addItem.component'\r\nimport FulfillPage from './page/fulfillpage/fulfill.page';\r\nimport Verification from './component/verification/verification.component'\r\nimport AddUser from './component/addUser/adduser.component'\r\nimport DeleteUser from './component/deleteUser/deleteuser.component'\r\nimport RequestItemComponent from './component/requestItem/requestitem.component'\r\n// End Importing components\r\n\r\n// Start importing page components\r\nimport HomePage from './page/homepage/home.page'\r\nimport LoginPage from './page/loginpage/login.page';\r\nimport RequestItemPage from './page/requestitempage/request_item.page';\r\nimport RequestListPage from './page/requestlistpage/requestlist.page';\r\nimport StoreListPage from './page/storelistpage/storelist.page';\r\nimport UserManagementPage from './page/usermanagementpage/usermanagement.page'\r\n// End importing page components\r\n\r\n// Start Importing React Router\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport EditItemPage from './page/edititempage/edititem.page';\r\n// End Importing React Router\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nconst App = ({ isLoggedIn }) => {\r\n  \r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n      <AddItem />\r\n      <AddUser />\r\n      <DeleteUser />\r\n      <Verification />\r\n      <RequestItemComponent />\r\n      <Route path='/login'>\r\n        <LoginPage />\r\n      </Route>\r\n      {\r\n        isLoggedIn ?\r\n        <div className='App-content'>\r\n          <Sidebar className='sidebar-main'/>\r\n          <Topbar className='topbar-main'/>\r\n          <div className='main'>\r\n              <Route exact path='/'>\r\n                <HomePage />\r\n              </Route>\r\n              <Route path='/request_item'>\r\n                <RequestItemPage />\r\n              </Route>\r\n              <Route path='/fulfill/:request_id'>\r\n                <FulfillPage />\r\n              </Route>\r\n              <Route path='/request_list'>\r\n                <RequestListPage />\r\n              </Route>\r\n              <Route path='/user_management'>\r\n                <UserManagementPage />\r\n              </Route>\r\n              <Route path='/store_list'>\r\n                <StoreListPage />\r\n              </Route>\r\n              <Route path='/history'>\r\n                <RequestListPage />\r\n              </Route>\r\n              <Route path='/edit/:item_id'>\r\n                <EditItemPage />\r\n              </Route>\r\n          </div>\r\n        </div>\r\n        :              \r\n        <Redirect to=\"/login\"/>\r\n      }\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.UserReducer.profile,\r\n  isLoggedIn: state.UserReducer.isLoggedIn\r\n})\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import REQUEST_ITEM_CONSTANT from './requestitem.constant'\r\n\r\nconst INITIAL_STATE = {\r\n    summaryItems: [],\r\n    errorMessage: \"\",\r\n    is_submitting: false,\r\n    showRequestComponent: false,\r\n    requestList: [],\r\n    is_fetching: false,\r\n    is_singleFetching: false,\r\n    singleRequest: [],\r\n    request_items_detail: [],\r\n    oneItemRequest: []\r\n}\r\n\r\nconst RequestItemReducer = (state=INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case REQUEST_ITEM_CONSTANT.ADD_TO_SUMMARY:\r\n            if(action.payload.quantity >= 0){\r\n                state.summaryItems.map((item, index) => {\r\n                    if(item.name === action.payload.name){\r\n                        state.summaryItems.splice(index, 1)\r\n                        return {\r\n                            ...state,\r\n                            summaryItems: state.summaryItems.concat(action.payload),\r\n                            showRequestComponent: !state.showRequestComponent\r\n                        }\r\n                    }\r\n                })\r\n                return {\r\n                    ...state,\r\n                    summaryItems: state.summaryItems.concat(action.payload),\r\n                    showRequestComponent: !state.showRequestComponent\r\n                }\r\n            }\r\n            else {\r\n                return state\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.REMOVE_FROM_SUMMARY:\r\n            let newArray = state.summaryItems.filter(item => {\r\n                return item.name !== action.payload.name\r\n            })\r\n            return {\r\n                ...state,\r\n                summaryItems: [].concat(newArray)\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.SUBMIT_REQUEST_START:\r\n            return {\r\n                ...state,\r\n                is_submitting: true\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.SUBMIT_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                is_submitting: false,\r\n                errorMessage: \"\"\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.SUBMIT_REQUEST_FAILED:\r\n            return {\r\n                ...state,\r\n                is_submitting: false,\r\n                errorMessage: action.payload\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.FETCH_REQUEST_LIST_START:\r\n            return {\r\n                ...state,\r\n                is_fetching: true\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.FETCH_REQUEST_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                is_fetching: false,\r\n                errorMessage: \"\",\r\n                requestList: Array.from(action.payload)\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.FETCH_REQUEST_LIST_FAILED:\r\n            return {\r\n                ...state,\r\n                is_fetching: false,\r\n                errorMessage: action.payload\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.FETCH_ONE_FOR_REQUEST_START:\r\n            return {\r\n                ...state,\r\n                is_fetching: true\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.FETCH_ONE_FOR_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                is_fetching: false,\r\n                errorMessage: \"\",\r\n                oneItemRequest: Array.from(action.payload)\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.FETCH_ONE_FOR_REQUEST_FAILED:\r\n            return {\r\n                ...state,\r\n                is_fetching: false,\r\n                errorMessage: action.payload\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.FETCH_FULFILLED_REQUEST_START:\r\n            return {\r\n                ...state,\r\n                is_fetching: true\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.FETCH_FULFILLED_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                is_fetching: false,\r\n                errorMessage: \"\",\r\n                requestList: Array.from(action.payload)\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.FETCH_FULFILLED_REQUEST_FAILED:\r\n            return {\r\n                ...state,\r\n                is_fetching: false,\r\n                errorMessage: action.payload\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.FETCH_SINGLEREQUEST_START:\r\n            return {\r\n                ...state,\r\n                is_singleFetching: true\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.FETCH_SINGLEREQUEST_SUCCESS: \r\n            return {\r\n                ...state,\r\n                is_singleFetching: false,\r\n                errorMessage: \"\",\r\n                singleRequest: Array.from(action.payload),\r\n                request_items_detail: Array.from(action.payload[0][\"item_details\"])\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.FETCH_SINGLEREQUEST_FAILED:\r\n            return {\r\n                ...state,\r\n                is_singleFetching: false,\r\n                errorMessage: action.payload\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.RESET_SUMMARY:\r\n            return {\r\n                ...state,\r\n                errorMessage: \"\",\r\n                summaryItems: []\r\n            }\r\n        case REQUEST_ITEM_CONSTANT.SHOW_REQUEST_ITEM_COMPONENT:\r\n            return {\r\n                ...state,\r\n                showRequestComponent: !state.showRequestComponent\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default RequestItemReducer","const INITIAL_STATE = {\r\n    displayAddItem: false,\r\n    is_adding: false,\r\n    errorMessage: \"\",\r\n    storeItem: [],\r\n    is_fetching: false,\r\n    singleItem: [],\r\n    singleItem_is_fetching: false,\r\n    singleItem_is_updating: false\r\n}\r\n\r\nconst StoreItemReducer = (state=INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case \"DISPLAY_ADDITEM_COMPONENT\":\r\n            return {\r\n                ...state,\r\n                displayAddItem: !state.displayAddItem\r\n            }\r\n        case \"ADD_NEW_ITEM_START\":\r\n            return {\r\n                ...state,\r\n                is_adding: true\r\n            }\r\n        case \"ADD_NEW_ITEM_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                is_adding: false,\r\n                errorMessage: \"\"\r\n            }\r\n        case \"ADD_NEW_ITEM_FAILED\":\r\n            return {\r\n                ...state,\r\n                is_adding: false,\r\n                errorMessage: action.payload\r\n            }\r\n        case \"FETCH_ITEM_START\":\r\n            return {\r\n                ...state,\r\n                is_fetching: true\r\n            }\r\n        case \"FETCH_ITEM_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                is_fetching: false,\r\n                storeItem: Array.from(action.payload)\r\n            }\r\n        case \"FETCH_ITEM_FAILED\":\r\n            return {\r\n                ...state,\r\n                is_adding: false,\r\n                errorMessage: action.payload\r\n            }\r\n        case \"FETCH_SINGLEITEM_START\":\r\n            return {\r\n                ...state,\r\n                singleItem_is_fetching: true\r\n            }\r\n        case \"FETCH_SINGLEITEM_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                singleItem_is_fetching: false,\r\n                singleItem: Array.from(action.payload)\r\n            }\r\n        case \"FETCH_SINGLEITEM_FAILED\":\r\n            return {\r\n                ...state,\r\n                singleItem_is_fetching: false,\r\n                errorMessage: action.payload\r\n            }\r\n        case \"UPDATE_SINGLEITEM_START\":\r\n            return {\r\n                ...state,\r\n                singleItem_is_updating: true\r\n            }\r\n        case \"UPDATE_SINGLEITEM_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                singleItem_is_updating: false\r\n            }\r\n        case \"UPDATE_SINGLEITEM_FAILED\":\r\n            return {\r\n                ...state,\r\n                singleItem_is_updating: false,\r\n                errorMessage: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default StoreItemReducer","const INITIAL_STATE = {\r\n    is_deleting: false,\r\n    errorMessage: \"\",\r\n    is_adding: false,\r\n    user_list: [],\r\n    is_fetching: false,\r\n    singleUser: [],\r\n    isLoggedIn: false,\r\n    is_logging_in: false,\r\n    profile: []\r\n}\r\n\r\nexport const UserReducer = (state=INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case \"DELETE_USER_FROM_DATABASE_START\":\r\n            return {\r\n                ...state,\r\n                is_deleting: true,\r\n                errorMessage: \"\"\r\n            }\r\n        case \"DELETE_USER_FROM_DATABASE_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                is_deleting: false\r\n            }\r\n        case \"DELETE_USER_FROM_DATABASE_FAILED\":\r\n            return {\r\n                ...state,\r\n                is_deleting: false\r\n            }\r\n        case \"FETCH_USER_FROM_DATABASE_START\":\r\n            return {\r\n                ...state,\r\n                is_fetching: true,\r\n                errorMessage: \"\"\r\n            }\r\n        case \"FETCH_USER_FROM_DATABASE_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                is_fetching: false,\r\n                user_list: Array.from(action.payload)\r\n            }\r\n        case \"FETCH_USER_FROM_DATABASE_FAILED\":\r\n            return {\r\n                ...state,\r\n                is_fetching: false,\r\n                errorMessage: action.payload\r\n            }\r\n        case \"FETCH_SINGLEUSER_FROM_DATABASE_START\":\r\n            return {\r\n                ...state,\r\n                is_fetching: true,\r\n                errorMessage: \"\"\r\n            }\r\n        case \"FETCH_SINGLEUSER_FROM_DATABASE_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                is_fetching: false,\r\n                singleUser: Array.from(action.payload)\r\n            }\r\n        case \"FETCH_SINGLEUSER_FROM_DATABASE_FAILED\":\r\n            return {\r\n                ...state,\r\n                is_fetching: false,\r\n                errorMessage: action.payload\r\n            }\r\n        case \"ADD_NEW_USER_START\":\r\n            return {\r\n                ...state,\r\n                is_adding: true\r\n            }\r\n        case \"ADD_NEW_USER_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                is_adding: false,\r\n                errorMessage: \"\"\r\n            }\r\n        case \"ADD_NEW_USER_FAILED\":\r\n            return {\r\n                ...state,\r\n                is_adding: false,\r\n                errorMessage: action.payload\r\n            }\r\n        case \"LOGIN_USER_START\":\r\n            return {\r\n                ...state,\r\n                is_logging_in: true\r\n            }\r\n        case \"LOGIN_USER_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                is_logging_in: false,\r\n                errorMessage: \"\",\r\n                isLoggedIn: true,\r\n                profile: [].concat(action.payload)\r\n            }\r\n        case \"LOGIN_USER_FAILED\":\r\n            return {\r\n                ...state,\r\n                is_logging_in: false,\r\n                errorMessage: action.payload\r\n            }\r\n        case \"LOGOUT\":\r\n            return {\r\n                ...state,\r\n                profile: [].concat([]),\r\n                isLoggedIn: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {VERIFICATION_CONSTANT} from './verification.constant'\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    verificationDisplay: false,\r\n    capturedID: null,\r\n    authorized: false,\r\n    is_verifying: false,\r\n    errorMessage: \"\"\r\n}\r\n\r\nconst verificationReducer = (state=INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case VERIFICATION_CONSTANT.SHOW_VERIFICATION_COMPONENT:\r\n            return {\r\n                ...state,\r\n                verificationDisplay: true,\r\n                capturedID: action.payload\r\n            }\r\n        case VERIFICATION_CONSTANT.CLOSE_DISPLAY:\r\n            return {\r\n                ...state,\r\n                verificationDisplay: false\r\n            }\r\n        case VERIFICATION_CONSTANT.VERIFY_START:\r\n            return {\r\n                ...state,\r\n                is_verifying: true\r\n            }\r\n        case VERIFICATION_CONSTANT.VERIFY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                is_verifying: false,\r\n                authorized: true,\r\n                errorMessage: \"\"\r\n            }\r\n        case VERIFICATION_CONSTANT.VERIFY_FAILED:\r\n            return {\r\n                ...state,\r\n                is_verifying: false,\r\n                authorized: false,\r\n                errorMessage: action.payload\r\n            }\r\n        case VERIFICATION_CONSTANT.RESET_AUTHORIZED:\r\n            return {\r\n                ...state,\r\n                authorized: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default verificationReducer","import URL_CONSTANT from './url.constant'\r\n\r\nconst INITIAL_STATE = {\r\n    redirectLink: \"\"\r\n}\r\n\r\nconst UrlReducer = (state=INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case URL_CONSTANT.REDIRECT_TO:\r\n            return {\r\n                ...state,\r\n                redirectLink: action.payload\r\n            }\r\n        case URL_CONSTANT.RESET_REDIRECT:\r\n            return {\r\n                ...state,\r\n                redirectLink: \"\"\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default UrlReducer","import FULFILL_REQUEST_CONSTANT from './fulfillrequest.constant'\r\n\r\nconst INITIAL_STATE = {\r\n    is_submitting: false,\r\n    errorMessage: \"\",\r\n    is_cancelling: false\r\n}\r\n\r\nconst FulfillRequestReducer = (state=INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case FULFILL_REQUEST_CONSTANT.FULFILL_REQUEST_START:\r\n            return {\r\n                ...state,\r\n                is_submitting: true\r\n            }\r\n        case FULFILL_REQUEST_CONSTANT.FULFILL_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                is_submitting: false,\r\n                errorMessage: \"\"\r\n            }\r\n        case FULFILL_REQUEST_CONSTANT.FULFILL_REQUEST_FAILED:\r\n            return {\r\n                ...state,\r\n                is_submitting: false,\r\n                errorMessage: action.payload\r\n            }\r\n        case FULFILL_REQUEST_CONSTANT.CANCEL_REQUEST_START:\r\n            return {\r\n                ...state,\r\n                is_cancelling: true\r\n            }\r\n        case FULFILL_REQUEST_CONSTANT.CANCEL_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                is_cancelling: false,\r\n                errorMessage: \"\"\r\n            }\r\n        case FULFILL_REQUEST_CONSTANT.CANCEL_REQUEST_FAILED:\r\n            return {\r\n                ...state,\r\n                is_cancelling: false,\r\n                errorMessage: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default FulfillRequestReducer","import CHART_CONSTANT from './chart.constant'\r\n\r\nconst INITIAL_STATE = {\r\n    is_fetching_pie: false,\r\n    pie_data: [],\r\n    errorMessage_pie: \"\",\r\n    errorMessage_line: \"\",\r\n    is_fetching_line: false,\r\n    line_data: [],\r\n}\r\n\r\nconst ChartReducer = (state=INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case CHART_CONSTANT.FETCH_FOR_PIE_START:\r\n            return {\r\n                ...state,\r\n                is_fetching_pie: true\r\n            }\r\n        case CHART_CONSTANT.FETCH_FOR_PIE_SUCCESS:\r\n            const newPayload = action.payload.map(item => {\r\n                item[\"sum\"] = parseInt(item[\"sum\"])\r\n                return item\r\n            })\r\n            return {\r\n                ...state,\r\n                is_fetching_pie: false,\r\n                pie_data: [].concat(newPayload)\r\n            }\r\n        case CHART_CONSTANT.FETCH_FOR_PIE_FAILED:\r\n            return {\r\n                ...state,\r\n                is_fetching_pie: false,\r\n                errorMessage_pie: action.payload\r\n            }\r\n        case CHART_CONSTANT.FETCH_FOR_LINE_START:\r\n            return {\r\n                ...state,\r\n                is_fetching_line: true\r\n            }\r\n        case CHART_CONSTANT.FETCH_FOR_LINE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                is_fetching_line: false,\r\n                line_data: [].concat(action.payload)\r\n            }\r\n        case CHART_CONSTANT.FETCH_FOR_LINE_FAILED:\r\n            return {\r\n                ...state,\r\n                is_fetching_line: false,\r\n                errorMessage_line: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default ChartReducer","const INITIAL_STATE = {\r\n    display_sidebar: false\r\n}\r\n\r\nconst ScalingReducer = (state=INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case \"TOOGLE_SIDEBAR_IN_SMALL_SCREEN\":\r\n            return {\r\n                ...state,\r\n                display_sidebar: !state.display_sidebar\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default ScalingReducer","import { combineReducers } from 'redux'\r\nimport RequestItemReducer from '../requestitem/requestitem.reducer'\r\nimport StoreItemReducer from '../storeitem/storeitem.reducer'\r\nimport { UserReducer } from '../user/user.reducer'\r\nimport verificationReducer from '../verification/verification.reducer'\r\nimport UrlReducer from '../url/url.reducer'\r\nimport FulfillRequestReducer from '../fulfillrequest/fulfillrequest.reducer'\r\nimport ChartReducer from '../chart/chart.reducer'\r\nimport ScalingReducer from '../scaling/scaling.reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    RequestItemReducer: RequestItemReducer,\r\n    StoreItemReducer: StoreItemReducer,\r\n    verificationReducer: verificationReducer,\r\n    UserReducer: UserReducer,\r\n    UrlReducer: UrlReducer,\r\n    FulfillRequestReducer: FulfillRequestReducer,\r\n    ChartReducer: ChartReducer,\r\n    ScalingReducer: ScalingReducer\r\n})\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware } from 'redux'\r\nimport logger from 'redux-logger'\r\nimport rootReducer from '../root/root-reducer'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst middlewares = [logger, thunk]\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares))\r\n\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \r\nimport 'bootstrap-css-only/css/bootstrap.min.css'; \r\nimport 'mdbreact/dist/css/mdb.css';\r\n\r\nimport { Provider } from 'react-redux'\r\n\r\nimport store from './redux/store/store'\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}